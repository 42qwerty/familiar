#!/bin/bash

# Installation script for the Familiar project

# --- Configuration ---
PROJECT_DIR=$(pwd) # Get the current directory (where the script is run from)
SERVICE_NAME="familiar-bot"
SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
ENV_DIR="/etc/familiar"
ENV_FILE="${ENV_DIR}/familiar_service.env"
CURRENT_USER=$(whoami)
CURRENT_GROUP=$(id -gn "$CURRENT_USER")
PYTHON_PATH=$(which python3) # Find system python3 path

# --- Check for root privileges ---
if [ "$EUID" -ne 0 ]; then
  echo "Пожалуйста, запустите этот скрипт с правами root (используя sudo)."
  exit 1
fi

echo "--- Установка Фамильяра ---"
echo "Рабочая директория проекта: ${PROJECT_DIR}"
echo "Имя пользователя: ${CURRENT_USER}"
echo "Путь к Python 3: ${PYTHON_PATH}"

# --- Get Telegram Bot Token ---
read -p "Введите ваш Telegram Bot Token: " TELEGRAM_BOT_TOKEN
if [ -z "$TELEGRAM_BOT_TOKEN" ]; then
  echo "Ошибка: Токен не может быть пустым."
  exit 1
fi

# --- Create Environment Directory and File ---
echo "--> Создание директории и файла окружения..."
mkdir -p "$ENV_DIR"
if [ $? -ne 0 ]; then echo "Ошибка при создании директории ${ENV_DIR}"; exit 1; fi

# Create env file with token
echo "TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}" > "$ENV_FILE"
if [ $? -ne 0 ]; then echo "Ошибка при создании файла ${ENV_FILE}"; exit 1; fi

# Set permissions for env file
chown root:"$CURRENT_GROUP" "$ENV_FILE"
chmod 640 "$ENV_FILE"
echo "Файл окружения ${ENV_FILE} создан."

# --- Create systemd Service File ---
echo "--> Создание файла сервиса systemd..."

# Use cat with EOF to create the service file content
cat << EOF > "$SERVICE_FILE"
# Systemd unit file for the Familiar Telegram Bot
# Generated by install.sh

[Unit]
Description=Familiar Telegram Bot Assistant
After=network.target ollama.service
Requires=ollama.service

[Service]
User=${CURRENT_USER}
Group=${CURRENT_GROUP}
WorkingDirectory=${PROJECT_DIR}
EnvironmentFile=${ENV_FILE}
ExecStart=${PYTHON_PATH} ${PROJECT_DIR}/telegram_bot.py
Restart=on-failure
RestartSec=5s
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF

if [ $? -ne 0 ]; then echo "Ошибка при создании файла ${SERVICE_FILE}"; exit 1; fi

echo "Файл сервиса ${SERVICE_FILE} создан."

# --- Reload systemd, enable and start the service ---
echo "--> Перезагрузка systemd и запуск сервиса..."
systemctl daemon-reload
systemctl enable "${SERVICE_NAME}.service"
if [ $? -ne 0 ]; then echo "Ошибка при включении автозапуска сервиса."; exit 1; fi
systemctl start "${SERVICE_NAME}.service"
if [ $? -ne 0 ]; then echo "Ошибка при запуске сервиса. Проверьте логи: journalctl -u ${SERVICE_NAME}.service"; exit 1; fi

echo "Сервис ${SERVICE_NAME} включен и запущен."

# --- Check service status ---
echo "--> Текущий статус сервиса:"
systemctl status "${SERVICE_NAME}.service" --no-pager # --no-pager prevents less from opening

echo "--- Установка завершена! ---"
echo "Не забудьте настроить автозапуск скрипта update_familiar_env.sh при входе в систему для обновления переменных GUI."

exit 0
