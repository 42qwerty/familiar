{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "/home/qwerty/familiar/intent_handlers/handle_manage_app.py",
			"settings":
			{
				"buffer_size": 3357,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA/gsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					2,
					"left_delete",
					null,
					"AgAAAD8BAAAAAAAAPwEAAAAAAAABAAAALj4BAAAAAAAAPgEAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAQAAAAAAAEABAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAbxEAAAAAAAAAAAAAbxEAAAAAAABvEQAAAAAAAPcPAAAjINCk0LDQudC7OiBpbnRlbnRfaGFuZGxlcnMvaGFuZGxlX21hbmFnZV9hcHAucHkKIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KCmltcG9ydCBzaHV0aWwgIyDQlNC70Y8gc2h1dGlsLndoaWNoCmltcG9ydCB0aW1lICAgIyDQlNC70Y8gdGltZS5zbGVlcAoKIyDQmNC80L/QvtGA0YLQuNGA0YPQtdC8INC90LDRiNC4INC90LjQt9C60L7Rg9GA0L7QstC90LXQstGL0LUg0YTRg9C90LrRhtC40Lgg0LTQtdC50YHRgtCy0LjQuQojINCY0YHQv9C+0LvRjNC30YPQtdC8INC+0YLQvdC+0YHQuNGC0LXQu9GM0L3Ri9C5INC40LzQv9C+0YDRgiwg0YLQsNC6INC60LDQuiDQvdCw0YXQvtC00LjQvNGB0Y8g0LLQvdGD0YLRgNC4INC/0LDQutC10YLQsCBpbnRlbnRfaGFuZGxlcnMKIyDQutC+0YLQvtGA0YvQuSDQvdCwINC+0LTQvdC+0Lwg0YPRgNC+0LLQvdC1INGBINC/0LDQutC10YLQvtC8IGFjdGlvbnMKZnJvbSBhY3Rpb25zIGltcG9ydCBydW5fYXBwX2FjdGlvbgoKZGVmIGhhbmRsZShjYW5vbmljYWxfbmFtZSk6CiAgICAiIiIKICAgINCe0LHRgNCw0LHQsNGC0YvQstCw0LXRgiDQuNC90YLQtdC90YIgbWFuYWdlX2FwcDog0LfQsNC/0YPRgdC60LDQtdGCINC/0YDQuNC70L7QttC10L3QuNC1LCDQtdGB0LvQuCDQvdC1INC30LDQv9GD0YnQtdC90L4sCiAgICDQuNC70Lgg0LDQutGC0LjQstC40YDRg9C10YIg0LXQs9C+INC+0LrQvdC+LCDQtdGB0LvQuCDQt9Cw0L/Rg9GJ0LXQvdC+LgogICAgY2Fub25pY2FsX25hbWU6INCd0L7RgNC80LDQu9C40LfQvtCy0LDQvdC90L7QtSDQuNC80Y8g0L/RgNC40LvQvtC20LXQvdC40Y8gKNC/0L7RgdC70LUg0L7QsdGA0LDQsdC+0YLQutC4INCw0LvQuNCw0YHQvtCyKS4KICAgINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGB0YLRgNC+0LrRgyDRgSDRgNC10LfRg9C70YzRgtCw0YLQvtC8INC00LvRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8uCiAgICAiIiIKICAgIGlmIG5vdCBjYW5vbmljYWxfbmFtZToKICAgICAgICAjINCt0YLQsCDQv9GA0L7QstC10YDQutCwINC90LAg0LLRgdGP0LrQuNC5INGB0LvRg9GH0LDQuSwg0LTQuNGB0L/QtdGC0YfQtdGAINC90LUg0LTQvtC70LbQtdC9INC/0LXRgNC10LTQsNGC0Ywg0L/Rg9GB0YLQvtC1INC40LzRjwogICAgICAgIHByaW50KCJbSEFORExFUl9NQU5BR0VfQVBQXVtFUlJPUl0g0J/QvtC70YPRh9C10L3QviDQv9GD0YHRgtC+0LUg0LjQvNGPINC/0YDQuNC70L7QttC10L3QuNGPLiIpCiAgICAgICAgcmV0dXJuICLQndC1INGD0LrQsNC30LDQvdC+INC40LzRjyDQv9GA0LjQu9C+0LbQtdC90LjRjy4iCgogICAgcHJpbnQoZiJbSEFORExFUl9NQU5BR0VfQVBQXVtJTkZPXSDQntCx0YDQsNCx0L7RgtC60LAg0LTQu9GPOiAne2Nhbm9uaWNhbF9uYW1lfSciKQogICAgYWN0aXZhdGVkX3N1Y2Nlc3NmdWxseSA9IEZhbHNlCgogICAgIyAxLiDQn9GA0L7QstC10YDRj9C10LwsINC30LDQv9GD0YnQtdC9INC70Lgg0YPQttC1INC/0YDQvtGG0LXRgdGBCiAgICBydW5uaW5nX3BpZCA9IHJ1bl9hcHBfYWN0aW9uLmZpbmRfcnVubmluZ19wcm9jZXNzX3BpZChjYW5vbmljYWxfbmFtZSkKCiAgICBpZiBydW5uaW5nX3BpZDoKICAgICAgICAjIDJhLiDQldGB0LvQuCDQt9Cw0L/Rg9GJ0LXQvSwg0L/Ri9GC0LDQtdC80YHRjyDQsNC60YLQuNCy0LjRgNC+0LLQsNGC0Ywg0L7QutC90L4KICAgICAgICBwcmludChmIltIQU5ETEVSX01BTkFHRV9BUFBdW0lORk9dINCf0YDQuNC70L7QttC10L3QuNC1ICd7Y2Fub25pY2FsX25hbWV9JyDRg9C20LUg0LfQsNC/0YPRidC10L3QviAoUElEOiB7cnVubmluZ19waWR9KS4g0JDQutGC0LjQstC40YDRg9C10Lwg0L7QutC90L4uLi4iKQogICAgICAgIGFjdGl2YXRlZF9zdWNjZXNzZnVsbHkgPSBydW5fYXBwX2FjdGlvbi5hY3RpdmF0ZV93aW5kb3dfYnlfY2xhc3MoY2Fub25pY2FsX25hbWUpCiAgICAgICAgaWYgYWN0aXZhdGVkX3N1Y2Nlc3NmdWxseToKICAgICAgICAgICAgcmV0dXJuIGYi0J7QutC90L4gJ3tjYW5vbmljYWxfbmFtZX0nINCw0LrRgtC40LLQuNGA0L7QstCw0L3Qvi4iCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIGYi0J/RgNC40LvQvtC20LXQvdC40LUgJ3tjYW5vbmljYWxfbmFtZX0nINC30LDQv9GD0YnQtdC90L4sINC90L4g0L3QtSDRg9C00LDQu9C+0YHRjCDQsNC60YLQuNCy0LjRgNC+0LLQsNGC0Ywg0L7QutC90L4uIgogICAgZWxzZToKICAgICAgICAjIDJiLiDQldGB0LvQuCDQvdC1INC30LDQv9GD0YnQtdC9LCDQuNGJ0LXQvCDQuNGB0L/QvtC70L3Rj9C10LzRi9C5INGE0LDQudC7CiAgICAgICAgcHJpbnQoZiJbSEFORExFUl9NQU5BR0VfQVBQXVtJTkZPXSDQn9GA0LjQu9C+0LbQtdC90LjQtSAne2Nhbm9uaWNhbF9uYW1lfScg0L3QtSDQt9Cw0L/Rg9GJ0LXQvdC+LiDQmNGJ0LXQvCDQuNGB0L/QvtC70L3Rj9C10LzRi9C5INGE0LDQudC7Li4uIikKICAgICAgICBleGVjdXRhYmxlX3BhdGggPSBzaHV0aWwud2hpY2goY2Fub25pY2FsX25hbWUpCgogICAgICAgIGlmIGV4ZWN1dGFibGVfcGF0aDoKICAgICAgICAgICAgIyAzLiDQl9Cw0L/Rg9GB0LrQsNC10Lwg0L/RgNC40LvQvtC20LXQvdC40LUKICAgICAgICAgICAgcHJpbnQoZiJbSEFORExFUl9NQU5BR0VfQVBQXVtJTkZPXSDQndCw0LnQtNC10L0g0LjRgdC/0L7Qu9C90Y/QtdC80YvQuSDRhNCw0LnQuzoge2V4ZWN1dGFibGVfcGF0aH0uINCX0LDQv9GD0YHQutCw0LXQvC4uLiIpCiAgICAgICAgICAgIGlmIHJ1bl9hcHBfYWN0aW9uLnJ1bl9hcHBsaWNhdGlvbihleGVjdXRhYmxlX3BhdGgpOgogICAgICAgICAgICAgICAgIyA0LiDQn9GL0YLQsNC10LzRgdGPINCw0LrRgtC40LLQuNGA0L7QstCw0YLRjCDQvtC60L3QviDQv9C+0YHQu9C1INC30LDQv9GD0YHQutCwCiAgICAgICAgICAgICAgICBwcmludChmIltIQU5ETEVSX01BTkFHRV9BUFBdW0lORk9dINCf0YDQuNC70L7QttC10L3QuNC1ICd7Y2Fub25pY2FsX25hbWV9JyDQt9Cw0L/Rg9GJ0LXQvdC+LiDQltC00LXQvCDQuCDQv9GL0YLQsNC10LzRgdGPINCw0LrRgtC40LLQuNGA0L7QstCw0YLRjC4uLiIpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEuNSkgIyDQn9Cw0YPQt9CwLCDRh9GC0L7QsdGLINC+0LrQvdC+INGD0YHQv9C10LvQviDQv9C+0Y/QstC40YLRjNGB0Y8KICAgICAgICAgICAgICAgIGFjdGl2YXRlZF9zdWNjZXNzZnVsbHkgPSBydW5fYXBwX2FjdGlvbi5hY3RpdmF0ZV93aW5kb3dfYnlfY2xhc3MoY2Fub25pY2FsX25hbWUpCiAgICAgICAgICAgICAgICBpZiBhY3RpdmF0ZWRfc3VjY2Vzc2Z1bGx5OgogICAgICAgICAgICAgICAgICAgIHJldHVybiBmItCf0YDQuNC70L7QttC10L3QuNC1ICd7Y2Fub25pY2FsX25hbWV9JyDQt9Cw0L/Rg9GJ0LXQvdC+INC4INCw0LrRgtC40LLQuNGA0L7QstCw0L3Qvi4iCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBmItCf0YDQuNC70L7QttC10L3QuNC1ICd7Y2Fub25pY2FsX25hbWV9JyDQt9Cw0L/Rg9GJ0LXQvdC+ICjQvdC+INC+0LrQvdC+INC90LUg0LDQutGC0LjQstC40YDQvtCy0LDQvdC+KS4iCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAjINCe0YjQuNCx0LrQsCDQt9Cw0L/Rg9GB0LrQsCAo0YPQttC1INC30LDQu9C+0LPQuNGA0L7QstCw0L3QsCDQsiBydW5fYXBwbGljYXRpb24pCiAgICAgICAgICAgICAgICByZXR1cm4gZiLQndC1INGD0LTQsNC70L7RgdGMINC30LDQv9GD0YHRgtC40YLRjCAne2Nhbm9uaWNhbF9uYW1lfScuIgogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMg0J3QtSDQvdCw0YjQu9C4INC40YHQv9C+0LvQvdGP0LXQvNGL0Lkg0YTQsNC50LsKICAgICAgICAgICAgcHJpbnQoZiJbSEFORExFUl9NQU5BR0VfQVBQXVtFUlJPUl0g0JjRgdC/0L7Qu9C90Y/QtdC80YvQuSDRhNCw0LnQuyDQtNC70Y8gJ3tjYW5vbmljYWxfbmFtZX0nINC90LUg0L3QsNC50LTQtdC9INCyINGB0LjRgdGC0LXQvNC1IChQQVRIKS4iKQogICAgICAgICAgICByZXR1cm4gZiLQn9GA0LjQu9C+0LbQtdC90LjQtSAne2Nhbm9uaWNhbF9uYW1lfScg0L3QtSDQvdCw0LnQtNC10L3QviDQsiDRgdC40YHRgtC10LzQtS4i",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAHQ0AAAAAAAAAAAAAHQ0AAAAAAAAdDQAAAAAAAJ8WAAAjINCk0LDQudC7OiBpbnRlbnRfaGFuZGxlcnMvaGFuZGxlX21hbmFnZV9hcHAucHkKIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KCmltcG9ydCBzaHV0aWwgIyDQlNC70Y8gc2h1dGlsLndoaWNoCmltcG9ydCB0aW1lICAgIyDQlNC70Y8gdGltZS5zbGVlcAoKIyDQmNC80L/QvtGA0YLQuNGA0YPQtdC8INC90LDRiNC4INC90LjQt9C60L7Rg9GA0L7QstC90LXQstGL0LUg0YTRg9C90LrRhtC40Lgg0LTQtdC50YHRgtCy0LjQuQojINCY0YHQv9C+0LvRjNC30YPQtdC8INGC0L7Rh9C60YMsINGC0LDQuiDQutCw0LogbWFuYWdlX2FwcF9hY3Rpb24ucHkg0YLQtdC/0LXRgNGMINCyINGC0L7QuSDQttC1INC/0LDQv9C60LUgYWN0aW9ucywKIyDQsCDRjdGC0L7RgiDRhNCw0LnQuyDQsiBpbnRlbnRfaGFuZGxlcnMuIFB5dGhvbiDQvdCw0LnQtNC10YIg0YfQtdGA0LXQtyBzeXMucGF0aC4KIyDQldGB0LvQuCDQsdGD0LTRg9GCINC/0YDQvtCx0LvQtdC80YssINCy0LXRgNC90LXQvNGB0Y8g0Log0L7RgtC90L7RgdC40YLQtdC70YzQvdGL0Lwg0LjQu9C4INC90LDRgdGC0YDQvtC40LwgUFlUSE9OUEFUSC4KIyBVUERBVEU6INCf0YDQsNCy0LjQu9GM0L3Ri9C5INC40LzQv9C+0YDRgiDQsdGD0LTQtdGCINCw0LHRgdC+0LvRjtGC0L3Ri9C8INC+0YIg0LrQvtGA0L3RjyDQv9GA0L7QtdC60YLQsCwg0LXRgdC70Lgg0LfQsNC/0YPRgdC60LDRgtGMINGH0LXRgNC10LcgcHl0aG9uIC1tCiMg0LjQu9C4INC10YHQu9C4INCz0LvQsNCy0L3QsNGPINC/0LDQv9C60LAg0LIgc3lzLnBhdGgKZnJvbSBhY3Rpb25zIGltcG9ydCBtYW5hZ2VfYXBwX2FjdGlvbiAjINCY0LzRjyDRhNCw0LnQu9CwINC40LfQvNC10L3QtdC90L4KCmRlZiBoYW5kbGUocGFyYW1ldGVycywgYWxpYXNlcyk6CiAgICAiIiIKICAgINCe0LHRgNCw0LHQsNGC0YvQstCw0LXRgiDQuNC90YLQtdC90YIgbWFuYWdlX2FwcDog0LfQsNC/0YPRgdC60LDQtdGCL9GE0L7QutGD0YHQuNGA0YPQtdGCINC40LvQuCDQt9Cw0LrRgNGL0LLQsNC10YIg0L/RgNC40LvQvtC20LXQvdC40LUuCiAgICBwYXJhbWV0ZXJzOiDQodC70L7QstCw0YDRjCDRgSDQv9Cw0YDQsNC80LXRgtGA0LDQvNC4INC+0YIgTkxVICjQtNC+0LvQttC10L0g0YHQvtC00LXRgNC20LDRgtGMICdhY3Rpb24nINC4ICdhcHBfbmFtZScpLgogICAgYWxpYXNlczog0KHQu9C+0LLQsNGA0Ywg0YEg0LDQu9C40LDRgdCw0LzQuCDQv9GA0LjQu9C+0LbQtdC90LjQuS4KICAgINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGB0YLRgNC+0LrRgyDRgSDRgNC10LfRg9C70YzRgtCw0YLQvtC8INC00LvRjyDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8uCiAgICAiIiIKICAgIGFjdGlvbiA9IHBhcmFtZXRlcnMuZ2V0KCJhY3Rpb24iKQogICAgYXBwX25hbWVfcmF3ID0gcGFyYW1ldGVycy5nZXQoImFwcF9uYW1lIikKCiAgICBpZiBub3QgYWN0aW9uIG9yIG5vdCBhcHBfbmFtZV9yYXc6CiAgICAgICAgcHJpbnQoIltIQU5ETEVSX01BTkFHRV9BUFBdW0VSUk9SXSDQntGC0YHRg9GC0YHRgtCy0YPQtdGCICdhY3Rpb24nINC40LvQuCAnYXBwX25hbWUnINCyINC/0LDRgNCw0LzQtdGC0YDQsNGFLiIpCiAgICAgICAgcmV0dXJuICLQndC1INC/0L7QvdGP0LvQsCwg0YfRgtC+INGB0LTQtdC70LDRgtGMINGBINC/0YDQuNC70L7QttC10L3QuNC10Lwg0LjQu9C4INC60LDQutC40Lwg0LjQvNC10L3QvdC+LiIKCiAgICAjINCd0L7RgNC80LDQu9C40LfRg9C10Lwg0LjQvNGPINC30LTQtdGB0YwsINCy0L3Rg9GC0YDQuCDRhdC10L3QtNC70LXRgNCwCiAgICBjYW5vbmljYWxfbmFtZSA9IGFsaWFzZXMuZ2V0KGFwcF9uYW1lX3Jhdy5sb3dlcigpLCBhcHBfbmFtZV9yYXcubG93ZXIoKSkKICAgIHByaW50KGYiW0hBTkRMRVJfTUFOQUdFX0FQUF1bSU5GT10g0JTQtdC50YHRgtCy0LjQtTogJ3thY3Rpb259Jywg0J/RgNC40LvQvtC20LXQvdC40LU6ICd7Y2Fub25pY2FsX25hbWV9JyAocmF3OiAne2FwcF9uYW1lX3Jhd30nKSIpCgogICAgIyAtLS0g0JvQvtCz0LjQutCwINC00LvRjyBhY3Rpb246ICJvcGVuIiAtLS0KICAgIGlmIGFjdGlvbiA9PSAib3BlbiI6CiAgICAgICAgcnVubmluZ19waWQgPSBtYW5hZ2VfYXBwX2FjdGlvbi5maW5kX3J1bm5pbmdfcHJvY2Vzc19waWQoY2Fub25pY2FsX25hbWUpCiAgICAgICAgYWN0aXZhdGVkX3N1Y2Nlc3NmdWxseSA9IEZhbHNlCgogICAgICAgIGlmIHJ1bm5pbmdfcGlkOgogICAgICAgICAgICBwcmludChmIltIQU5ETEVSX01BTkFHRV9BUFBdW0lORk9dINCf0YDQuNC70L7QttC10L3QuNC1ICd7Y2Fub25pY2FsX25hbWV9JyDRg9C20LUg0LfQsNC/0YPRidC10L3Qvi4g0JDQutGC0LjQstC40YDRg9C10LwuLi4iKQogICAgICAgICAgICBhY3RpdmF0ZWRfc3VjY2Vzc2Z1bGx5ID0gbWFuYWdlX2FwcF9hY3Rpb24uYWN0aXZhdGVfd2luZG93X2J5X2NsYXNzKGNhbm9uaWNhbF9uYW1lKQogICAgICAgICAgICBpZiBhY3RpdmF0ZWRfc3VjY2Vzc2Z1bGx5OiByZXR1cm4gZiLQntC60L3QviAne2Nhbm9uaWNhbF9uYW1lfScg0LDQutGC0LjQstC40YDQvtCy0LDQvdC+LiIKICAgICAgICAgICAgZWxzZTogcmV0dXJuIGYi0J/RgNC40LvQvtC20LXQvdC40LUgJ3tjYW5vbmljYWxfbmFtZX0nINC30LDQv9GD0YnQtdC90L4sINC90L4g0L3QtSDRg9C00LDQu9C+0YHRjCDQsNC60YLQuNCy0LjRgNC+0LLQsNGC0Ywg0L7QutC90L4uIgogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGV4ZWN1dGFibGVfcGF0aCA9IHNodXRpbC53aGljaChjYW5vbmljYWxfbmFtZSkKICAgICAgICAgICAgaWYgZXhlY3V0YWJsZV9wYXRoOgogICAgICAgICAgICAgICAgcHJpbnQoZiJbSEFORExFUl9NQU5BR0VfQVBQXVtJTkZPXSDQl9Cw0L/Rg9GB0LrQsNC10LwgJ3tjYW5vbmljYWxfbmFtZX0nLi4uIikKICAgICAgICAgICAgICAgIGlmIG1hbmFnZV9hcHBfYWN0aW9uLnJ1bl9hcHBsaWNhdGlvbihleGVjdXRhYmxlX3BhdGgpOgogICAgICAgICAgICAgICAgICAgIHByaW50KGYiW0hBTkRMRVJfTUFOQUdFX0FQUF1bSU5GT10g0JbQtNC10Lwg0Lgg0L/Ri9GC0LDQtdC80YHRjyDQsNC60YLQuNCy0LjRgNC+0LLQsNGC0YwuLi4iKQogICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMS41KQogICAgICAgICAgICAgICAgICAgIGFjdGl2YXRlZF9zdWNjZXNzZnVsbHkgPSBtYW5hZ2VfYXBwX2FjdGlvbi5hY3RpdmF0ZV93aW5kb3dfYnlfY2xhc3MoY2Fub25pY2FsX25hbWUpCiAgICAgICAgICAgICAgICAgICAgaWYgYWN0aXZhdGVkX3N1Y2Nlc3NmdWxseTogcmV0dXJuIGYi0J/RgNC40LvQvtC20LXQvdC40LUgJ3tjYW5vbmljYWxfbmFtZX0nINC30LDQv9GD0YnQtdC90L4g0Lgg0LDQutGC0LjQstC40YDQvtCy0LDQvdC+LiIKICAgICAgICAgICAgICAgICAgICBlbHNlOiByZXR1cm4gZiLQn9GA0LjQu9C+0LbQtdC90LjQtSAne2Nhbm9uaWNhbF9uYW1lfScg0LfQsNC/0YPRidC10L3QviAo0L3QviDQvtC60L3QviDQvdC1INCw0LrRgtC40LLQuNGA0L7QstCw0L3QvikuIgogICAgICAgICAgICAgICAgZWxzZTogcmV0dXJuIGYi0J3QtSDRg9C00LDQu9C+0YHRjCDQt9Cw0L/Rg9GB0YLQuNGC0YwgJ3tjYW5vbmljYWxfbmFtZX0nLiIKICAgICAgICAgICAgZWxzZTogcmV0dXJuIGYi0J/RgNC40LvQvtC20LXQvdC40LUgJ3tjYW5vbmljYWxfbmFtZX0nINC90LUg0L3QsNC50LTQtdC90L4g0LIg0YHQuNGB0YLQtdC80LUuIgoKICAgICMgLS0tINCb0L7Qs9C40LrQsCDQtNC70Y8gYWN0aW9uOiAiY2xvc2UiIC0tLQogICAgZWxpZiBhY3Rpb24gPT0gImNsb3NlIjoKICAgICAgICAjINCX0LTQtdGB0Ywg0L3QsNC8INC/0L7QvdCw0LTQvtCx0LjRgtGB0Y8g0YTRg9C90LrRhtC40Y8gY2xvc2VfYXBwbGljYXRpb25fYnlfbmFtZQogICAgICAgICMg0J/RgNC10LTQv9C+0LvQvtC20LjQvCwg0L7QvdCwINGC0L7QttC1INCx0YPQtNC10YIg0LIgbWFuYWdlX2FwcF9hY3Rpb24g0LTQu9GPINC/0YDQvtGB0YLQvtGC0Ysg0YHQtdC50YfQsNGBCiAgICAgICAgIyDQm9C40LHQviDQvdGD0LbQvdC+INCx0YPQtNC10YIg0YHQvtC30LTQsNGC0YwgYWN0aW9ucy9jbG9zZV9hcHBfYWN0aW9uLnB5INC4INC40LzQv9C+0YDRgtC40YDQvtCy0LDRgtGMINC+0YLRgtGD0LTQsAogICAgICAgIHRyeToKICAgICAgICAgICAgIyDQl9Cw0LPQu9GD0YjQutCwIC0g0L3Rg9C20L3QviDQuNC80L/QvtGA0YLQuNGA0L7QstCw0YLRjCDRgNC10LDQu9GM0L3Rg9GOINGE0YPQvdC60YbQuNGOINC30LDQutGA0YvRgtC40Y8hCiAgICAgICAgICAgICMgZnJvbSBhY3Rpb25zLm1hbmFnZV9hcHBfYWN0aW9uIGltcG9ydCBjbG9zZV9hcHBsaWNhdGlvbl9ieV9uYW1lICMg0J/RgNC40LzQtdGACiAgICAgICAgICAgICMgaWYgY2xvc2VfYXBwbGljYXRpb25fYnlfbmFtZShjYW5vbmljYWxfbmFtZSk6CiAgICAgICAgICAgICMgICAgIHJldHVybiBmItCf0L7Qv9GL0YLQutCwINC30LDQutGA0YvRgtGMICd7Y2Fub25pY2FsX25hbWV9JyDQstGL0L/QvtC70L3QtdC90LAuIgogICAgICAgICAgICAjIGVsc2U6CiAgICAgICAgICAgICMgICAgIHJldHVybiBmItCd0LUg0YPQtNCw0LvQvtGB0Ywg0LfQsNC60YDRi9GC0YwgJ3tjYW5vbmljYWxfbmFtZX0nINC40LvQuCDQvtC90L4g0L3QtSDQsdGL0LvQviDQt9Cw0L/Rg9GJ0LXQvdC+LiIKICAgICAgICAgICAgcHJpbnQoZiJbSEFORExFUl9NQU5BR0VfQVBQXVtUT0RPXSDQktGL0LfQvtCyINC30LDQutGA0YvRgtC40Y8g0LTQu9GPICd7Y2Fub25pY2FsX25hbWV9JyDQtdGJ0LUg0L3QtSDRgNC10LDQu9C40LfQvtCy0LDQvSEiKQogICAgICAgICAgICByZXR1cm4gZiLQmtC+0LzQsNC90LTQsCDQt9Cw0LrRgNGL0YLRjCAne2Nhbm9uaWNhbF9uYW1lfScg0L/QvtC70YPRh9C10L3QsCwg0L3QviDRhNGD0L3QutGG0LjRjyDQtdGJ0LUg0L3QtSDQv9C+0LTQutC70Y7Rh9C10L3QsC4iICMg0JfQsNCz0LvRg9GI0LrQsAogICAgICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICAgICAgIHByaW50KGYiW0hBTkRMRVJfTUFOQUdFX0FQUF1bRVJST1JdINCk0YPQvdC60YbQuNGPINC30LDQutGA0YvRgtC40Y8g0L3QtSDQvdCw0LnQtNC10L3QsCEg0J3Rg9C20L3QviDRgNC10LDQu9C40LfQvtCy0LDRgtGMINC4INC40LzQv9C+0YDRgtC40YDQvtCy0LDRgtGMLiIpCiAgICAgICAgICAgICByZXR1cm4gZiLQntGI0LjQsdC60LA6INGE0YPQvdC60YbQuNGPINC30LDQutGA0YvRgtC40Y8g0L/RgNC40LvQvtC20LXQvdC40Y8g0L3QtSDQvdCw0LnQtNC10L3QsC4iCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBwcmludChmIltIQU5ETEVSX01BTkFHRV9BUFBdW0VSUk9SXSDQntGI0LjQsdC60LAg0L/RgNC4INC/0L7Qv9GL0YLQutC1INC30LDQutGA0YvRgtGMICd7Y2Fub25pY2FsX25hbWV9Jzoge2V9IikKICAgICAgICAgICAgcmV0dXJuIGYi0J7RiNC40LHQutCwINC/0YDQuCDQt9Cw0LrRgNGL0YLQuNC4ICd7Y2Fub25pY2FsX25hbWV9Jy4iCgogICAgIyAtLS0g0J7QsdGA0LDQsdC+0YLQutCwINC90LXQuNC30LLQtdGB0YLQvdC+0LPQviBhY3Rpb24gLS0tCiAgICBlbHNlOgogICAgICAgIHByaW50KGYiW0hBTkRMRVJfTUFOQUdFX0FQUF1bV0FSTl0g0J3QtdC40LfQstC10YHRgtC90L7QtSDQtNC10LnRgdGC0LLQuNC1ICd7YWN0aW9ufScg0LTQu9GPINC40L3RgtC10L3RgtCwICdtYW5hZ2VfYXBwJy4iKQogICAgICAgIHJldHVybiBmItCd0LXQuNC30LLQtdGB0YLQvdC+0LUg0LTQtdC50YHRgtCy0LjQtSAne2FjdGlvbn0nINC00LvRjyDQv9GA0LjQu9C+0LbQtdC90LjRjy4i",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAG8RAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/nlu_processor.py",
			"settings":
			{
				"buffer_size": 8015,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"",
					null,
					"BQAAAIYHAAAAAAAAkAcAAAAAAAAHAAAAcnVuX2FwcCAHAAAAAAAAKgcAAAAAAAAHAAAAcnVuX2FwcMQGAAAAAAAAzgYAAAAAAAAHAAAAcnVuX2FwcFwGAAAAAAAAZgYAAAAAAAAHAAAAcnVuX2FwcPUCAAAAAAAA/wIAAAAAAAAHAAAAcnVuX2FwcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcBgAAAAAAAGMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"",
					null,
					"AgAAAKoBAAAAAAAAdw4AAAAAAAAAAAAAdw4AAAAAAAB3DgAAAAAAAIgWAAAg0J/QvtC70L3QsNGPINC+0LHQvdC+0LLQu9C10L3QvdCw0Y8g0LLQtdGA0YHQuNGPIE5MVV9JTlNUUlVDVElPTl9URU1QTEFURSDQsiBubHVfcHJvY2Vzc29yLnB5CgpOTFVfSU5TVFJVQ1RJT05fVEVNUExBVEUgPSAiIiLQotC10LHQtSDQsdGD0LTQtdGCINC/0YDQtdC00L7RgdGC0LDQstC70LXQvdCwINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjNGB0LrQsNGPINC60L7QvNCw0L3QtNCwLiDQotCy0L7RjyDQt9Cw0LTQsNGH0LAgLSDQuNC30LLQu9C10YfRjCDQuNC3INC90LXQtSDQvdCw0LzQtdGA0LXQvdC40LUgKGludGVudCkg0Lgg0L/QsNGA0LDQvNC10YLRgNGLIChwYXJhbWV0ZXJzKSwg0LXRgdC70Lgg0L7QvdC4INC10YHRgtGMLCDQuCDQstC10YDQvdGD0YLRjCDRgNC10LfRg9C70YzRgtCw0YIg0KLQntCb0KzQmtCeINCyINCy0LjQtNC1INGH0LjRgdGC0L7Qs9C+IEpTT04g0L7QsdGK0LXQutGC0LAuCgrQktC+0LfQvNC+0LbQvdGL0LUg0L3QsNC80LXRgNC10L3QuNGPIChpbnRlbnQpOgotIG1hbmFnZV9hcHA6INCX0LDQv9GD0YHRgtC40YLRjCDQv9GA0LjQu9C+0LbQtdC90LjQtSDQuNC70Lgg0L/QtdGA0LXQutC70Y7Rh9C40YLRjNGB0Y8g0L3QsCDQvdC10LPQvi4g0J7QsdGP0LfQsNGC0LXQu9GM0L3Ri9C5INC/0LDRgNCw0LzQtdGC0YA6ICJhcHBfbmFtZSIuCi0gY2xvc2VfYXBwOiDQl9Cw0LrRgNGL0YLRjCDQv9GA0LjQu9C+0LbQtdC90LjQtS4g0J7QsdGP0LfQsNGC0LXQu9GM0L3Ri9C5INC/0LDRgNCw0LzQtdGC0YA6ICJhcHBfbmFtZSIuCi0gYWRkX2FsaWFzOiDQodC+0YXRgNCw0L3QuNGC0Ywg0L3QvtCy0L7QtSDQuNC80Y8gKNCw0LvQuNCw0YEpINC00LvRjyDQv9GA0LjQu9C+0LbQtdC90LjRjy4g0J/QsNGA0LDQvNC10YLRgNGLOiAiYWxpYXNfbmFtZSIsICJjYW5vbmljYWxfbmFtZSIuCi0gY29udHJvbF92b2x1bWU6INCY0LfQvNC10L3QuNGC0Ywg0LPRgNC+0LzQutC+0YHRgtGMLiDQn9Cw0YDQsNC80LXRgtGA0Ys6ICJkaXJlY3Rpb24iICgidXAiLCAiZG93biIsICJtdXRlIiksINC+0L/RhtC40L7QvdCw0LvRjNC90L4gImFtb3VudCIuCi0gYXNrX3RpbWU6INCj0LfQvdCw0YLRjCDRgtC10LrRg9GJ0LXQtSDQstGA0LXQvNGPLiDQn9Cw0YDQsNC80LXRgtGA0L7QsiDQvdC10YIuCi0gcmVib290X3N5c3RlbTog0J/QtdGA0LXQt9Cw0LPRgNGD0LfQuNGC0Ywg0LrQvtC80L/RjNGO0YLQtdGALiDQn9Cw0YDQsNC80LXRgtGA0L7QsiDQvdC10YIuCi0gdXBkYXRlX3N5c3RlbTog0JfQsNC/0YPRgdGC0LjRgtGMINC+0LHQvdC+0LLQu9C10L3QuNC1INGB0LjRgdGC0LXQvNGLLiDQn9Cw0YDQsNC80LXRgtGA0L7QsiDQvdC10YIuCi0gd2ViX3NlYXJjaDog0JLRi9C/0L7Qu9C90LjRgtGMINC/0L7QuNGB0Log0LIg0LjQvdGC0LXRgNC90LXRgtC1LiDQntCx0Y/Qt9Cw0YLQtdC70YzQvdGL0Lkg0L/QsNGA0LDQvNC10YLRgDogInF1ZXJ5Ii4KLSBzZXRfcmVtaW5kZXI6INCj0YHRgtCw0L3QvtCy0LjRgtGMINC90LDQv9C+0LzQuNC90LDQvdC40LUuINCf0LDRgNCw0LzQtdGC0YDRizogInJlbWluZGVyX3RleHQiLCAidGltZV9zcGVjIi4KLSBzZXRfYWxhcm06INCj0YHRgtCw0L3QvtCy0LjRgtGMINCx0YPQtNC40LvRjNC90LjQui4g0J/QsNGA0LDQvNC10YLRgDogInRpbWVfc3BlYyIuCi0gdW5rbm93bjog0J3QsNC80LXRgNC10L3QuNC1INC90LUg0YDQsNGB0L/QvtC30L3QsNC90L4uINCf0LDRgNCw0LzQtdGC0YDRiyDQvdC1INC40LfQstC70LXQutCw0Y7RgtGB0Y8uCgrQn9GA0LjQvNC10YDRizoKCtCa0L7QvNCw0L3QtNCwOiDQt9Cw0L/Rg9GB0YLQuCDRgdGC0LjQvArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJtYW5hZ2VfYXBwIiwgInBhcmFtZXRlcnMiOiB7eyJhcHBfbmFtZSI6ICJTdGVhbSJ9fX19CgrQmtC+0LzQsNC90LTQsDog0L7RgtC60YDQvtC5INCx0YDQsNGD0LfQtdGAINGF0YDQvtC8CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogIm1hbmFnZV9hcHAiLCAicGFyYW1ldGVycyI6IHt7ImFwcF9uYW1lIjogIkNocm9tZSJ9fX19CgrQmtC+0LzQsNC90LTQsDog0YLQtdC70LXQs9CwCtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogIm1hbmFnZV9hcHAiLCAicGFyYW1ldGVycyI6IHt7ImFwcF9uYW1lIjogIlRlbGVncmFtIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQtNCw0Lkg0LzQvdC1INGC0LXQu9C10LPRgwrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJtYW5hZ2VfYXBwIiwgInBhcmFtZXRlcnMiOiB7eyJhcHBfbmFtZSI6ICJUZWxlZ3JhbSJ9fX19CgrQmtC+0LzQsNC90LTQsDog0LfQsNC60YDQvtC5INC00LjRgdC60L7RgNC0CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogImNsb3NlX2FwcCIsICJwYXJhbWV0ZXJzIjoge3siYXBwX25hbWUiOiAiRGlzY29yZCJ9fX19CgrQmtC+0LzQsNC90LTQsDog0YPQsdC10Lkg0L/RgNC+0YbQtdGB0YEg0YXRgNC+0LzQsArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJjbG9zZV9hcHAiLCAicGFyYW1ldGVycyI6IHt7ImFwcF9uYW1lIjogIkNocm9tZSJ9fX19CgrQmtC+0LzQsNC90LTQsDog0L/RgNC40LHQtdC5IGZpcmVmb3gK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAiY2xvc2VfYXBwIiwgInBhcmFtZXRlcnMiOiB7eyJhcHBfbmFtZSI6ICJGaXJlZm94In19fX0KCtCa0L7QvNCw0L3QtNCwOiDQt9Cw0L/QvtC80L3QuCwg0YfRgtC+IHZzY29kZSAtINGN0YLQviB2aXN1YWwgc3R1ZGlvIGNvZGUK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAiYWRkX2FsaWFzIiwgInBhcmFtZXRlcnMiOiB7eyJhbGlhc19uYW1lIjogInZzY29kZSIsICJjYW5vbmljYWxfbmFtZSI6ICJWaXN1YWwgU3R1ZGlvIENvZGUifX19fQoK0JrQvtC80LDQvdC00LA6INC00L7QsdCw0LLRjCDQsNC70LjQsNGBOiBnaW1wINGN0YLQviDQs9C40LzQvwrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJhZGRfYWxpYXMiLCAicGFyYW1ldGVycyI6IHt7ImFsaWFzX25hbWUiOiAi0LPQuNC80L8iLCAiY2Fub25pY2FsX25hbWUiOiAiZ2ltcCJ9fX19CgrQmtC+0LzQsNC90LTQsDog0L/QvtGB0YLQsNCy0Ywg0YLQsNC50LzQtdGAINC90LAgMTUg0LzQuNC90YPRggrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJzZXRfdGltZXIiLCAicGFyYW1ldGVycyI6IHt7ImR1cmF0aW9uIjogIjE1INC80LjQvdGD0YIifX19fQoK0JrQvtC80LDQvdC00LA6INGC0LDQudC80LXRgCDQv9C+0LvRh9Cw0YHQsArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJzZXRfdGltZXIiLCAicGFyYW1ldGVycyI6IHt7ImR1cmF0aW9uIjogItC/0L7Qu9GH0LDRgdCwIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQutC+0YLQvtGA0YvQuSDRh9Cw0YE/CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogImFza190aW1lIiwgInBhcmFtZXRlcnMiOiB7e319fX0KCtCa0L7QvNCw0L3QtNCwOiDQstGA0LXQvNGPCtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogImFza190aW1lIiwgInBhcmFtZXRlcnMiOiB7e319fX0KCtCa0L7QvNCw0L3QtNCwOiDRgdC00LXQu9Cw0Lkg0L/QvtCz0YDQvtC80YfQtQrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJjb250cm9sX3ZvbHVtZSIsICJwYXJhbWV0ZXJzIjoge3siZGlyZWN0aW9uIjogInVwIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQt9Cy0YPQuiDRgtC40YjQtSDQvdC10LzQvdC+0LPQvgrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJjb250cm9sX3ZvbHVtZSIsICJwYXJhbWV0ZXJzIjoge3siZGlyZWN0aW9uIjogImRvd24iLCAiYW1vdW50IjogItC90LXQvNC90L7Qs9C+In19fX0KCtCa0L7QvNCw0L3QtNCwOiDQstGL0LrQu9GO0YfQuCDQt9Cy0YPQugrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJjb250cm9sX3ZvbHVtZSIsICJwYXJhbWV0ZXJzIjoge3siZGlyZWN0aW9uIjogIm11dGUifX19fQoK0JrQvtC80LDQvdC00LA6INC/0LXRgNC10LfQsNCz0YDRg9C30Lgg0LrQvtC80L/RjNGO0YLQtdGACtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogInJlYm9vdF9zeXN0ZW0iLCAicGFyYW1ldGVycyI6IHt7fX19fQoK0JrQvtC80LDQvdC00LA6INGA0LXQsdGD0YIK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAicmVib290X3N5c3RlbSIsICJwYXJhbWV0ZXJzIjoge3t9fX19CgrQmtC+0LzQsNC90LTQsDog0L7QsdC90L7QstC4INGB0LjRgdGC0LXQvNGDCtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogInVwZGF0ZV9zeXN0ZW0iLCAicGFyYW1ldGVycyI6IHt7fX19fQoK0JrQvtC80LDQvdC00LA6INC30LDQv9GD0YHRgtC4INC+0LHQvdC+0LLQu9C10L3QuNC1CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogInVwZGF0ZV9zeXN0ZW0iLCAicGFyYW1ldGVycyI6IHt7fX19fQoK0JrQvtC80LDQvdC00LA6INC90LDQudC00Lgg0YDQtdGG0LXQv9GCINCx0L7RgNGJ0LAK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAid2ViX3NlYXJjaCIsICJwYXJhbWV0ZXJzIjoge3sicXVlcnkiOiAi0YDQtdGG0LXQv9GCINCx0L7RgNGJ0LAifX19fQoK0JrQvtC80LDQvdC00LA6INC/0L7QuNGB0Log0LIg0LPRg9Cz0LvQtSDRh9GC0L4g0YLQsNC60L7QtSDRgdC40L3Qs9GD0LvRj9GA0L3QvtGB0YLRjArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJ3ZWJfc2VhcmNoIiwgInBhcmFtZXRlcnMiOiB7eyJxdWVyeSI6ICLRh9GC0L4g0YLQsNC60L7QtSDRgdC40L3Qs9GD0LvRj9GA0L3QvtGB0YLRjCJ9fX19CgrQmtC+0LzQsNC90LTQsDog0L3QsNC/0L7QvNC90Lgg0LzQvdC1INC60YPQv9C40YLRjCDQvNC+0LvQvtC60L4g0LfQsNCy0YLRgNCwINGD0YLRgNC+0LwK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAic2V0X3JlbWluZGVyIiwgInBhcmFtZXRlcnMiOiB7eyJyZW1pbmRlcl90ZXh0IjogItC60YPQv9C40YLRjCDQvNC+0LvQvtC60L4iLCAidGltZV9zcGVjIjogItC30LDQstGC0YDQsCDRg9GC0YDQvtC8In19fX0KCtCa0L7QvNCw0L3QtNCwOiDQvdCw0L/QvtC80L3QuCDRh9C10YDQtdC3IDUg0LzQuNC90YPRgiDQv9GA0L7QstC10YDQuNGC0Ywg0L/QvtGH0YLRgwrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJzZXRfcmVtaW5kZXIiLCAicGFyYW1ldGVycyI6IHt7InJlbWluZGVyX3RleHQiOiAi0L/RgNC+0LLQtdGA0LjRgtGMINC/0L7Rh9GC0YMiLCAidGltZV9zcGVjIjogItGH0LXRgNC10LcgNSDQvNC40L3Rg9GCIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQv9C+0YHRgtCw0LLRjCDQsdGD0LTQuNC70YzQvdC40Log0L3QsCA3INGD0YLRgNCwCtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogInNldF9hbGFybSIsICJwYXJhbWV0ZXJzIjoge3sidGltZV9zcGVjIjogIjcg0YPRgtGA0LAifX19fQoK0JrQvtC80LDQvdC00LA6INCx0YPQtNC40LvRjNC90LjQuiDQsiAwNjozMArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJzZXRfYWxhcm0iLCAicGFyYW1ldGVycyI6IHt7InRpbWVfc3BlYyI6ICIwNjozMCJ9fX19CgrQmtC+0LzQsNC90LTQsDog0YDQsNGB0YHQutCw0LbQuCDQsNC90LXQutC00L7RggrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJ1bmtub3duIiwgInBhcmFtZXRlcnMiOiB7e319fX0KCtCa0L7QvNCw0L3QtNCwOiB7dXNlcl9jb21tYW5kfQrQoNC10LfRg9C70YzRgtCw0YI6CiIiIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqAQAAAAAAAAISAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAKoBAAAAAAAAqgEAAAAAAAABAAAAIw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAQAAAAAAAKsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAATx8AAAAAAAAAAAAATx8AAAAAAABPHwAAAAAAALEnAAAjIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQoKaW1wb3J0IGpzb24KaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBvcwoKIyAtLS0g0JrQvtC90YHRgtCw0L3RgtGLICjQvNC+0LbQvdC+INCy0YvQvdC10YHRgtC4INCyINC60L7QvdGE0LjQsyDQv9C+0LfQttC1KSAtLS0KIyDQmNGB0L/QvtC70YzQt9GD0LXQvCDQv9C10YDQtdC80LXQvdC90YPRjiDQvtC60YDRg9C20LXQvdC40Y8g0LTQu9GPIFVSTCwg0LXRgdC70Lgg0L7QvdCwINC10YHRgtGMLCDQuNC90LDRh9C1INC00LXRhNC+0LvRggpERUZBVUxUX0FQSV9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDoxMTQzNC9hcGkvZ2VuZXJhdGUnCkFQSV9VUkwgPSBvcy5lbnZpcm9uLmdldCgnT0xMQU1BX0FQSV9VUkwnLCBERUZBVUxUX0FQSV9VUkwpCkRFRkFVTFRfTU9ERUxfTkFNRSA9ICJtaXN0cmFsIiAjINCc0L7QtNC10LvRjCDQv9C+INGD0LzQvtC70YfQsNC90LjRjgojINCd0L7QstCw0Y8g0LLQtdGA0YHQuNGPINC60L7QvdGB0YLQsNC90YLRiyBOTFVfSU5TVFJVQ1RJT05fVEVNUExBVEUg0LIgbmx1X3Byb2Nlc3Nvci5weQoKIyDQndC+0LLQsNGPINCy0LXRgNGB0LjRjyBOTFVfSU5TVFJVQ1RJT05fVEVNUExBVEUgKHY0KSDQsiBubHVfcHJvY2Vzc29yLnB5CgpOTFVfSU5TVFJVQ1RJT05fVEVNUExBVEUgPSAiIiLQotC10LHQtSDQsdGD0LTQtdGCINC/0YDQtdC00L7RgdGC0LDQstC70LXQvdCwINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjNGB0LrQsNGPINC60L7QvNCw0L3QtNCwLiDQotCy0L7RjyDQt9Cw0LTQsNGH0LAgLSDQuNC30LLQu9C10YfRjCDQuNC3INC90LXQtSDQvtGB0L3QvtCy0L3QvtC1INC90LDQvNC10YDQtdC90LjQtSAoaW50ZW50KSDQuCDQv9Cw0YDQsNC80LXRgtGA0YsgKHBhcmFtZXRlcnMpLCDQstC60LvRjtGH0LDRjyDQutC+0L3QutGA0LXRgtC90L7QtSDQtNC10LnRgdGC0LLQuNC1IChhY3Rpb24pLCDQtdGB0LvQuCDQvtC90L4g0L/RgNC40LzQtdC90LjQvNC+LCDQuCDQstC10YDQvdGD0YLRjCDRgNC10LfRg9C70YzRgtCw0YIg0KLQntCb0KzQmtCeINCyINCy0LjQtNC1INGH0LjRgdGC0L7Qs9C+IEpTT04g0L7QsdGK0LXQutGC0LAuCgrQktC+0LfQvNC+0LbQvdGL0LUg0L3QsNC80LXRgNC10L3QuNGPIChpbnRlbnQpINC4INC00LXQudGB0YLQstC40Y8gKGFjdGlvbik6CgoqIGludGVudDogbWFuYWdlX2FwcAogICAgKiBhY3Rpb246ICJvcGVuIiAo0JfQsNC/0YPRgdGC0LjRgtGMINC40LvQuCDRgdGE0L7QutGD0YHQuNGA0L7QstCw0YLRjCDQv9GA0LjQu9C+0LbQtdC90LjQtSkKICAgICogYWN0aW9uOiAiY2xvc2UiICjQl9Cw0LrRgNGL0YLRjCDQv9GA0LjQu9C+0LbQtdC90LjQtSkKICAgICog0J7QsdGP0LfQsNGC0LXQu9GM0L3Ri9C5INC/0LDRgNCw0LzQtdGC0YA6ICJhcHBfbmFtZSIuCiogaW50ZW50OiBtYW5hZ2Vfc3lzdGVtCiAgICAqIGFjdGlvbjogInJlYm9vdCIgKNCf0LXRgNC10LfQsNCz0YDRg9C30LjRgtGMKQogICAgKiBhY3Rpb246ICJ1cGRhdGUiICjQntCx0L3QvtCy0LjRgtGMKQogICAgKiBhY3Rpb246ICJzaHV0ZG93biIgKNCS0YvQutC70Y7Rh9C40YLRjCkgLSAo0JTQvtCx0LDQstC40Lsg0L3QsCDQstGB0Y/QutC40Lkg0YHQu9GD0YfQsNC5KQogICAgKiDQn9Cw0YDQsNC80LXRgtGA0Ysg0L3QtSDRgtGA0LXQsdGD0Y7RgtGB0Y8uCiogaW50ZW50OiBtYW5hZ2Vfc291bmQKICAgICogYWN0aW9uOiAidXAiICjQk9GA0L7QvNGH0LUpCiAgICAqIGFjdGlvbjogImRvd24iICjQotC40YjQtSkKICAgICogYWN0aW9uOiAibXV0ZSIgKNCS0YvQutC70Y7Rh9C40YLRjCDQt9Cy0YPQuikKICAgICogYWN0aW9uOiAidW5tdXRlIiAo0JLQutC70Y7Rh9C40YLRjCDQt9Cy0YPQuikgLSAo0JTQvtCx0LDQstC40Lsg0LTQu9GPINGP0YHQvdC+0YHRgtC4KQogICAgKiDQntC/0YbQuNC+0L3QsNC70YzQvdGL0Lkg0L/QsNGA0LDQvNC10YLRgDogImFtb3VudCIuCiogaW50ZW50OiBhZGRfYWxpYXMKICAgICog0J/QsNGA0LDQvNC10YLRgNGLOiAiYWxpYXNfbmFtZSIsICJjYW5vbmljYWxfbmFtZSIuCiogaW50ZW50OiBhc2tfdGltZQogICAgKiDQn9Cw0YDQsNC80LXRgtGA0L7QsiDQvdC10YIuCiogaW50ZW50OiB3ZWJfc2VhcmNoCiAgICAqINCe0LHRj9C30LDRgtC10LvRjNC90YvQuSDQv9Cw0YDQsNC80LXRgtGAOiAicXVlcnkiLgoqIGludGVudDogc2V0X3JlbWluZGVyCiAgICAqINCf0LDRgNCw0LzQtdGC0YDRizogInJlbWluZGVyX3RleHQiLCAidGltZV9zcGVjIi4KKiBpbnRlbnQ6IHNldF9hbGFybQogICAgKiDQn9Cw0YDQsNC80LXRgtGAOiAidGltZV9zcGVjIi4KKiBpbnRlbnQ6IHVua25vd24KICAgICog0J3QsNC80LXRgNC10L3QuNC1INC90LUg0YDQsNGB0L/QvtC30L3QsNC90L4uCgrQn9GA0LjQvNC10YDRizoKCtCa0L7QvNCw0L3QtNCwOiDQt9Cw0L/Rg9GB0YLQuCDRgdGC0LjQvArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJtYW5hZ2VfYXBwIiwgInBhcmFtZXRlcnMiOiB7eyJhY3Rpb24iOiAib3BlbiIsICJhcHBfbmFtZSI6ICJTdGVhbSJ9fX19CgrQmtC+0LzQsNC90LTQsDog0L7RgtC60YDQvtC5INGC0LXQu9C10LPRgwrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJtYW5hZ2VfYXBwIiwgInBhcmFtZXRlcnMiOiB7eyJhY3Rpb24iOiAib3BlbiIsICJhcHBfbmFtZSI6ICJUZWxlZ3JhbSJ9fX19CgrQmtC+0LzQsNC90LTQsDog0LfQsNC60YDQvtC5INGF0YDQvtC8CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogIm1hbmFnZV9hcHAiLCAicGFyYW1ldGVycyI6IHt7ImFjdGlvbiI6ICJjbG9zZSIsICJhcHBfbmFtZSI6ICJDaHJvbWUifX19fQoK0JrQvtC80LDQvdC00LA6INGD0LHQtdC5INC/0YDQvtGG0LXRgdGBIGZpcmVmb3gK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAibWFuYWdlX2FwcCIsICJwYXJhbWV0ZXJzIjoge3siYWN0aW9uIjogImNsb3NlIiwgImFwcF9uYW1lIjogIkZpcmVmb3gifX19fQoK0JrQvtC80LDQvdC00LA6INC30LDQv9C+0LzQvdC4INGC0LMg0Y3RgtC+IHRlbGVncmFtCtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogImFkZF9hbGlhcyIsICJwYXJhbWV0ZXJzIjoge3siYWxpYXNfbmFtZSI6ICLRgtCzIiwgImNhbm9uaWNhbF9uYW1lIjogIlRlbGVncmFtIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDRgdC00LXQu9Cw0Lkg0L/QvtCz0YDQvtC80YfQtQrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJtYW5hZ2Vfc291bmQiLCAicGFyYW1ldGVycyI6IHt7ImFjdGlvbiI6ICJ1cCJ9fX19CgrQmtC+0LzQsNC90LTQsDog0LfQstGD0Log0YLQuNGI0LUg0L3QsCAyMCDQv9GA0L7RhtC10L3RgtC+0LIK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAibWFuYWdlX3NvdW5kIiwgInBhcmFtZXRlcnMiOiB7eyJhY3Rpb24iOiAiZG93biIsICJhbW91bnQiOiAiMjAlIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQstGL0LrQu9GO0YfQuCDQt9Cy0YPQugrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJtYW5hZ2Vfc291bmQiLCAicGFyYW1ldGVycyI6IHt7ImFjdGlvbiI6ICJtdXRlIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQstC60LvRjtGH0Lgg0LfQstGD0LoK0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAibWFuYWdlX3NvdW5kIiwgInBhcmFtZXRlcnMiOiB7eyJhY3Rpb24iOiAidW5tdXRlIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQutC+0YLQvtGA0YvQuSDRh9Cw0YE/CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogImFza190aW1lIiwgInBhcmFtZXRlcnMiOiB7e319fX0KCtCa0L7QvNCw0L3QtNCwOiDRgNC10LHRg9GCCtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogIm1hbmFnZV9zeXN0ZW0iLCAicGFyYW1ldGVycyI6IHt7ImFjdGlvbiI6ICJyZWJvb3QifX19fQoK0JrQvtC80LDQvdC00LA6INCy0YvQutC70Y7Rh9C4INC60L7QvNC/0YzRjtGC0LXRgArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJtYW5hZ2Vfc3lzdGVtIiwgInBhcmFtZXRlcnMiOiB7eyJhY3Rpb24iOiAic2h1dGRvd24ifX19fQoK0JrQvtC80LDQvdC00LA6INC30LDQv9GD0YHRgtC4INC+0LHQvdC+0LLQu9C10L3QuNC1CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogIm1hbmFnZV9zeXN0ZW0iLCAicGFyYW1ldGVycyI6IHt7ImFjdGlvbiI6ICJ1cGRhdGUifX19fQoK0JrQvtC80LDQvdC00LA6INC90LDQudC00Lgg0LrQsNC6INC/0YDQuNCz0L7RgtC+0LLQuNGC0Ywg0L/QuNGG0YbRgwrQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJ3ZWJfc2VhcmNoIiwgInBhcmFtZXRlcnMiOiB7eyJxdWVyeSI6ICLQutCw0Log0L/RgNC40LPQvtGC0L7QstC40YLRjCDQv9C40YbRhtGDIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQvdCw0L/QvtC80L3QuCDQstGL0L3QtdGB0YLQuCDQvNGD0YHQvtGAINCy0LXRh9C10YDQvtC8CtCg0LXQt9GD0LvRjNGC0LDRgjoKe3siaW50ZW50IjogInNldF9yZW1pbmRlciIsICJwYXJhbWV0ZXJzIjoge3sicmVtaW5kZXJfdGV4dCI6ICLQstGL0L3QtdGB0YLQuCDQvNGD0YHQvtGAIiwgInRpbWVfc3BlYyI6ICLQstC10YfQtdGA0L7QvCJ9fX19CgrQmtC+0LzQsNC90LTQsDog0LHRg9C00LjQu9GM0L3QuNC6INC90LAgNyDRg9GC0YDQsArQoNC10LfRg9C70YzRgtCw0YI6Cnt7ImludGVudCI6ICJzZXRfYWxhcm0iLCAicGFyYW1ldGVycyI6IHt7InRpbWVfc3BlYyI6ICI3INGD0YLRgNCwIn19fX0KCtCa0L7QvNCw0L3QtNCwOiDQutCw0LrQsNGPINC/0L7Qs9C+0LTQsD8K0KDQtdC30YPQu9GM0YLQsNGCOgp7eyJpbnRlbnQiOiAidW5rbm93biIsICJwYXJhbWV0ZXJzIjoge3t9fX19CgrQmtC+0LzQsNC90LTQsDoge3VzZXJfY29tbWFuZH0K0KDQtdC30YPQu9GM0YLQsNGCOgoiIiIKCiMgLS0tINCk0YPQvdC60YbQuNC4IC0tLQoKZGVmIGdldF9ubHVfZnJvbV9vbGxhbWEodXNlcl9jb21tYW5kLAogICAgICAgICAgICAgICAgICAgICAgICBpbnN0cnVjdGlvbl90ZW1wbGF0ZT1OTFVfSU5TVFJVQ1RJT05fVEVNUExBVEUsCiAgICAgICAgICAgICAgICAgICAgICAgIGFwaV91cmw9QVBJX1VSTCwKICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWxfbmFtZT1ERUZBVUxUX01PREVMX05BTUUsCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ9OTApOgogICAgIiIi0J7RgtC/0YDQsNCy0LvRj9C10YIg0LrQvtC80LDQvdC00YMg0LIgT2xsYW1hIEFQSSDQuCDQstC+0LfQstGA0LDRidCw0LXRgiDRgdGL0YDQvtC5INGC0LXQutGB0YLQvtCy0YvQuSDQvtGC0LLQtdGCINC80L7QtNC10LvQuC4iIiIKICAgIGlmIG5vdCBhcGlfdXJsOgogICAgICAgIHByaW50KCLQntGI0LjQsdC60LA6IFVSTCBBUEkgT2xsYW1hINC90LUg0LfQsNC00LDQvSAo0L/RgNC+0LLQtdGA0YzRgtC1IE9MTEFNQV9BUElfVVJMINC40LvQuCDQutC+0L3RgdGC0LDQvdGC0YMgREVGQVVMVF9BUElfVVJMKS4iKQogICAgICAgIHJldHVybiBOb25lCgogICAgIyDQpNC+0YDQvNC40YDRg9C10Lwg0L/QvtC70L3Ri9C5INC/0YDQvtC80L/RgiDQtNC70Y8g0LzQvtC00LXQu9C4CiAgICBmdWxsX2luc3RydWN0aW9uID0gaW5zdHJ1Y3Rpb25fdGVtcGxhdGUuZm9ybWF0KHVzZXJfY29tbWFuZD11c2VyX2NvbW1hbmQpCgogICAgIyDQn9Cw0YDQsNC80LXRgtGA0Ysg0LfQsNC/0YDQvtGB0LAg0LogT2xsYW1hIEFQSQogICAgcGF5bG9hZCA9IHsKICAgICAgICAibW9kZWwiOiBtb2RlbF9uYW1lLAogICAgICAgICJwcm9tcHQiOiBmdWxsX2luc3RydWN0aW9uLAogICAgICAgICJzdHJlYW0iOiBGYWxzZSwgIyDQn9C+0LvRg9GH0LDQtdC8INC+0YLQstC10YIg0YbQtdC70LjQutC+0LwKICAgICAgICAib3B0aW9ucyI6IHsKICAgICAgICAgICAgInRlbXBlcmF0dXJlIjogMC4zLCAjINCd0LjQt9C60LDRjyDRgtC10LzQv9C10YDQsNGC0YPRgNCwINC00LvRjyDQsdC+0LvQtdC1INC/0YDQtdC00YHQutCw0LfRg9C10LzQvtCz0L4gSlNPTgogICAgICAgICAgICAicmVwZWF0X3BlbmFsdHkiOiAxLjE1LAogICAgICAgICAgICAibnVtX3ByZWRpY3QiOiAxNTAgIyDQntCz0YDQsNC90LjRh9C10L3QuNC1INC00LvQuNC90Ysg0L7RgtCy0LXRgtCwICjQv9C+0LTQsdC40YDQsNC10YLRgdGPKQogICAgICAgIH0KICAgICAgICAjINCj0LHQuNGA0LDQtdC8ICJyYXciOiBUcnVlIC0gT2xsYW1hINGB0LDQvCDQtNC+0LHQsNCy0LjRgiDRgdC40YHRgtC10LzQvdGL0Lkg0L/RgNC+0LzQv9GCINC80L7QtNC10LvQuCwg0LXRgdC70Lgg0L7QvSDQtdGB0YLRjAogICAgfQoKICAgIHByaW50KGYiW05MVV9QUk9DRVNTT1JdW0RFQlVHXSDQntGC0L/RgNCw0LLQutCwINC30LDQv9GA0L7RgdCwINC90LAge2FwaV91cmx9INC00LvRjyDQvNC+0LTQtdC70LggJ3ttb2RlbF9uYW1lfScuLi4iKQogICAgIyBwcmludChmIltOTFVfUFJPQ0VTU09SXVtERUJVR10gUGF5bG9hZDoge3BheWxvYWR9IikgIyDQoNCw0YHQutC+0LzQvNC10L3RgtC40YDQvtCy0LDRgtGMINC00LvRjyDQtNC10YLQsNC70YzQvdC+0Lkg0L7RgtC70LDQtNC60LgKCiAgICB0cnk6CiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KGFwaV91cmwsIGpzb249cGF5bG9hZCwgdGltZW91dD10aW1lb3V0KQogICAgICAgIHJlc3BvbnNlLnJhaXNlX2Zvcl9zdGF0dXMoKSAjINCf0YDQvtCy0LXRgNC60LAg0L3QsCBIVFRQINC+0YjQuNCx0LrQuCAoNHh4LCA1eHgpCgogICAgICAgIGRhdGEgPSByZXNwb25zZS5qc29uKCkKCiAgICAgICAgaWYgJ3Jlc3BvbnNlJyBpbiBkYXRhOgogICAgICAgICAgICByZXN1bHRfdGV4dCA9IGRhdGFbJ3Jlc3BvbnNlJ10KICAgICAgICAgICAgcHJpbnQoZiJbTkxVX1BST0NFU1NPUl1bREVCVUddINCh0YvRgNC+0Lkg0L7RgtCy0LXRgiDQvtGCINC80L7QtNC10LvQuDogJ3tyZXN1bHRfdGV4dH0nIikKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdF90ZXh0LnN0cmlwKCkKICAgICAgICBlbHNlOgogICAgICAgICAgICBwcmludChmIltOTFVfUFJPQ0VTU09SXVtFUlJPUl0g0J/QvtC70LUgJ3Jlc3BvbnNlJyDQvdC1INC90LDQudC00LXQvdC+INCyINC+0YLQstC10YLQtSBBUEkuIikKICAgICAgICAgICAgcHJpbnQoZiJbTkxVX1BST0NFU1NPUl1bREVCVUddINCf0L7Qu9C90YvQuSDQvtGC0LLQtdGCOiB7ZGF0YX0iKQogICAgICAgICAgICByZXR1cm4gIiIgIyDQktC+0LfQstGA0LDRidCw0LXQvCDQv9GD0YHRgtGD0Y4g0YHRgtGA0L7QutGDINC/0YDQuCDQvtGI0LjQsdC60LUg0YHRgtGA0YPQutGC0YPRgNGLINC+0YLQstC10YLQsAoKICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLlRpbWVvdXQ6CiAgICAgICAgcHJpbnQoZiLQntGI0LjQsdC60LAg0YHQtdGC0Lg6INCf0YDQtdCy0YvRiNC10L0g0YLQsNC50LzQsNGD0YIgKHt0aW1lb3V0fSDRgdC10LopINC/0YDQuCDQt9Cw0L/RgNC+0YHQtSDQuiB7YXBpX3VybH0iKQogICAgICAgIHJldHVybiBOb25lCiAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5SZXF1ZXN0RXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiLQntGI0LjQsdC60LAg0YHQtdGC0Lgg0L/RgNC4INC30LDQv9GA0L7RgdC1INC6IE9sbGFtYSBBUEk6IHtlfSIpCiAgICAgICAgcmV0dXJuIE5vbmUKICAgIGV4Y2VwdCBqc29uLkpTT05EZWNvZGVFcnJvcjoKICAgICAgICBwcmludChmItCe0YjQuNCx0LrQsDog0J7RgtCy0LXRgiDQvtGCIEFQSSBPbGxhbWEg0L3QtSDRj9Cy0LvRj9C10YLRgdGPINCy0LDQu9C40LTQvdGL0LwgSlNPTi4iKQogICAgICAgIHByaW50KGYi0JrQvtC0INGB0YLQsNGC0YPRgdCwOiB7cmVzcG9uc2Uuc3RhdHVzX2NvZGV9IikKICAgICAgICBwcmludChmItCd0LDRh9Cw0LvQviDQvtGC0LLQtdGC0LA6IHtyZXNwb25zZS50ZXh0WzoyMDBdfS4uLiIpCiAgICAgICAgcmV0dXJuIE5vbmUKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmItCd0LXQuNC30LLQtdGB0YLQvdCw0Y8g0L7RiNC40LHQutCwINC/0YDQuCDQstGL0LfQvtCy0LUgT2xsYW1hIEFQSToge2V9IikKICAgICAgICByZXR1cm4gTm9uZQoKCmRlZiBleHRyYWN0X2pzb25fZnJvbV9yZXNwb25zZShyZXNwb25zZV90ZXh0KToKICAgICIiItCY0LfQstC70LXQutCw0LXRgiDQv9C10YDQstGL0Lkg0LLQsNC70LjQtNC90YvQuSBKU09OINC+0LHRitC10LrRgiDQuNC3INGB0YLRgNC+0LrQuCDQvtGC0LLQtdGC0LAgTkxVLiIiIgogICAgaWYgbm90IHJlc3BvbnNlX3RleHQ6CiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAjINCj0LHQuNGA0LDQtdC8INC70LjRiNC90LjQtSDQv9GA0L7QsdC10LvRiyDQuCDQstC+0LfQvNC+0LbQvdGL0LUg0LDRgNGC0LXRhNCw0LrRgtGLINC00L4v0L/QvtGB0LvQtSBKU09OCiAgICB0ZXh0X3RvX3BhcnNlID0gcmVzcG9uc2VfdGV4dC5zdHJpcCgpCgogICAgIyDQmNGJ0LXQvCDQvdCw0YfQsNC70L4g0Lgg0LrQvtC90LXRhiDQv9C10YDQstC+0LPQviBKU09OINC+0LHRitC10LrRgtCwCiAgICBzdGFydF9pbmRleCA9IHRleHRfdG9fcGFyc2UuZmluZCgneycpCiAgICBlbmRfaW5kZXggPSB0ZXh0X3RvX3BhcnNlLnJmaW5kKCd9JykKCiAgICBpZiBzdGFydF9pbmRleCAhPSAtMSBhbmQgZW5kX2luZGV4ICE9IC0xIGFuZCBlbmRfaW5kZXggPiBzdGFydF9pbmRleDoKICAgICAgICBqc29uX3N0ciA9IHRleHRfdG9fcGFyc2Vbc3RhcnRfaW5kZXg6ZW5kX2luZGV4ICsgMV0KICAgICAgICBwcmludChmIltOTFVfUFJPQ0VTU09SXVtERUJVR10g0J/Ri9GC0LDQtdC80YHRjyDRgNCw0YHQv9Cw0YDRgdC40YLRjCBKU09OOiB7anNvbl9zdHJ9IikKICAgICAgICB0cnk6CiAgICAgICAgICAgIHBhcnNlZF9qc29uID0ganNvbi5sb2Fkcyhqc29uX3N0cikKICAgICAgICAgICAgIyDQn9GA0L7RgdGC0LDRjyDQv9GA0L7QstC10YDQutCwINC90LAg0L7QttC40LTQsNC10LzRg9GOINGB0YLRgNGD0LrRgtGD0YDRgyAo0L3QsNC70LjRh9C40LUgaW50ZW50KQogICAgICAgICAgICBpZiAiaW50ZW50IiBpbiBwYXJzZWRfanNvbjoKICAgICAgICAgICAgICAgICBwcmludChmIltOTFVfUFJPQ0VTU09SXVtERUJVR10gSlNPTiDRg9GB0L/QtdGI0L3QviDRgNCw0YHQv9Cw0YDRgdC10L0uIikKICAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VkX2pzb24KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICBwcmludChmIltOTFVfUFJPQ0VTU09SXVtXQVJOXSDQkiDRgNCw0YHQv9Cw0YDRgdC10L3QvdC+0LwgSlNPTiDQvtGC0YHRg9GC0YHRgtCy0YPQtdGCINC60LvRjtGHICdpbnRlbnQnOiB7cGFyc2VkX2pzb259IikKICAgICAgICAgICAgICAgICByZXR1cm4gTm9uZSAjINCh0YfQuNGC0LDQtdC8INC90LXQstCw0LvQuNC00L3Ri9C8LCDQtdGB0LvQuCDQvdC10YIgaW50ZW50CiAgICAgICAgZXhjZXB0IGpzb24uSlNPTkRlY29kZUVycm9yOgogICAgICAgICAgICBwcmludChmIltOTFVfUFJPQ0VTU09SXVtFUlJPUl0g0J7RiNC40LHQutCwINC/0LDRgNGB0LjQvdCz0LAgSlNPTiDRgdGC0YDQvtC60Lg6IHtqc29uX3N0cn0iKQogICAgICAgICAgICAjINCc0L7QttC90L4g0L/QvtC/0YDQvtCx0L7QstCw0YLRjCDQsdC+0LvQtdC1ICLQs9GA0Y/Qt9C90YvQuSIg0L/QsNGA0YHQuNC90LMsINC10YHQu9C4INC80L7QtNC10LvRjCDRh9Cw0YHRgtC+INC00L7QsdCw0LLQu9GP0LXRgiDRgtC10LrRgdGCINC/0L7RgdC70LUgSlNPTiwKICAgICAgICAgICAgIyDQvdC+INC/0L7QutCwINC+0YHRgtCw0LLQuNC8INGC0LDQuiDQtNC70Y8g0YHRgtGA0L7Qs9C+0YHRgtC4LgogICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgIHByaW50KGYiW05MVV9QUk9DRVNTT1JdW0VSUk9SXSDQndC10LjQt9Cy0LXRgdGC0L3QsNGPINC+0YjQuNCx0LrQsCDQv9GA0Lgg0L/QsNGA0YHQuNC90LPQtSBKU09OOiB7ZX0iKQogICAgICAgICAgICAgcmV0dXJuIE5vbmUKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoZiJbTkxVX1BST0NFU1NPUl1bV0FSTl0g0J3QtSDRg9C00LDQu9C+0YHRjCDQvdCw0LnRgtC4INCy0LDQu9C40LTQvdGL0LkgSlNPTiDQvtCx0YrQtdC60YIg0LIg0YHRgtGA0L7QutC1OiAne3RleHRfdG9fcGFyc2V9JyIpCiAgICAgICAgcmV0dXJuIE5vbmU",
					"AQAAAAAAAAABAAAAAAAAAAAAAAD7HgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/familiar.py",
			"settings":
			{
				"buffer_size": 2303,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAA/wgAAAAAAAAAAAAA/wgAAAAAAAD/CAAAAAAAAOcMAAAjIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQoKIyDQmNC80L/QvtGA0YLQuNGA0YPQtdC8INGE0YPQvdC60YbQuNC4INC40Lcg0L3QsNGI0LjRhSDQvNC+0LTRg9C70LXQuQppbXBvcnQgbmx1X3Byb2Nlc3NvcgppbXBvcnQgY29tbWFuZF9kaXNwYXRjaGVyCiMgdXRpbHMg0LjQvNC/0L7RgNGC0LjRgNGD0LXRgtGB0Y8g0LLQvdGD0YLRgNC4IGNvbW1hbmRfZGlzcGF0Y2hlciDQtNC70Y8g0LfQsNCz0YDRg9C30LrQuCDQsNC70LjQsNGB0L7QsgojIGFjdGlvbnMg0LjQvNC/0L7RgNGC0LjRgNGD0LXRgtGB0Y8g0LLQvdGD0YLRgNC4IGNvbW1hbmRfZGlzcGF0Y2hlciAo0L3QviDQv9C+0LrQsCDQvdC1INC40YHQv9C+0LvRjNC30YPQtdGC0YHRjyDQsiBkZWJ1Zy3QstC10YDRgdC40LgpCgojIC0tLSDQntGB0L3QvtCy0L3QvtC5INGG0LjQutC7INC/0YDQvtCz0YDQsNC80LzRiyAtLS0KaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHByaW50KCI9IiozMCkKICAgIHByaW50KCIgICDQn9GA0L7RgtC+0YLQuNC/INCf0L7QvNC+0YnQvdC40LrQsCAn0KTQsNC80LjQu9GM0Y/RgCciKQogICAgcHJpbnQoIj0iKjMwKQogICAgcHJpbnQoItCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPLi4uIikKICAgICMg0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0LTQuNGB0L/QtdGC0YfQtdGA0LAgKNCy0LrQu9GO0YfQsNGPINC30LDQs9GA0YPQt9C60YMg0LDQu9C40LDRgdC+0LIpINC/0YDQvtC40YHRhdC+0LTQuNGCCiAgICAjINCw0LLRgtC+0LzQsNGC0LjRh9C10YHQutC4INC/0YDQuCDQuNC80L/QvtGA0YLQtSBjb21tYW5kX2Rpc3BhdGNoZXIucHkKICAgIHByaW50KCLQk9C+0YLQvtCyINC6INC/0YDQuNC10LzRgyDQutC+0LzQsNC90LQuIikKICAgIHByaW50KCLQktCy0LXQtNC40YLQtSAn0LLRi9GF0L7QtCcg0LTQu9GPINC30LDQstC10YDRiNC10L3QuNGPLiIpCiAgICBwcmludCgiLSIgKiAzMCkKCiAgICB3aGlsZSBUcnVlOgogICAgICAgICMgMS4g0J/QvtC70YPRh9Cw0LXQvCDQutC+0LzQsNC90LTRgyDQvtGCINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjwogICAgICAgIHRyeToKICAgICAgICAgICAgY29tbWFuZCA9IGlucHV0KCI+Pj4g0JLQstC10LTQuNGC0LUg0LrQvtC80LDQvdC00YM6ICIpCiAgICAgICAgZXhjZXB0IEVPRkVycm9yOgogICAgICAgICAgICAjINCe0LHRgNCw0LHQvtGC0LrQsCDRgdC70YPRh9Cw0Y8sINC10YHQu9C4INCy0LLQvtC0INC/0LXRgNC10L3QsNC/0YDQsNCy0LvQtdC9INC4INC30LDQutC+0L3Rh9C40LvRgdGPCiAgICAgICAgICAgIHByaW50KCJcbtCX0LDQstC10YDRiNC10L3QuNC1INGA0LDQsdC+0YLRiyAoRU9GKS4iKQogICAgICAgICAgICBicmVhawoKICAgICAgICAjIDIuINCf0YDQvtCy0LXRgNGP0LXQvCDQvdCwINCy0YvRhdC+0LQKICAgICAgICBpZiBjb21tYW5kLmxvd2VyKCkgaW4gWyfQstGL0YXQvtC0JywgJ2V4aXQnLCAncXVpdCddOgogICAgICAgICAgICBwcmludCgi0JfQsNCy0LXRgNGI0LXQvdC40LUg0YDQsNCx0L7RgtGLINC/0L4g0LrQvtC80LDQvdC00LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPLiIpCiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgaWYgbm90IGNvbW1hbmQ6CiAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgIHByaW50KCItIiAqIDMwKQogICAgICAgIHByaW50KGYi0J/QvtC70YPRh9C10L3QsCDQutC+0LzQsNC90LTQsDogJ3tjb21tYW5kfSciKQoKICAgICAgICAjIDMuINCe0YLQv9GA0LDQstC70Y/QtdC8INC60L7QvNCw0L3QtNGDINCyIE5MVSDQvNC+0LTRg9C70YwKICAgICAgICBwcmludCgi0J7QsdGA0LDQsdC+0YLQutCwIE5MVS4uLiIpCiAgICAgICAgbmx1X3Jlc3BvbnNlX3RleHQgPSBubHVfcHJvY2Vzc29yLmdldF9ubHVfZnJvbV9vbGxhbWEoY29tbWFuZCkKCiAgICAgICAgIyA0LiDQmNC30LLQu9C10LrQsNC10LwgSlNPTiDQuNC3INC+0YLQstC10YLQsCBOTFUKICAgICAgICBpZiBubHVfcmVzcG9uc2VfdGV4dDoKICAgICAgICAgICAgcHJpbnQoItCY0LfQstC70LXRh9C10L3QuNC1IEpTT04g0LjQtyDQvtGC0LLQtdGC0LAgTkxVLi4uIikKICAgICAgICAgICAgcGFyc2VkX25sdSA9IG5sdV9wcm9jZXNzb3IuZXh0cmFjdF9qc29uX2Zyb21fcmVzcG9uc2Uobmx1X3Jlc3BvbnNlX3RleHQpCgogICAgICAgICAgICAjIDUuINCf0LXRgNC10LTQsNC10Lwg0YDQtdC30YPQu9GM0YLQsNGCINCyINC00LjRgdC/0LXRgtGH0LXRgCDQutC+0LzQsNC90LQgKNC00LXQsdCw0LMt0LLQtdGA0YHQuNGPKQogICAgICAgICAgICBpZiBwYXJzZWRfbmx1OgogICAgICAgICAgICAgICAgcHJpbnQoItCf0LXRgNC10LTQsNGH0LAg0LIg0LTQuNGB0L/QtdGC0YfQtdGALi4uIikKICAgICAgICAgICAgICAgIGRpc3BhdGNoZXJfcmVzdWx0ID0gY29tbWFuZF9kaXNwYXRjaGVyLmRpc3BhdGNoX2NvbW1hbmQocGFyc2VkX25sdSkKICAgICAgICAgICAgICAgICMg0J/QtdGH0LDRgtCw0LXQvCDRgNC10LfRg9C70YzRgtCw0YIg0YDQsNCx0L7RgtGLINC00LjRgdC/0LXRgtGH0LXRgNCwICjQsiDQtNC10LHQsNCzLdCy0LXRgNGB0LjQuCDQvtC9INC/0YDQvtGB0YLQviDQv9C+0LTRgtCy0LXRgNC20LTQsNC10YIg0YDQsNGB0L/QvtC30L3QsNCy0LDQvdC40LUpCiAgICAgICAgICAgICAgICBwcmludChmIltGQU1JTElBUl9NQUlOXSDQoNC10LfRg9C70YzRgtCw0YIg0LTQuNGB0L/QtdGC0YfQtdGA0LA6IHtkaXNwYXRjaGVyX3Jlc3VsdH0iKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgIyDQntGI0LjQsdC60LAg0LjQt9Cy0LvQtdGH0LXQvdC40Y8gSlNPTiDRg9C20LUg0LHRi9C70LAg0LfQsNC70L7Qs9C40YDQvtCy0LDQvdCwINCyIG5sdV9wcm9jZXNzb3IKICAgICAgICAgICAgICAgIHByaW50KCJbRkFNSUxJQVJfTUFJTl0g0J3QtSDRg9C00LDQu9C+0YHRjCDQuNC30LLQu9C10YfRjCBKU09OINC40Lcg0L7RgtCy0LXRgtCwIE5MVS4iKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMg0J7RiNC40LHQutCwINC/0L7Qu9GD0YfQtdC90LjRjyDQvtGC0LLQtdGC0LAg0L7RgiBOTFUg0YPQttC1INCx0YvQu9CwINC30LDQu9C+0LPQuNGA0L7QstCw0L3QsCDQsiBubHVfcHJvY2Vzc29yCiAgICAgICAgICAgICBwcmludCgiW0ZBTUlMSUFSX01BSU5dINCd0LUg0L/QvtC70YPRh9C10L0g0L7RgtCy0LXRgiDQvtGCIE5MVSDQv9GA0L7RhtC10YHRgdC+0YDQsC4iKQoKICAgICAgICBwcmludCgiLSIgKiAzMCkgIyDQoNCw0LfQtNC10LvQuNGC0LXQu9GMINC00LvRjyDRgdC70LXQtNGD0Y7RidC10Lkg0LrQvtC80LDQvdC00Ys",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAIsJAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/install.sh",
			"settings":
			{
				"buffer_size": 4419,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA2QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAQxEAAAAAAAAAAAAAQxEAAAAAAABDEQAAAAAAAPMNAAAjIS9iaW4vYmFzaAoKIyBJbnN0YWxsYXRpb24gc2NyaXB0IGZvciB0aGUgRmFtaWxpYXIgcHJvamVjdAoKIyAtLS0gQ29uZmlndXJhdGlvbiAtLS0KUFJPSkVDVF9ESVI9JChwd2QpICMgR2V0IHRoZSBjdXJyZW50IGRpcmVjdG9yeSAod2hlcmUgdGhlIHNjcmlwdCBpcyBydW4gZnJvbSkKU0VSVklDRV9OQU1FPSJmYW1pbGlhci1ib3QiClNFUlZJQ0VfRklMRT0iL2V0Yy9zeXN0ZW1kL3N5c3RlbS8ke1NFUlZJQ0VfTkFNRX0uc2VydmljZSIKRU5WX0RJUj0iL2V0Yy9mYW1pbGlhciIKRU5WX0ZJTEU9IiR7RU5WX0RJUn0vZmFtaWxpYXJfc2VydmljZS5lbnYiCkNVUlJFTlRfVVNFUj0kKHdob2FtaSkKQ1VSUkVOVF9HUk9VUD0kKGlkIC1nbiAiJENVUlJFTlRfVVNFUiIpClBZVEhPTl9QQVRIPSQod2hpY2ggcHl0aG9uMykgIyBGaW5kIHN5c3RlbSBweXRob24zIHBhdGgKCiMgLS0tIENoZWNrIGZvciByb290IHByaXZpbGVnZXMgLS0tCmlmIFsgIiRFVUlEIiAtbmUgMCBdOyB0aGVuCiAgZWNobyAi0J/QvtC20LDQu9GD0LnRgdGC0LAsINC30LDQv9GD0YHRgtC40YLQtSDRjdGC0L7RgiDRgdC60YDQuNC/0YIg0YEg0L/RgNCw0LLQsNC80Lggcm9vdCAo0LjRgdC/0L7Qu9GM0LfRg9GPIHN1ZG8pLiIKICBleGl0IDEKZmkKCmVjaG8gIi0tLSDQo9GB0YLQsNC90L7QstC60LAg0KTQsNC80LjQu9GM0Y/RgNCwIC0tLSIKZWNobyAi0KDQsNCx0L7Rh9Cw0Y8g0LTQuNGA0LXQutGC0L7RgNC40Y8g0L/RgNC+0LXQutGC0LA6ICR7UFJPSkVDVF9ESVJ9IgplY2hvICLQmNC80Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPOiAke0NVUlJFTlRfVVNFUn0iCmVjaG8gItCf0YPRgtGMINC6IFB5dGhvbiAzOiAke1BZVEhPTl9QQVRIfSIKCiMgLS0tIEdldCBUZWxlZ3JhbSBCb3QgVG9rZW4gLS0tCnJlYWQgLXAgItCS0LLQtdC00LjRgtC1INCy0LDRiCBUZWxlZ3JhbSBCb3QgVG9rZW46ICIgVEVMRUdSQU1fQk9UX1RPS0VOCmlmIFsgLXogIiRURUxFR1JBTV9CT1RfVE9LRU4iIF07IHRoZW4KICBlY2hvICLQntGI0LjQsdC60LA6INCi0L7QutC10L0g0L3QtSDQvNC+0LbQtdGCINCx0YvRgtGMINC/0YPRgdGC0YvQvC4iCiAgZXhpdCAxCmZpCgojIC0tLSBDcmVhdGUgRW52aXJvbm1lbnQgRGlyZWN0b3J5IGFuZCBGaWxlIC0tLQplY2hvICItLT4g0KHQvtC30LTQsNC90LjQtSDQtNC40YDQtdC60YLQvtGA0LjQuCDQuCDRhNCw0LnQu9CwINC+0LrRgNGD0LbQtdC90LjRjy4uLiIKbWtkaXIgLXAgIiRFTlZfRElSIgppZiBbICQ/IC1uZSAwIF07IHRoZW4gZWNobyAi0J7RiNC40LHQutCwINC/0YDQuCDRgdC+0LfQtNCw0L3QuNC4INC00LjRgNC10LrRgtC+0YDQuNC4ICR7RU5WX0RJUn0iOyBleGl0IDE7IGZpCgojIENyZWF0ZSBlbnYgZmlsZSB3aXRoIHRva2VuCmVjaG8gIlRFTEVHUkFNX0JPVF9UT0tFTj0ke1RFTEVHUkFNX0JPVF9UT0tFTn0iID4gIiRFTlZfRklMRSIKaWYgWyAkPyAtbmUgMCBdOyB0aGVuIGVjaG8gItCe0YjQuNCx0LrQsCDQv9GA0Lgg0YHQvtC30LTQsNC90LjQuCDRhNCw0LnQu9CwICR7RU5WX0ZJTEV9IjsgZXhpdCAxOyBmaQoKIyBTZXQgcGVybWlzc2lvbnMgZm9yIGVudiBmaWxlCmNob3duIHJvb3Q6IiRDVVJSRU5UX0dST1VQIiAiJEVOVl9GSUxFIgpjaG1vZCA2NDAgIiRFTlZfRklMRSIKZWNobyAi0KTQsNC50Lsg0L7QutGA0YPQttC10L3QuNGPICR7RU5WX0ZJTEV9INGB0L7Qt9C00LDQvS4iCgojIC0tLSBDcmVhdGUgc3lzdGVtZCBTZXJ2aWNlIEZpbGUgLS0tCmVjaG8gIi0tPiDQodC+0LfQtNCw0L3QuNC1INGE0LDQudC70LAg0YHQtdGA0LLQuNGB0LAgc3lzdGVtZC4uLiIKCiMgVXNlIGNhdCB3aXRoIEVPRiB0byBjcmVhdGUgdGhlIHNlcnZpY2UgZmlsZSBjb250ZW50CmNhdCA8PCBFT0YgPiAiJFNFUlZJQ0VfRklMRSIKIyBTeXN0ZW1kIHVuaXQgZmlsZSBmb3IgdGhlIEZhbWlsaWFyIFRlbGVncmFtIEJvdAojIEdlbmVyYXRlZCBieSBpbnN0YWxsLnNoCgpbVW5pdF0KRGVzY3JpcHRpb249RmFtaWxpYXIgVGVsZWdyYW0gQm90IEFzc2lzdGFudApBZnRlcj1uZXR3b3JrLnRhcmdldCBvbGxhbWEuc2VydmljZQpSZXF1aXJlcz1vbGxhbWEuc2VydmljZQoKW1NlcnZpY2VdClVzZXI9JHtDVVJSRU5UX1VTRVJ9Ckdyb3VwPSR7Q1VSUkVOVF9HUk9VUH0KV29ya2luZ0RpcmVjdG9yeT0ke1BST0pFQ1RfRElSfQpFbnZpcm9ubWVudEZpbGU9JHtFTlZfRklMRX0KRXhlY1N0YXJ0PSR7UFlUSE9OX1BBVEh9ICR7UFJPSkVDVF9ESVJ9L3RlbGVncmFtX2JvdC5weQpSZXN0YXJ0PW9uLWZhaWx1cmUKUmVzdGFydFNlYz01cwpTdGFuZGFyZE91dHB1dD1qb3VybmFsClN0YW5kYXJkRXJyb3I9am91cm5hbAoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CkVPRgoKaWYgWyAkPyAtbmUgMCBdOyB0aGVuIGVjaG8gItCe0YjQuNCx0LrQsCDQv9GA0Lgg0YHQvtC30LTQsNC90LjQuCDRhNCw0LnQu9CwICR7U0VSVklDRV9GSUxFfSI7IGV4aXQgMTsgZmkKCmVjaG8gItCk0LDQudC7INGB0LXRgNCy0LjRgdCwICR7U0VSVklDRV9GSUxFfSDRgdC+0LfQtNCw0L0uIgoKIyAtLS0gUmVsb2FkIHN5c3RlbWQsIGVuYWJsZSBhbmQgc3RhcnQgdGhlIHNlcnZpY2UgLS0tCmVjaG8gIi0tPiDQn9C10YDQtdC30LDQs9GA0YPQt9C60LAgc3lzdGVtZCDQuCDQt9Cw0L/Rg9GB0Log0YHQtdGA0LLQuNGB0LAuLi4iCnN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCnN5c3RlbWN0bCBlbmFibGUgIiR7U0VSVklDRV9OQU1FfS5zZXJ2aWNlIgppZiBbICQ/IC1uZSAwIF07IHRoZW4gZWNobyAi0J7RiNC40LHQutCwINC/0YDQuCDQstC60LvRjtGH0LXQvdC40Lgg0LDQstGC0L7Qt9Cw0L/Rg9GB0LrQsCDRgdC10YDQstC40YHQsC4iOyBleGl0IDE7IGZpCnN5c3RlbWN0bCBzdGFydCAiJHtTRVJWSUNFX05BTUV9LnNlcnZpY2UiCmlmIFsgJD8gLW5lIDAgXTsgdGhlbiBlY2hvICLQntGI0LjQsdC60LAg0L/RgNC4INC30LDQv9GD0YHQutC1INGB0LXRgNCy0LjRgdCwLiDQn9GA0L7QstC10YDRjNGC0LUg0LvQvtCz0Lg6IGpvdXJuYWxjdGwgLXUgJHtTRVJWSUNFX05BTUV9LnNlcnZpY2UiOyBleGl0IDE7IGZpCgplY2hvICLQodC10YDQstC40YEgJHtTRVJWSUNFX05BTUV9INCy0LrQu9GO0YfQtdC9INC4INC30LDQv9GD0YnQtdC9LiIKCiMgLS0tIENoZWNrIHNlcnZpY2Ugc3RhdHVzIC0tLQplY2hvICItLT4g0KLQtdC60YPRidC40Lkg0YHRgtCw0YLRg9GBINGB0LXRgNCy0LjRgdCwOiIKc3lzdGVtY3RsIHN0YXR1cyAiJHtTRVJWSUNFX05BTUV9LnNlcnZpY2UiIC0tbm8tcGFnZXIgIyAtLW5vLXBhZ2VyIHByZXZlbnRzIGxlc3MgZnJvbSBvcGVuaW5nCgplY2hvICItLS0g0KPRgdGC0LDQvdC+0LLQutCwINC30LDQstC10YDRiNC10L3QsCEgLS0tIgplY2hvICLQndC1INC30LDQsdGD0LTRjNGC0LUg0L3QsNGB0YLRgNC+0LjRgtGMINCw0LLRgtC+0LfQsNC/0YPRgdC6INGB0LrRgNC40L/RgtCwIHVwZGF0ZV9mYW1pbGlhcl9lbnYuc2gg0L/RgNC4INCy0YXQvtC00LUg0LIg0YHQuNGB0YLQtdC80YMg0LTQu9GPINC+0LHQvdC+0LLQu9C10L3QuNGPINC/0LXRgNC10LzQtdC90L3Ri9GFIEdVSS4iCgpleGl0IDAK",
					"AQAAAAAAAAABAAAAAAAAAAAAAADZCwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/intent_handlers/handle_add_alias.py",
			"settings":
			{
				"buffer_size": 3974,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "# File: intent_handlers/handle_add_alias.py"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAggcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAVggAAAAAAAAAAAAAVggAAAAAAABWCAAAAAAAAA8IAAAjIEZpbGU6IGludGVudF9oYW5kbGVycy9oYW5kbGVfYWRkX2FsaWFzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQgdXRpbHMgIyBJbXBvcnQgdXRpbHMgdG8gdXNlIGFsaWFzIGZ1bmN0aW9ucwoKZGVmIGhhbmRsZShwYXJhbWV0ZXJzLCBhcHBfYWxpYXNlcyk6CiAgICAiIiIKICAgIEhhbmRsZXMgdGhlICdhZGRfYWxpYXMnIGludGVudC4KICAgIEFkZHMgYSBuZXcgYWxpYXMgZm9yIGFuIGFwcGxpY2F0aW9uLgoKICAgIEFyZ3M6CiAgICAgICAgcGFyYW1ldGVycyAoZGljdCk6IERpY3Rpb25hcnkgb2YgcGFyYW1ldGVycyBleHRyYWN0ZWQgYnkgTkxVLgogICAgICAgICAgICAgICAgICAgICAgICAgICBFeHBlY3RlZCBrZXlzOiAnYXBwX25hbWUnLCAnYWxpYXNfbmFtZScuCiAgICAgICAgYXBwX2FsaWFzZXMgKGRpY3QpOiBUaGUgY3VycmVudCBkaWN0aW9uYXJ5IG9mIGFwcGxpY2F0aW9uIGFsaWFzZXMuCgogICAgUmV0dXJuczoKICAgICAgICBzdHI6IEEgbWVzc2FnZSBpbmRpY2F0aW5nIHN1Y2Nlc3Mgb3IgZmFpbHVyZS4KICAgICIiIgogICAgcHJpbnQoIltIQU5ETEVSX0FERF9BTElBU11bSU5GT10gSGFuZGxpbmcgJ2FkZF9hbGlhcycgaW50ZW50LiIpCiAgICBhcHBfbmFtZSA9IHBhcmFtZXRlcnMuZ2V0KCJhcHBfbmFtZSIpCiAgICBhbGlhc19uYW1lID0gcGFyYW1ldGVycy5nZXQoImFsaWFzX25hbWUiKQoKICAgIGlmIG5vdCBhcHBfbmFtZSBvciBub3QgYWxpYXNfbmFtZToKICAgICAgICBwcmludCgiW0hBTkRMRVJfQUREX0FMSUFTXVtFUlJPUl0gTWlzc2luZyAnYXBwX25hbWUnIG9yICdhbGlhc19uYW1lJyBwYXJhbWV0ZXIuIikKICAgICAgICByZXR1cm4gItCd0LUg0LzQvtCz0YMg0LTQvtCx0LDQstC40YLRjCDQv9GB0LXQstC00L7QvdC40LwuINCf0L7QttCw0LvRg9C50YHRgtCwLCDRg9C60LDQttC40YLQtSDQuNC80Y8g0L/RgNC40LvQvtC20LXQvdC40Y8g0Lgg0YHQsNC8INC/0YHQtdCy0LTQvtC90LjQvCAo0L3QsNC/0YDQuNC80LXRgCwgJ9C00L7QsdCw0LLRjCDQv9GB0LXQstC00L7QvdC40Lwg0YXRgNC+0Lwg0LTQu9GPINCz0YPQs9C7INGF0YDQvtC8JykuIgoKICAgICMgVXNlIHRoZSBhZGRfYWxpYXMgZnVuY3Rpb24gZnJvbSB1dGlscwogICAgc3VjY2VzcywgbWVzc2FnZSA9IHV0aWxzLmFkZF9hbGlhcyhhcHBfbmFtZSwgYWxpYXNfbmFtZSwgYXBwX2FsaWFzZXMpCgogICAgaWYgc3VjY2VzczoKICAgICAgICBwcmludChmIltIQU5ETEVSX0FERF9BTElBU11bU1VDQ0VTU10gQWxpYXMgJ3thbGlhc19uYW1lfScgZm9yICd7YXBwX25hbWV9JyBhZGRlZC4iKQogICAgICAgICMgT3B0aW9uYWxseSwgc2F2ZSB0aGUgdXBkYXRlZCBhbGlhc2VzIGltbWVkaWF0ZWx5CiAgICAgICAgc2F2ZV9zdWNjZXNzLCBzYXZlX21lc3NhZ2UgPSB1dGlscy5zYXZlX2FsaWFzZXMoYXBwX2FsaWFzZXMpCiAgICAgICAgaWYgc2F2ZV9zdWNjZXNzOgogICAgICAgICAgICBwcmludCgiW0hBTkRMRVJfQUREX0FMSUFTXVtJTkZPXSBBbGlhc2VzIHNhdmVkIHN1Y2Nlc3NmdWxseS4iKQogICAgICAgICAgICByZXR1cm4gbWVzc2FnZSAjIFJldHVybiB0aGUgc3VjY2VzcyBtZXNzYWdlIGZyb20gYWRkX2FsaWFzCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoZiJbSEFORExFUl9BRERfQUxJQVNdW0VSUk9SXSBGYWlsZWQgdG8gc2F2ZSBhbGlhc2VzOiB7c2F2ZV9tZXNzYWdlfSIpCiAgICAgICAgICAgICMgUmV0dXJuIHN1Y2Nlc3MgbWVzc2FnZSBmb3IgYWRkaW5nLCBidXQgbWF5YmUgd2FybiBhYm91dCBzYXZpbmc/CiAgICAgICAgICAgIHJldHVybiBmInttZXNzYWdlfSAo0JLQvdC40LzQsNC90LjQtTog0L3QtSDRg9C00LDQu9C+0YHRjCDRgdC+0YXRgNCw0L3QuNGC0Ywg0LDQu9C40LDRgdGLINCyINGE0LDQudC7ISkiCiAgICBlbHNlOgogICAgICAgIHByaW50KGYiW0hBTkRMRVJfQUREX0FMSUFTXVtXQVJOXSBGYWlsZWQgdG8gYWRkIGFsaWFzOiB7bWVzc2FnZX0iKQogICAgICAgIHJldHVybiBtZXNzYWdlICMgUmV0dXJuIHRoZSB3YXJuaW5nL2Vycm9yIG1lc3NhZ2UgZnJvbSBhZGRfYWxpYXMKCg",
					"AQAAAAAAAAABAAAAAAAAAAAAAACCBwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAjQgAAAAAAAAAAAAAjQgAAAAAAACNCAAAAAAAAOMIAAAjIEZpbGU6IGludGVudF9oYW5kbGVycy9oYW5kbGVfYWRkX2FsaWFzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQgdXRpbHMgIyBJbXBvcnQgdXRpbHMgdG8gdXNlIGFsaWFzIGZ1bmN0aW9ucwoKZGVmIGhhbmRsZShwYXJhbWV0ZXJzLCBhcHBfYWxpYXNlcyk6CiAgICAiIiIKICAgIEhhbmRsZXMgdGhlICdhZGRfYWxpYXMnIGludGVudC4KICAgIEFkZHMgYSBuZXcgYWxpYXMgZm9yIGFuIGFwcGxpY2F0aW9uLgoKICAgIEFyZ3M6CiAgICAgICAgcGFyYW1ldGVycyAoZGljdCk6IERpY3Rpb25hcnkgb2YgcGFyYW1ldGVycyBleHRyYWN0ZWQgYnkgTkxVLgogICAgICAgICAgICAgICAgICAgICAgICAgICBFeHBlY3RlZCBrZXlzOiAnYWxpYXNfbmFtZScsIGFuZCBlaXRoZXIgJ2FwcF9uYW1lJyBvciAnY2Fub25pY2FsX25hbWUnLgogICAgICAgIGFwcF9hbGlhc2VzIChkaWN0KTogVGhlIGN1cnJlbnQgZGljdGlvbmFyeSBvZiBhcHBsaWNhdGlvbiBhbGlhc2VzLgoKICAgIFJldHVybnM6CiAgICAgICAgc3RyOiBBIG1lc3NhZ2UgaW5kaWNhdGluZyBzdWNjZXNzIG9yIGZhaWx1cmUuCiAgICAiIiIKICAgIHByaW50KCJbSEFORExFUl9BRERfQUxJQVNdW0lORk9dIEhhbmRsaW5nICdhZGRfYWxpYXMnIGludGVudC4iKQogICAgIyAtLS0gTU9ESUZJRUQ6IENoZWNrIGZvciBib3RoICdhcHBfbmFtZScgYW5kICdjYW5vbmljYWxfbmFtZScgLS0tCiAgICBhcHBfbmFtZSA9IHBhcmFtZXRlcnMuZ2V0KCJhcHBfbmFtZSIpIG9yIHBhcmFtZXRlcnMuZ2V0KCJjYW5vbmljYWxfbmFtZSIpCiAgICBhbGlhc19uYW1lID0gcGFyYW1ldGVycy5nZXQoImFsaWFzX25hbWUiKQogICAgIyAtLS0gRU5EIE1PRElGSUNBVElPTiAtLS0KCiAgICBpZiBub3QgYXBwX25hbWUgb3Igbm90IGFsaWFzX25hbWU6CiAgICAgICAgcHJpbnQoZiJbSEFORExFUl9BRERfQUxJQVNdW0VSUk9SXSBNaXNzaW5nIGFwcF9uYW1lL2Nhbm9uaWNhbF9uYW1lICgne2FwcF9uYW1lfScpIG9yIGFsaWFzX25hbWUgKCd7YWxpYXNfbmFtZX0nKSBwYXJhbWV0ZXIuIikKICAgICAgICByZXR1cm4gItCd0LUg0LzQvtCz0YMg0LTQvtCx0LDQstC40YLRjCDQv9GB0LXQstC00L7QvdC40LwuINCf0L7QttCw0LvRg9C50YHRgtCwLCDRg9C60LDQttC40YLQtSDQuNC80Y8g0L/RgNC40LvQvtC20LXQvdC40Y8g0Lgg0YHQsNC8INC/0YHQtdCy0LTQvtC90LjQvCAo0L3QsNC/0YDQuNC80LXRgCwgJ9C00L7QsdCw0LLRjCDQv9GB0LXQstC00L7QvdC40Lwg0YXRgNC+0Lwg0LTQu9GPINCz0YPQs9C7INGF0YDQvtC8JykuIgoKICAgICMgVXNlIHRoZSBhZGRfYWxpYXMgZnVuY3Rpb24gZnJvbSB1dGlscwogICAgc3VjY2VzcywgbWVzc2FnZSA9IHV0aWxzLmFkZF9hbGlhcyhhcHBfbmFtZSwgYWxpYXNfbmFtZSwgYXBwX2FsaWFzZXMpCgogICAgaWYgc3VjY2VzczoKICAgICAgICBwcmludChmIltIQU5ETEVSX0FERF9BTElBU11bU1VDQ0VTU10gQWxpYXMgJ3thbGlhc19uYW1lfScgZm9yICd7YXBwX25hbWV9JyBhZGRlZC4iKQogICAgICAgICMgT3B0aW9uYWxseSwgc2F2ZSB0aGUgdXBkYXRlZCBhbGlhc2VzIGltbWVkaWF0ZWx5CiAgICAgICAgc2F2ZV9zdWNjZXNzLCBzYXZlX21lc3NhZ2UgPSB1dGlscy5zYXZlX2FsaWFzZXMoYXBwX2FsaWFzZXMpCiAgICAgICAgaWYgc2F2ZV9zdWNjZXNzOgogICAgICAgICAgICBwcmludCgiW0hBTkRMRVJfQUREX0FMSUFTXVtJTkZPXSBBbGlhc2VzIHNhdmVkIHN1Y2Nlc3NmdWxseS4iKQogICAgICAgICAgICByZXR1cm4gbWVzc2FnZSAjIFJldHVybiB0aGUgc3VjY2VzcyBtZXNzYWdlIGZyb20gYWRkX2FsaWFzCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoZiJbSEFORExFUl9BRERfQUxJQVNdW0VSUk9SXSBGYWlsZWQgdG8gc2F2ZSBhbGlhc2VzOiB7c2F2ZV9tZXNzYWdlfSIpCiAgICAgICAgICAgICMgUmV0dXJuIHN1Y2Nlc3MgbWVzc2FnZSBmb3IgYWRkaW5nLCBidXQgbWF5YmUgd2FybiBhYm91dCBzYXZpbmc/CiAgICAgICAgICAgIHJldHVybiBmInttZXNzYWdlfSAo0JLQvdC40LzQsNC90LjQtTog0L3QtSDRg9C00LDQu9C+0YHRjCDRgdC+0YXRgNCw0L3QuNGC0Ywg0LDQu9C40LDRgdGLINCyINGE0LDQudC7ISkiCiAgICBlbHNlOgogICAgICAgIHByaW50KGYiW0hBTkRMRVJfQUREX0FMSUFTXVtXQVJOXSBGYWlsZWQgdG8gYWRkIGFsaWFzOiB7bWVzc2FnZX0iKQogICAgICAgIHJldHVybiBtZXNzYWdlICMgUmV0dXJuIHRoZSB3YXJuaW5nL2Vycm9yIG1lc3NhZ2UgZnJvbSBhZGRfYWxpYXMK",
					"AQAAAAAAAAABAAAAAAAAAAAAAABWCAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAeA4AAAAAAAAAAAAAeA4AAAAAAAB4DgAAAAAAACAJAAAjIEZpbGU6IGludGVudF9oYW5kbGVycy9oYW5kbGVfYWRkX2FsaWFzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQgdXRpbHMgIyBJbXBvcnQgdXRpbHMgdG8gdXNlIGFsaWFzIGZ1bmN0aW9ucwoKZGVmIGhhbmRsZShwYXJhbWV0ZXJzLCBhcHBfYWxpYXNlcyk6CiAgICAiIiIKICAgIEhhbmRsZXMgdGhlICdhZGRfYWxpYXMnIGludGVudC4KICAgIEFkZHMgYSBuZXcgYWxpYXMgZm9yIGFuIGFwcGxpY2F0aW9uIGFmdGVyIHZhbGlkYXRpb24uCgogICAgQXJnczoKICAgICAgICBwYXJhbWV0ZXJzIChkaWN0KTogRGljdGlvbmFyeSBvZiBwYXJhbWV0ZXJzIGV4dHJhY3RlZCBieSBOTFUuCiAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4cGVjdGVkIGtleXM6ICdhcHBfbmFtZScsICdhbGlhc19uYW1lJy4KICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FwcF9uYW1lJyBzaG91bGQgYmUgdGhlIGFjdHVhbCBjb21tYW5kL2V4ZWN1dGFibGUgbmFtZS4KICAgICAgICBhcHBfYWxpYXNlcyAoZGljdCk6IFRoZSBjdXJyZW50IGRpY3Rpb25hcnkgb2YgYXBwbGljYXRpb24gYWxpYXNlcy4KCiAgICBSZXR1cm5zOgogICAgICAgIHN0cjogQSBtZXNzYWdlIGluZGljYXRpbmcgc3VjY2VzcyBvciBmYWlsdXJlLgogICAgIiIiCiAgICBwcmludCgiW0hBTkRMRVJfQUREX0FMSUFTXVtJTkZPXSBIYW5kbGluZyAnYWRkX2FsaWFzJyBpbnRlbnQuIikKICAgICMgLS0tIE1PRElGSUVEOiBFeHBlY3QgJ2FwcF9uYW1lJyBzdHJpY3RseSBmb3IgdGhlIGNvbW1hbmQgLS0tCiAgICBhcHBfbmFtZSA9IHBhcmFtZXRlcnMuZ2V0KCJhcHBfbmFtZSIpCiAgICBhbGlhc19uYW1lID0gcGFyYW1ldGVycy5nZXQoImFsaWFzX25hbWUiKQogICAgIyAtLS0gRU5EIE1PRElGSUNBVElPTiAtLS0KCiAgICBpZiBub3QgYXBwX25hbWUgb3Igbm90IGFsaWFzX25hbWU6CiAgICAgICAgIyBJbmNsdWRlIHJlY2VpdmVkIHBhcmFtZXRlcnMgaW4gbG9nIGZvciBlYXNpZXIgZGVidWdnaW5nCiAgICAgICAgcHJpbnQoZiJbSEFORExFUl9BRERfQUxJQVNdW0VSUk9SXSBNaXNzaW5nICdhcHBfbmFtZScgKCd7YXBwX25hbWV9Jykgb3IgJ2FsaWFzX25hbWUnICgne2FsaWFzX25hbWV9JykgcGFyYW1ldGVyLiIpCiAgICAgICAgcmV0dXJuICLQndC1INC80L7Qs9GDINC00L7QsdCw0LLQuNGC0Ywg0L/RgdC10LLQtNC+0L3QuNC8LiDQn9C+0LbQsNC70YPQudGB0YLQsCwg0YPQutCw0LbQuNGC0LUg0LjQvNGPINC60L7QvNCw0L3QtNGLINC/0YDQuNC70L7QttC10L3QuNGPINC4INGB0LDQvCDQv9GB0LXQstC00L7QvdC40LwgKNC90LDQv9GA0LjQvNC10YAsICfQtNC+0LHQsNCy0Ywg0L/RgdC10LLQtNC+0L3QuNC8INGF0YDQvtC8INC00LvRjyDQutC+0LzQsNC90LTRiyBnb29nbGUtY2hyb21lJykuIgoKICAgICMgVXNlIHRoZSBhZGRfYWxpYXMgZnVuY3Rpb24gZnJvbSB1dGlscyAod2hpY2ggbm93IGluY2x1ZGVzIHZhbGlkYXRpb24pCiAgICBzdWNjZXNzLCBtZXNzYWdlID0gdXRpbHMuYWRkX2FsaWFzKGFwcF9uYW1lLCBhbGlhc19uYW1lLCBhcHBfYWxpYXNlcykKCiAgICBpZiBzdWNjZXNzOgogICAgICAgIHByaW50KGYiW0hBTkRMRVJfQUREX0FMSUFTXVtTVUNDRVNTXSBBbGlhcyAne2FsaWFzX25hbWV9JyBmb3IgY29tbWFuZCAne2FwcF9uYW1lfScgYWRkZWQuIikKICAgICAgICAjIFNhdmUgdGhlIHVwZGF0ZWQgYWxpYXNlcyBpbW1lZGlhdGVseQogICAgICAgIHNhdmVfc3VjY2Vzcywgc2F2ZV9tZXNzYWdlID0gdXRpbHMuc2F2ZV9hbGlhc2VzKGFwcF9hbGlhc2VzKQogICAgICAgIGlmIHNhdmVfc3VjY2VzczoKICAgICAgICAgICAgcHJpbnQoIltIQU5ETEVSX0FERF9BTElBU11bSU5GT10gQWxpYXNlcyBzYXZlZCBzdWNjZXNzZnVsbHkuIikKICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2UgIyBSZXR1cm4gdGhlIHN1Y2Nlc3MgbWVzc2FnZSBmcm9tIGFkZF9hbGlhcwogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KGYiW0hBTkRMRVJfQUREX0FMSUFTXVtFUlJPUl0gRmFpbGVkIHRvIHNhdmUgYWxpYXNlczoge3NhdmVfbWVzc2FnZX0iKQogICAgICAgICAgICByZXR1cm4gZiJ7bWVzc2FnZX0gKNCS0L3QuNC80LDQvdC40LU6INC90LUg0YPQtNCw0LvQvtGB0Ywg0YHQvtGF0YDQsNC90LjRgtGMINCw0LvQuNCw0YHRiyDQsiDRhNCw0LnQuyEpIgogICAgZWxzZToKICAgICAgICBwcmludChmIltIQU5ETEVSX0FERF9BTElBU11bV0FSTl0gRmFpbGVkIHRvIGFkZCBhbGlhczoge21lc3NhZ2V9IikKICAgICAgICByZXR1cm4gbWVzc2FnZSAjIFJldHVybiB0aGUgd2FybmluZy9lcnJvciBtZXNzYWdlIGZyb20gYWRkX2FsaWFzCg",
					"AQAAAAAAAAABAAAAAAAAAAAAAACNCAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAhg8AAAAAAAAAAAAAhg8AAAAAAACGDwAAAAAAAG0PAAAjIEZpbGU6IGludGVudF9oYW5kbGVycy9oYW5kbGVfYWRkX2FsaWFzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQgdXRpbHMKaW1wb3J0IHNodXRpbCAjIFRvIGNoZWNrIGlmIGNvbW1hbmQgZXhpc3RzCgpkZWYgaGFuZGxlKHBhcmFtZXRlcnMsIGFwcF9hbGlhc2VzKToKICAgICIiIgogICAgSGFuZGxlcyB0aGUgJ2FkZF9hbGlhcycgaW50ZW50IHVzaW5nIHRoZSByb2J1c3QgZW50aXR5IGNoZWNraW5nIGxvZ2ljLgogICAgRGV0ZXJtaW5lcyB3aGljaCBlbnRpdHkgaXMgdGhlIGNvbW1hbmQgYW5kIHdoaWNoIGlzIHRoZSBhbGlhcy4KCiAgICBBcmdzOgogICAgICAgIHBhcmFtZXRlcnMgKGRpY3QpOiBEaWN0aW9uYXJ5IG9mIHBhcmFtZXRlcnMgZXh0cmFjdGVkIGJ5IE5MVS4KICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhwZWN0ZWQga2V5czogJ2VudGl0eTEnLCAnZW50aXR5MicuCiAgICAgICAgYXBwX2FsaWFzZXMgKGRpY3QpOiBUaGUgY3VycmVudCBkaWN0aW9uYXJ5IG9mIGFwcGxpY2F0aW9uIGFsaWFzZXMuCgogICAgUmV0dXJuczoKICAgICAgICBzdHI6IEEgbWVzc2FnZSBpbmRpY2F0aW5nIHN1Y2Nlc3Mgb3IgZmFpbHVyZS4KICAgICIiIgogICAgcHJpbnQoZiJbSEFORExFUl9BRERfQUxJQVNdW0lORk9dIEhhbmRsaW5nICdhZGRfYWxpYXMnIGludGVudCB3aXRoIHBhcmFtZXRlcnM6IHtwYXJhbWV0ZXJzfSIpCgogICAgZW50aXR5MSA9IHBhcmFtZXRlcnMuZ2V0KCJlbnRpdHkxIikKICAgIGVudGl0eTIgPSBwYXJhbWV0ZXJzLmdldCgiZW50aXR5MiIpCgogICAgaWYgbm90IGVudGl0eTEgb3Igbm90IGVudGl0eTI6CiAgICAgICAgcHJpbnQoZiJbSEFORExFUl9BRERfQUxJQVNdW0VSUk9SXSBNaXNzaW5nIGVudGl0eTEgKCd7ZW50aXR5MX0nKSBvciBlbnRpdHkyICgne2VudGl0eTJ9JykgcGFyYW1ldGVyLiBOTFUgbWlnaHQgbmVlZCBhZGp1c3RtZW50LiIpCiAgICAgICAgIyBTdWdnZXN0IGEgZm9ybWF0IHRoYXQgaGVscHMgTkxVIGV4dHJhY3QgdHdvIGRpc3RpbmN0IGVudGl0aWVzCiAgICAgICAgcmV0dXJuICLQndC1INC80L7Qs9GDINC00L7QsdCw0LLQuNGC0Ywg0L/RgdC10LLQtNC+0L3QuNC8LiDQn9C+0LbQsNC70YPQudGB0YLQsCwg0YPQutCw0LbQuNGC0LUg0LTQstCwINC40LzQtdC90Lgg0LTQu9GPINGB0LLRj9C30LggKNC90LDQv9GA0LjQvNC10YAsICfRgdCy0Y/QttC4INCx0YDQsNGD0LfQtdGAINC4IGdvb2dsZS1jaHJvbWUnKS4iCgogICAgZW50aXR5MV9sb3dlciA9IGVudGl0eTEubG93ZXIoKQogICAgZW50aXR5Ml9sb3dlciA9IGVudGl0eTIubG93ZXIoKQoKICAgICMgQ2hlY2sgd2hpY2ggZW50aXR5IGlzIHRoZSBjb21tYW5kIHVzaW5nIHNodXRpbC53aGljaAogICAgZW50aXR5MV9pc19jb21tYW5kID0gc2h1dGlsLndoaWNoKGVudGl0eTFfbG93ZXIpIGlzIG5vdCBOb25lCiAgICBlbnRpdHkyX2lzX2NvbW1hbmQgPSBzaHV0aWwud2hpY2goZW50aXR5Ml9sb3dlcikgaXMgbm90IE5vbmUKCiAgICBhcHBfbmFtZV9jb21tYW5kID0gTm9uZQogICAgYWxpYXNfbmFtZSA9IE5vbmUKCiAgICBpZiBlbnRpdHkxX2lzX2NvbW1hbmQgYW5kIG5vdCBlbnRpdHkyX2lzX2NvbW1hbmQ6CiAgICAgICAgYXBwX25hbWVfY29tbWFuZCA9IGVudGl0eTFfbG93ZXIKICAgICAgICBhbGlhc19uYW1lID0gZW50aXR5Ml9sb3dlcgogICAgICAgIHByaW50KGYiW0hBTkRMRVJfQUREX0FMSUFTXVtERUJVR10gRGV0ZXJtaW5lZDogQ29tbWFuZD0ne2FwcF9uYW1lX2NvbW1hbmR9JywgQWxpYXM9J3thbGlhc19uYW1lfSciKQogICAgZWxpZiBub3QgZW50aXR5MV9pc19jb21tYW5kIGFuZCBlbnRpdHkyX2lzX2NvbW1hbmQ6CiAgICAgICAgYXBwX25hbWVfY29tbWFuZCA9IGVudGl0eTJfbG93ZXIKICAgICAgICBhbGlhc19uYW1lID0gZW50aXR5MV9sb3dlcgogICAgICAgIHByaW50KGYiW0hBTkRMRVJfQUREX0FMSUFTXVtERUJVR10gRGV0ZXJtaW5lZDogQ29tbWFuZD0ne2FwcF9uYW1lX2NvbW1hbmR9JywgQWxpYXM9J3thbGlhc19uYW1lfSciKQogICAgZWxpZiBlbnRpdHkxX2lzX2NvbW1hbmQgYW5kIGVudGl0eTJfaXNfY29tbWFuZDoKICAgICAgICAjIEJvdGggYXJlIGNvbW1hbmRzLCB0aGlzIGlzIGFtYmlndW91cyBvciBwb3RlbnRpYWxseSBwcm9ibGVtYXRpYwogICAgICAgICMgTWF5YmUgYWxsb3cgYWxpYXNpbmcgb25lIGNvbW1hbmQgdG8gYW5vdGhlcj8gRm9yIG5vdywgbGV0J3MgZGlzYWxsb3cuCiAgICAgICAgbXNnID0gZiLQntGI0LjQsdC60LA6INCe0LHQsCAne2VudGl0eTF9JyDQuCAne2VudGl0eTJ9JyDRj9Cy0LvRj9GO0YLRgdGPINGB0YPRidC10YHRgtCy0YPRjtGJ0LjQvNC4INC60L7QvNCw0L3QtNCw0LzQuC4g0J3QtSDQvNC+0LPRgyDRgdC+0LfQtNCw0YLRjCDQv9GB0LXQstC00L7QvdC40LwuIgogICAgICAgIHByaW50KGYiW0hBTkRMRVJfQUREX0FMSUFTXVtFUlJPUl0gQm90aCBlbnRpdGllcyBhcmUgY29tbWFuZHM6ICd7ZW50aXR5MX0nLCAne2VudGl0eTJ9Jy4iKQogICAgICAgIHJldHVybiBtc2cKICAgIGVsc2U6ICMgTmVpdGhlciBpcyBhIGNvbW1hbmQKICAgICAgICBtc2cgPSBmItCe0YjQuNCx0LrQsDog0J3QuCAne2VudGl0eTF9Jywg0L3QuCAne2VudGl0eTJ9JyDQvdC1INGP0LLQu9GP0Y7RgtGB0Y8g0LjQt9Cy0LXRgdGC0L3Ri9C80Lgg0LrQvtC80LDQvdC00LDQvNC4INCyINGB0LjRgdGC0LXQvNC1LiDQndC1INC80L7Qs9GDINGB0L7Qt9C00LDRgtGMINC/0YHQtdCy0LTQvtC90LjQvC4iCiAgICAgICAgcHJpbnQoZiJbSEFORExFUl9BRERfQUxJQVNdW0VSUk9SXSBOZWl0aGVyIGVudGl0eSBpcyBhIGNvbW1hbmQ6ICd7ZW50aXR5MX0nLCAne2VudGl0eTJ9Jy4iKQogICAgICAgIHJldHVybiBtc2cKCiAgICAjIElmIHdlIGNvcnJlY3RseSBpZGVudGlmaWVkIGNvbW1hbmQgYW5kIGFsaWFzLCBwcm9jZWVkIHVzaW5nIHV0aWxzCiAgICBwcmludChmIltIQU5ETEVSX0FERF9BTElBU11bSU5GT10gUHJvY2VlZGluZyB0byBhZGQgYWxpYXMgJ3thbGlhc19uYW1lfScgZm9yIGNvbW1hbmQgJ3thcHBfbmFtZV9jb21tYW5kfScuIikKICAgIHN1Y2Nlc3MsIG1lc3NhZ2UgPSB1dGlscy5hZGRfYWxpYXMoYXBwX25hbWVfY29tbWFuZCwgYWxpYXNfbmFtZSwgYXBwX2FsaWFzZXMpICMgUGFzcyBkZXRlcm1pbmVkIG5hbWVzCgogICAgaWYgc3VjY2VzczoKICAgICAgICBwcmludChmIltIQU5ETEVSX0FERF9BTElBU11bU1VDQ0VTU10gQWxpYXMgJ3thbGlhc19uYW1lfScgZm9yIGNvbW1hbmQgJ3thcHBfbmFtZV9jb21tYW5kfScgYWRkZWQgYnkgdXRpbHMuIikKICAgICAgICAjIFNhdmUgdGhlIHVwZGF0ZWQgYWxpYXNlcyBpbW1lZGlhdGVseQogICAgICAgIHNhdmVfc3VjY2Vzcywgc2F2ZV9tZXNzYWdlID0gdXRpbHMuc2F2ZV9hbGlhc2VzKGFwcF9hbGlhc2VzKQogICAgICAgIGlmIHNhdmVfc3VjY2VzczoKICAgICAgICAgICAgcHJpbnQoIltIQU5ETEVSX0FERF9BTElBU11bSU5GT10gQWxpYXNlcyBzYXZlZCBzdWNjZXNzZnVsbHkuIikKICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2UKICAgICAgICBlbHNlOgogICAgICAgICAgICBwcmludChmIltIQU5ETEVSX0FERF9BTElBU11bRVJST1JdIEZhaWxlZCB0byBzYXZlIGFsaWFzZXM6IHtzYXZlX21lc3NhZ2V9IikKICAgICAgICAgICAgcmV0dXJuIGYie21lc3NhZ2V9ICjQktC90LjQvNCw0L3QuNC1OiDQvdC1INGD0LTQsNC70L7RgdGMINGB0L7RhdGA0LDQvdC40YLRjCDQsNC70LjQsNGB0Ysg0LIg0YTQsNC50LshKSIKICAgIGVsc2U6CiAgICAgICAgIyBJZiB1dGlscy5hZGRfYWxpYXMgZmFpbGVkIChlLmcuLCBhbGlhcyBjb25mbGljdCkKICAgICAgICBwcmludChmIltIQU5ETEVSX0FERF9BTElBU11bV0FSTl0gRmFpbGVkIHRvIGFkZCBhbGlhcyB2aWEgdXRpbHM6IHttZXNzYWdlfSIpCiAgICAgICAgcmV0dXJuIG1lc3NhZ2UK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAB4DgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/utils.py",
			"settings":
			{
				"buffer_size": 5326,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAmhIAAAAAAAAAAAAAmhIAAAAAAACaEgAAAAAAALYGAAAjIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQoKaW1wb3J0IGpzb24KaW1wb3J0IG9zCgojIC0tLSDQmtC+0L3RgdGC0LDQvdGC0YsgLS0tCiMg0J/Rg9GC0Ywg0Log0YTQsNC50LvRgyDQsNC70LjQsNGB0L7QsiDQvtGC0L3QvtGB0LjRgtC10LvRjNC90L4g0L/QsNC/0LrQuCBjb25maWcKQUxJQVNFU19GSUxFX1BBVEggPSBvcy5wYXRoLmpvaW4oJ2NvbmZpZycsICdhcHBfYWxpYXNlcy5qc29uJykKCmRlZiBsb2FkX2FsaWFzZXMoZmlsZXBhdGg9QUxJQVNFU19GSUxFX1BBVEgpOgogICAgIiIi0JfQsNCz0YDRg9C20LDQtdGCINCw0LvQuNCw0YHRiyDQuNC3IEpTT04g0YTQsNC50LvQsC4iIiIKICAgIHByaW50KGYiW0RFQlVHXSDQn9C+0L/Ri9GC0LrQsCDQt9Cw0LPRgNGD0LfQutC4INCw0LvQuNCw0YHQvtCyINC40Lc6IHtmaWxlcGF0aH0iKQogICAgIyDQmNGB0L/QvtC70YzQt9GD0LXQvCDQsNCx0YHQvtC70Y7RgtC90YvQuSDQv9GD0YLRjCDQvtGCINC80LXRgdGC0LAg0LfQsNC/0YPRgdC60LAg0YHQutGA0LjQv9GC0LAsCiAgICAjINC/0YDQtdC00L/QvtC70LDQs9Cw0Y8sINGH0YLQviDRgdC60YDQuNC/0YIg0LfQsNC/0YPRgdC60LDQtdGC0YHRjyDQuNC3INC60L7RgNC90LXQstC+0Lkg0L/QsNC/0LrQuCDQv9GA0L7QtdC60YLQsCBmYW1pbGlhcl9wcm9qZWN0LwogICAgYWJzX2ZpbGVwYXRoID0gb3MucGF0aC5hYnNwYXRoKGZpbGVwYXRoKQogICAgcHJpbnQoZiJbREVCVUddINCQ0LHRgdC+0LvRjtGC0L3Ri9C5INC/0YPRgtGMINC6INGE0LDQudC70YMg0LDQu9C40LDRgdC+0LI6IHthYnNfZmlsZXBhdGh9IikKICAgIHRyeToKICAgICAgICB3aXRoIG9wZW4oYWJzX2ZpbGVwYXRoLCAncicsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgIGFsaWFzZXMgPSBqc29uLmxvYWQoZikKICAgICAgICAjINCf0YDQuNCy0L7QtNC40Lwg0LrQu9GO0YfQuCDQsNC70LjQsNGB0L7QsiDQuiDQvdC40LbQvdC10LzRgyDRgNC10LPQuNGB0YLRgNGDINC00LvRjyDRg9C00L7QsdGB0YLQstCwINC/0L7QuNGB0LrQsAogICAgICAgIHJldHVybiB7ay5sb3dlcigpOiB2IGZvciBrLCB2IGluIGFsaWFzZXMuaXRlbXMoKX0KICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoKICAgICAgICBwcmludChmItCf0YDQtdC00YPQv9GA0LXQttC00LXQvdC40LU6INCk0LDQudC7INCw0LvQuNCw0YHQvtCyICd7YWJzX2ZpbGVwYXRofScg0L3QtSDQvdCw0LnQtNC10L0uIikKICAgICAgICByZXR1cm4ge30KICAgIGV4Y2VwdCBqc29uLkpTT05EZWNvZGVFcnJvcjoKICAgICAgICBwcmludChmItCe0YjQuNCx0LrQsDog0J3QtSDRg9C00LDQu9C+0YHRjCDQv9GA0L7Rh9C40YLQsNGC0YwgSlNPTiDQuNC3INGE0LDQudC70LAgJ3thYnNfZmlsZXBhdGh9Jy4g0KTQsNC50Lsg0L/QvtCy0YDQtdC20LTQtdC9INC40LvQuCDQv9GD0YHRgj8iKQogICAgICAgIHJldHVybiB7fQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYi0J3QtdC40LfQstC10YHRgtC90LDRjyDQvtGI0LjQsdC60LAg0L/RgNC4INC30LDQs9GA0YPQt9C60LUg0LDQu9C40LDRgdC+0LIg0LjQtyAne2Fic19maWxlcGF0aH0nOiB7ZX0iKQogICAgICAgIHJldHVybiB7fQoKIyDQnNC+0LbQvdC+INC00L7QsdCw0LLQuNGC0Ywg0LfQtNC10YHRjCDQtNGA0YPQs9C40LUg0L7QsdGJ0LjQtSDRg9GC0LjQu9C40YLRiyDQsiDQsdGD0LTRg9GJ0LXQvA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAGBQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAA+xMAAAAAAAAAAAAA+xMAAAAAAAD7EwAAAAAAAJgTAAAjIEZpbGU6IHV0aWxzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQganNvbgppbXBvcnQgb3MKCiMgLS0tIENvbmZpZ3VyYXRpb24gLS0tCiMgRGV0ZXJtaW5lIHRoZSBwYXRoIHJlbGF0aXZlIHRvIHRoaXMgdXRpbHMucHkgZmlsZQojIFRoaXMgbWFrZXMgaXQgd29yayByZWdhcmRsZXNzIG9mIHdoZXJlIHRoZSBtYWluIHNjcmlwdCBpcyBydW4gZnJvbQpDT05GSUdfRElSID0gb3MucGF0aC5qb2luKG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKSwgJy4uJywgJ2NvbmZpZycpCkFMSUFTRVNfRklMRSA9IG9zLnBhdGguam9pbihDT05GSUdfRElSLCAnYWxpYXNlcy5qc29uJykKCiMgLS0tIEFsaWFzIE1hbmFnZW1lbnQgLS0tCgpkZWYgbG9hZF9hbGlhc2VzKCk6CiAgICAiIiJMb2FkcyBhbGlhc2VzIGZyb20gdGhlIEpTT04gZmlsZS4iIiIKICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0lORk9dIEF0dGVtcHRpbmcgdG8gbG9hZCBhbGlhc2VzIGZyb206IHtBTElBU0VTX0ZJTEV9IikKICAgICMgRW5zdXJlIHRoZSBjb25maWcgZGlyZWN0b3J5IGV4aXN0cwogICAgb3MubWFrZWRpcnMoQ09ORklHX0RJUiwgZXhpc3Rfb2s9VHJ1ZSkKICAgIHRyeToKICAgICAgICAjIENyZWF0ZSB0aGUgZmlsZSB3aXRoIGFuIGVtcHR5IGRpY3QgaWYgaXQgZG9lc24ndCBleGlzdAogICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhBTElBU0VTX0ZJTEUpOgogICAgICAgICAgICB3aXRoIG9wZW4oQUxJQVNFU19GSUxFLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgICAgICBqc29uLmR1bXAoe30sIGYpCiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW1dBUk5dIEFsaWFzIGZpbGUgbm90IGZvdW5kLiBDcmVhdGVkIGVtcHR5IGZpbGU6IHtBTElBU0VTX0ZJTEV9IikKICAgICAgICAgICAgcmV0dXJuIHt9CgogICAgICAgICMgTG9hZCBleGlzdGluZyBmaWxlCiAgICAgICAgd2l0aCBvcGVuKEFMSUFTRVNfRklMRSwgJ3InLCBlbmNvZGluZz0ndXRmLTgnKSBhcyBmOgogICAgICAgICAgICBhbGlhc2VzID0ganNvbi5sb2FkKGYpCiAgICAgICAgICAgICMgRW5zdXJlIGl0J3MgYSBkaWN0aW9uYXJ5CiAgICAgICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKGFsaWFzZXMsIGRpY3QpOgogICAgICAgICAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bRVJST1JdIEFsaWFzIGZpbGUgY29udGVudCBpcyBub3QgYSB2YWxpZCBkaWN0aW9uYXJ5LiBSZXR1cm5pbmcgZW1wdHkuIikKICAgICAgICAgICAgICAgIHJldHVybiB7fQogICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtTVUNDRVNTXSBBbGlhc2VzIGxvYWRlZCAoe2xlbihhbGlhc2VzKX0gZm91bmQpLiIpCiAgICAgICAgICAgIHJldHVybiBhbGlhc2VzCiAgICBleGNlcHQganNvbi5KU09ORGVjb2RlRXJyb3I6CiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bRVJST1JdIEVycm9yIGRlY29kaW5nIEpTT04gZnJvbSB7QUxJQVNFU19GSUxFfS4gUmV0dXJuaW5nIGVtcHR5LiIpCiAgICAgICAgcmV0dXJuIHt9CiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bRVJST1JdIEZhaWxlZCB0byBsb2FkIGFsaWFzZXM6IHtlfSIpCiAgICAgICAgcmV0dXJuIHt9CgojIC0tLSBORVcgRlVOQ1RJT04gLS0tCmRlZiBzYXZlX2FsaWFzZXMoYWxpYXNlcyk6CiAgICAiIiJTYXZlcyB0aGUgYWxpYXNlcyBkaWN0aW9uYXJ5IHRvIHRoZSBKU09OIGZpbGUuIiIiCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtJTkZPXSBBdHRlbXB0aW5nIHRvIHNhdmUgYWxpYXNlcyB0bzoge0FMSUFTRVNfRklMRX0iKQogICAgIyBFbnN1cmUgdGhlIGNvbmZpZyBkaXJlY3RvcnkgZXhpc3RzCiAgICBvcy5tYWtlZGlycyhDT05GSUdfRElSLCBleGlzdF9vaz1UcnVlKQogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihBTElBU0VTX0ZJTEUsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAganNvbi5kdW1wKGFsaWFzZXMsIGYsIGVuc3VyZV9hc2NpaT1GYWxzZSwgaW5kZW50PTQpICMgU2F2ZSB3aXRoIGluZGVudGF0aW9uCiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bU1VDQ0VTU10gQWxpYXNlcyBzYXZlZCBzdWNjZXNzZnVsbHkuIikKICAgICAgICByZXR1cm4gVHJ1ZSwgItCQ0LvQuNCw0YHRiyDRgdC+0YXRgNCw0L3QtdC90YsuIgogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSBGYWlsZWQgdG8gc2F2ZSBhbGlhc2VzOiB7ZX0iKQogICAgICAgIHJldHVybiBGYWxzZSwgZiLQntGI0LjQsdC60LAg0L/RgNC4INGB0L7RhdGA0LDQvdC10L3QuNC4INCw0LvQuNCw0YHQvtCyOiB7ZX0iCgojIC0tLSBNT0RJRklFRCBGVU5DVElPTiAtLS0KZGVmIGFkZF9hbGlhcyhhcHBfbmFtZSwgYWxpYXNfbmFtZSwgYWxpYXNlc19kaWN0KToKICAgICIiIgogICAgQWRkcyBhIG5ldyBhbGlhcyB0byB0aGUgZGljdGlvbmFyeS4KICAgIE5vcm1hbGl6ZXMgbmFtZXMvYWxpYXNlcyB0byBsb3dlcmNhc2UuCiAgICBDaGVja3MgZm9yIGNvbmZsaWN0cy4KCiAgICBBcmdzOgogICAgICAgIGFwcF9uYW1lIChzdHIpOiBUaGUgY2Fub25pY2FsIGFwcGxpY2F0aW9uIG5hbWUuCiAgICAgICAgYWxpYXNfbmFtZSAoc3RyKTogVGhlIGFsaWFzIHRvIGFkZC4KICAgICAgICBhbGlhc2VzX2RpY3QgKGRpY3QpOiBUaGUgZGljdGlvbmFyeSB0byBhZGQgdGhlIGFsaWFzIHRvLgoKICAgIFJldHVybnM6CiAgICAgICAgdHVwbGU6IChib29sLCBzdHIpIGluZGljYXRpbmcgc3VjY2VzcyBhbmQgYSBtZXNzYWdlLgogICAgIiIiCiAgICBhcHBfbmFtZV9sb3dlciA9IGFwcF9uYW1lLmxvd2VyKCkKICAgIGFsaWFzX25hbWVfbG93ZXIgPSBhbGlhc19uYW1lLmxvd2VyKCkKICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0lORk9dIEFkZGluZyBhbGlhcyAne2FsaWFzX25hbWVfbG93ZXJ9JyBmb3IgYXBwICd7YXBwX25hbWVfbG93ZXJ9Jy4iKQoKICAgICMgQ2hlY2sgaWYgYWxpYXMgaXMgYWxyZWFkeSB0aGUgY2Fub25pY2FsIG5hbWUgb2Ygc29tZSBhcHAgKG9yIGFub3RoZXIgYWxpYXMpCiAgICBpZiBhbGlhc19uYW1lX2xvd2VyIGluIGFsaWFzZXNfZGljdC52YWx1ZXMoKSBvciBhbGlhc19uYW1lX2xvd2VyIGluIGFsaWFzZXNfZGljdC5rZXlzKCk6CiAgICAgICAgICMgQ2hlY2sgaWYgaXQncyBhbHJlYWR5IGFuIGFsaWFzIGZvciBUSElTIGFwcF9uYW1lCiAgICAgICAgIGV4aXN0aW5nX2FwcCA9IE5vbmUKICAgICAgICAgZm9yIGEsIGNhbm9uaWNhbCBpbiBhbGlhc2VzX2RpY3QuaXRlbXMoKToKICAgICAgICAgICAgIGlmIGEgPT0gYWxpYXNfbmFtZV9sb3dlcjoKICAgICAgICAgICAgICAgICBleGlzdGluZ19hcHAgPSBjYW5vbmljYWwKICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgaWYgY2Fub25pY2FsID09IGFsaWFzX25hbWVfbG93ZXI6ICMgQ2hlY2sgaWYgaXQgSVMgYSBjYW5vbmljYWwgbmFtZSBhbHJlYWR5IGFsaWFzZWQKICAgICAgICAgICAgICAgICBleGlzdGluZ19hcHAgPSBjYW5vbmljYWwKICAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAgaWYgZXhpc3RpbmdfYXBwID09IGFwcF9uYW1lX2xvd2VyOgogICAgICAgICAgICAgbXNnID0gZiLQn9GB0LXQstC00L7QvdC40LwgJ3thbGlhc19uYW1lfScg0YPQttC1INGB0YPRidC10YHRgtCy0YPQtdGCINC00LvRjyDQv9GA0LjQu9C+0LbQtdC90LjRjyAne2FwcF9uYW1lfScuIgogICAgICAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bV0FSTl0ge21zZ30iKQogICAgICAgICAgICAgcmV0dXJuIEZhbHNlLCBtc2cKICAgICAgICAgZWxzZToKICAgICAgICAgICAgIG1zZyA9IGYi0J/RgdC10LLQtNC+0L3QuNC8ICd7YWxpYXNfbmFtZX0nINGD0LbQtSDQuNGB0L/QvtC70YzQt9GD0LXRgtGB0Y8g0LTQu9GPINC00YDRg9Cz0L7Qs9C+INC/0YDQuNC70L7QttC10L3QuNGPICgne2V4aXN0aW5nX2FwcH0nKSDQuNC70Lgg0Y/QstC70Y/QtdGC0YHRjyDQutCw0L3QvtC90LjRh9C10YHQutC40Lwg0LjQvNC10L3QtdC8LiIKICAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSB7bXNnfSIpCiAgICAgICAgICAgICByZXR1cm4gRmFsc2UsIG1zZwoKICAgICMgQ2hlY2sgaWYgYXBwX25hbWUgaXRzZWxmIGlzIGFuIGFsaWFzIGZvciBzb21ldGhpbmcgZWxzZQogICAgaWYgYXBwX25hbWVfbG93ZXIgaW4gYWxpYXNlc19kaWN0OgogICAgICAgIGNhbm9uaWNhbF9hcHAgPSBhbGlhc2VzX2RpY3RbYXBwX25hbWVfbG93ZXJdCiAgICAgICAgbXNnID0gZiIne2FwcF9uYW1lfScg0YHQsNC80L4g0L/QviDRgdC10LHQtSDRj9Cy0LvRj9C10YLRgdGPINC/0YHQtdCy0LTQvtC90LjQvNC+0Lwg0LTQu9GPICd7Y2Fub25pY2FsX2FwcH0nLiDQn9C+0LbQsNC70YPQudGB0YLQsCwg0LjRgdC/0L7Qu9GM0LfRg9C50YLQtSDQutCw0L3QvtC90LjRh9C10YHQutC+0LUg0LjQvNGPLiIKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0ge21zZ30iKQogICAgICAgIHJldHVybiBGYWxzZSwgbXNnCgoKICAgICMgQWRkIHRoZSBhbGlhcwogICAgYWxpYXNlc19kaWN0W2FsaWFzX25hbWVfbG93ZXJdID0gYXBwX25hbWVfbG93ZXIKICAgIG1zZyA9IGYi0J/RgdC10LLQtNC+0L3QuNC8ICd7YWxpYXNfbmFtZX0nINGD0YHQv9C10YjQvdC+INC00L7QsdCw0LLQu9C10L0g0LTQu9GPINC/0YDQuNC70L7QttC10L3QuNGPICd7YXBwX25hbWV9Jy4iCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtTVUNDRVNTXSB7bXNnfSIpCiAgICAjIE5vdGU6IFNhdmluZyBpcyBub3cgaGFuZGxlZCBzZXBhcmF0ZWx5IGFmdGVyIGNhbGxpbmcgdGhpcyBmdW5jdGlvbgogICAgcmV0dXJuIFRydWUsIG1zZwoKIyAtLS0gT3RoZXIgdXRpbGl0eSBmdW5jdGlvbnMgKGlmIGFueSkgY2FuIGdvIGhlcmUgLS0tCgo",
					"AQAAAAAAAAABAAAAAAAAAAAAAACaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAATxgAAAAAAAAAAAAATxgAAAAAAABPGAAAAAAAAHkVAAAjIEZpbGU6IHV0aWxzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQganNvbgppbXBvcnQgb3MKaW1wb3J0IHNodXRpbCAjIDwtLSBBRERFRDogVG8gY2hlY2sgaWYgY29tbWFuZCBleGlzdHMKCiMgLS0tIENvbmZpZ3VyYXRpb24gLS0tCkNPTkZJR19ESVIgPSBvcy5wYXRoLmpvaW4ob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpLCAnLi4nLCAnY29uZmlnJykKQUxJQVNFU19GSUxFID0gb3MucGF0aC5qb2luKENPTkZJR19ESVIsICdhbGlhc2VzLmpzb24nKQoKIyAtLS0gQWxpYXMgTWFuYWdlbWVudCAtLS0KCmRlZiBsb2FkX2FsaWFzZXMoKToKICAgICIiIkxvYWRzIGFsaWFzZXMgZnJvbSB0aGUgSlNPTiBmaWxlLiIiIgogICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bSU5GT10gQXR0ZW1wdGluZyB0byBsb2FkIGFsaWFzZXMgZnJvbToge0FMSUFTRVNfRklMRX0iKQogICAgb3MubWFrZWRpcnMoQ09ORklHX0RJUiwgZXhpc3Rfb2s9VHJ1ZSkKICAgIHRyeToKICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMoQUxJQVNFU19GSUxFKToKICAgICAgICAgICAgd2l0aCBvcGVuKEFMSUFTRVNfRklMRSwgJ3cnLCBlbmNvZGluZz0ndXRmLTgnKSBhcyBmOgogICAgICAgICAgICAgICAganNvbi5kdW1wKHt9LCBmKQogICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtXQVJOXSBBbGlhcyBmaWxlIG5vdCBmb3VuZC4gQ3JlYXRlZCBlbXB0eSBmaWxlOiB7QUxJQVNFU19GSUxFfSIpCiAgICAgICAgICAgIHJldHVybiB7fQogICAgICAgIHdpdGggb3BlbihBTElBU0VTX0ZJTEUsICdyJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgYWxpYXNlcyA9IGpzb24ubG9hZChmKQogICAgICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShhbGlhc2VzLCBkaWN0KToKICAgICAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSBBbGlhcyBmaWxlIGNvbnRlbnQgaXMgbm90IGEgdmFsaWQgZGljdGlvbmFyeS4gUmV0dXJuaW5nIGVtcHR5LiIpCiAgICAgICAgICAgICAgICByZXR1cm4ge30KICAgICAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bU1VDQ0VTU10gQWxpYXNlcyBsb2FkZWQgKHtsZW4oYWxpYXNlcyl9IGZvdW5kKS4iKQogICAgICAgICAgICByZXR1cm4gYWxpYXNlcwogICAgZXhjZXB0IGpzb24uSlNPTkRlY29kZUVycm9yOgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSBFcnJvciBkZWNvZGluZyBKU09OIGZyb20ge0FMSUFTRVNfRklMRX0uIFJldHVybmluZyBlbXB0eS4iKQogICAgICAgIHJldHVybiB7fQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSBGYWlsZWQgdG8gbG9hZCBhbGlhc2VzOiB7ZX0iKQogICAgICAgIHJldHVybiB7fQoKZGVmIHNhdmVfYWxpYXNlcyhhbGlhc2VzKToKICAgICIiIlNhdmVzIHRoZSBhbGlhc2VzIGRpY3Rpb25hcnkgdG8gdGhlIEpTT04gZmlsZS4iIiIKICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0lORk9dIEF0dGVtcHRpbmcgdG8gc2F2ZSBhbGlhc2VzIHRvOiB7QUxJQVNFU19GSUxFfSIpCiAgICBvcy5tYWtlZGlycyhDT05GSUdfRElSLCBleGlzdF9vaz1UcnVlKQogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihBTElBU0VTX0ZJTEUsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAganNvbi5kdW1wKGFsaWFzZXMsIGYsIGVuc3VyZV9hc2NpaT1GYWxzZSwgaW5kZW50PTQpCiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bU1VDQ0VTU10gQWxpYXNlcyBzYXZlZCBzdWNjZXNzZnVsbHkuIikKICAgICAgICByZXR1cm4gVHJ1ZSwgItCQ0LvQuNCw0YHRiyDRgdC+0YXRgNCw0L3QtdC90YsuIgogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSBGYWlsZWQgdG8gc2F2ZSBhbGlhc2VzOiB7ZX0iKQogICAgICAgIHJldHVybiBGYWxzZSwgZiLQntGI0LjQsdC60LAg0L/RgNC4INGB0L7RhdGA0LDQvdC10L3QuNC4INCw0LvQuNCw0YHQvtCyOiB7ZX0iCgojIC0tLSBNT0RJRklFRCBGVU5DVElPTiAtLS0KZGVmIGFkZF9hbGlhcyhhcHBfbmFtZV9jb21tYW5kLCBhbGlhc19uYW1lLCBhbGlhc2VzX2RpY3QpOgogICAgIiIiCiAgICBBZGRzIGEgbmV3IGFsaWFzIHRvIHRoZSBkaWN0aW9uYXJ5LgogICAgTm9ybWFsaXplcyBuYW1lcy9hbGlhc2VzIHRvIGxvd2VyY2FzZS4KICAgIENoZWNrcyBmb3IgY29uZmxpY3RzIGFuZCBpZiB0aGUgdGFyZ2V0IGNvbW1hbmQgZXhpc3RzLgoKICAgIEFyZ3M6CiAgICAgICAgYXBwX25hbWVfY29tbWFuZCAoc3RyKTogVGhlIGNhbm9uaWNhbCBhcHBsaWNhdGlvbiBjb21tYW5kL2V4ZWN1dGFibGUgbmFtZS4KICAgICAgICBhbGlhc19uYW1lIChzdHIpOiBUaGUgYWxpYXMgdG8gYWRkLgogICAgICAgIGFsaWFzZXNfZGljdCAoZGljdCk6IFRoZSBkaWN0aW9uYXJ5IHRvIGFkZCB0aGUgYWxpYXMgdG8uCgogICAgUmV0dXJuczoKICAgICAgICB0dXBsZTogKGJvb2wsIHN0cikgaW5kaWNhdGluZyBzdWNjZXNzIGFuZCBhIG1lc3NhZ2UuCiAgICAiIiIKICAgICMgVXNlIHRoZSBjb21tYW5kIG5hbWUgZGlyZWN0bHksIGV4cGVjdCBOTFUgdG8gcHJvdmlkZSBpdCBjb3JyZWN0bHkKICAgIGFwcF9uYW1lX2xvd2VyID0gYXBwX25hbWVfY29tbWFuZC5sb3dlcigpCiAgICBhbGlhc19uYW1lX2xvd2VyID0gYWxpYXNfbmFtZS5sb3dlcigpCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtJTkZPXSBBZGRpbmcgYWxpYXMgJ3thbGlhc19uYW1lX2xvd2VyfScgZm9yIGNvbW1hbmQgJ3thcHBfbmFtZV9sb3dlcn0nLiIpCgogICAgIyAtLS0gQURERUQ6IENoZWNrIGlmIHRoZSB0YXJnZXQgY29tbWFuZCBhY3R1YWxseSBleGlzdHMgLS0tCiAgICBpZiBub3Qgc2h1dGlsLndoaWNoKGFwcF9uYW1lX2xvd2VyKToKICAgICAgICBtc2cgPSBmItCd0LUg0YPQtNCw0LvQvtGB0Ywg0L3QsNC50YLQuCDQutC+0LzQsNC90LTRgyDQuNC70Lgg0L/RgNC40LvQvtC20LXQvdC40LUgJ3thcHBfbmFtZV9sb3dlcn0nINCyINCy0LDRiNC10Lkg0YHQuNGB0YLQtdC80LUuINCd0LUg0LzQvtCz0YMg0YHQvtC30LTQsNGC0Ywg0L/RgdC10LLQtNC+0L3QuNC8LiIKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0ge21zZ30iKQogICAgICAgIHJldHVybiBGYWxzZSwgbXNnCiAgICAjIC0tLSBFTkQgQURERUQgQ0hFQ0sgLS0tCgogICAgIyBDaGVjayBpZiBhbGlhcyBpcyBhbHJlYWR5IHRoZSBjYW5vbmljYWwgbmFtZSBvZiBzb21lIGFwcCAob3IgYW5vdGhlciBhbGlhcykKICAgICMgQ29tYmluZSBjaGVja3MgZm9yIGFsaWFzIGNvbmZsaWN0cwogICAgZXhpc3RpbmdfYXBwX2Zvcl9hbGlhcyA9IGFsaWFzZXNfZGljdC5nZXQoYWxpYXNfbmFtZV9sb3dlcikKICAgIGlzX2FsaWFzX2FfY29tbWFuZCA9IHNodXRpbC53aGljaChhbGlhc19uYW1lX2xvd2VyKSBpcyBub3QgTm9uZQogICAgaXNfYWxpYXNfYV9jYW5vbmljYWxfbmFtZSA9IGFsaWFzX25hbWVfbG93ZXIgaW4gYWxpYXNlc19kaWN0LnZhbHVlcygpCgogICAgaWYgZXhpc3RpbmdfYXBwX2Zvcl9hbGlhczogIyBJcyB0aGUgYWxpYXMgYWxyZWFkeSBkZWZpbmVkPwogICAgICAgIGlmIGV4aXN0aW5nX2FwcF9mb3JfYWxpYXMgPT0gYXBwX25hbWVfbG93ZXI6CiAgICAgICAgICAgICBtc2cgPSBmItCf0YHQtdCy0LTQvtC90LjQvCAne2FsaWFzX25hbWV9JyDRg9C20LUg0YHRg9GJ0LXRgdGC0LLRg9C10YIg0LTQu9GPINC60L7QvNCw0L3QtNGLICd7YXBwX25hbWVfbG93ZXJ9Jy4iCiAgICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtXQVJOXSB7bXNnfSIpCiAgICAgICAgICAgICByZXR1cm4gRmFsc2UsIG1zZwogICAgICAgIGVsc2U6CiAgICAgICAgICAgICBtc2cgPSBmItCf0YHQtdCy0LTQvtC90LjQvCAne2FsaWFzX25hbWV9JyDRg9C20LUg0LjRgdC/0L7Qu9GM0LfRg9C10YLRgdGPINC00LvRjyDQtNGA0YPQs9C+0Lkg0LrQvtC80LDQvdC00YsgKCd7ZXhpc3RpbmdfYXBwX2Zvcl9hbGlhc30nKS4iCiAgICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0ge21zZ30iKQogICAgICAgICAgICAgcmV0dXJuIEZhbHNlLCBtc2cKICAgIGVsaWYgaXNfYWxpYXNfYV9jYW5vbmljYWxfbmFtZSBvciBpc19hbGlhc19hX2NvbW1hbmQ6ICMgSXMgdGhlIGFsaWFzIGl0c2VsZiBhIGNvbW1hbmQgb3IgYSB0YXJnZXQgbmFtZT8KICAgICAgICBtc2cgPSBmItCY0LzRjyAne2FsaWFzX25hbWV9JyDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0L/RgdC10LLQtNC+0L3QuNC80L7QvCwg0YLQsNC6INC60LDQuiDQvtC90L4g0YPQttC1INGP0LLQu9GP0LXRgtGB0Y8g0LrQvtC80LDQvdC00L7QuSDQuNC70Lgg0LrQsNC90L7QvdC40YfQtdGB0LrQuNC8INC40LzQtdC90LXQvC4iCiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bRVJST1JdIHttc2d9IikKICAgICAgICByZXR1cm4gRmFsc2UsIG1zZwoKCiAgICAjIENoZWNrIGlmIGFwcF9uYW1lIGl0c2VsZiBpcyBhbiBhbGlhcyBmb3Igc29tZXRoaW5nIGVsc2UKICAgICMgKFRoaXMgY2hlY2sgbWlnaHQgYmUgbGVzcyBjcml0aWNhbCBub3cgdGhhdCB3ZSB2YWxpZGF0ZSBhcHBfbmFtZV9jb21tYW5kIGV4aXN0cywKICAgICMgYnV0IGtlZXAgaXQgZm9yIHJvYnVzdG5lc3MpCiAgICBpZiBhcHBfbmFtZV9sb3dlciBpbiBhbGlhc2VzX2RpY3Q6CiAgICAgICAgY2Fub25pY2FsX2FwcCA9IGFsaWFzZXNfZGljdFthcHBfbmFtZV9sb3dlcl0KICAgICAgICBtc2cgPSBmIid7YXBwX25hbWVfbG93ZXJ9JyDRgdCw0LzQviDQv9C+INGB0LXQsdC1INGP0LLQu9GP0LXRgtGB0Y8g0L/RgdC10LLQtNC+0L3QuNC80L7QvCDQtNC70Y8gJ3tjYW5vbmljYWxfYXBwfScuINCf0L7QttCw0LvRg9C50YHRgtCwLCDQuNGB0L/QvtC70YzQt9GD0LnRgtC1INC60LDQvdC+0L3QuNGH0LXRgdC60L7QtSDQuNC80Y8gJ3tjYW5vbmljYWxfYXBwfScg0LTQu9GPINC00L7QsdCw0LLQu9C10L3QuNGPINC/0YHQtdCy0LTQvtC90LjQvNC+0LIuIgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSB7bXNnfSIpCiAgICAgICAgcmV0dXJuIEZhbHNlLCBtc2cKCgogICAgIyBBZGQgdGhlIGFsaWFzCiAgICBhbGlhc2VzX2RpY3RbYWxpYXNfbmFtZV9sb3dlcl0gPSBhcHBfbmFtZV9sb3dlcgogICAgbXNnID0gZiLQn9GB0LXQstC00L7QvdC40LwgJ3thbGlhc19uYW1lfScg0YPRgdC/0LXRiNC90L4g0LTQvtCx0LDQstC70LXQvSDQtNC70Y8g0LrQvtC80LDQvdC00YsgJ3thcHBfbmFtZV9sb3dlcn0nLiIKICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW1NVQ0NFU1NdIHttc2d9IikKICAgIHJldHVybiBUcnVlLCBtc2cKCiMgLS0tIE90aGVyIHV0aWxpdHkgZnVuY3Rpb25zIChpZiBhbnkpIGNhbiBnbyBoZXJlIC0tLQoK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAD7EwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAD8TAAAAAAAAQRMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPxMAAAAAAAA/EwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAEETAAAAAAAAQhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRMAAAAAAABBEwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFIYAAAAAAAAUxgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhgAAAAAAABSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFMYAAAAAAAAVRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxgAAAAAAABTGAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAFQYAAAAAAAAVRgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBgAAAAAAABUGAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					4,
					"left_delete",
					null,
					"BAAAAD0TAAAAAAAAPRMAAAAAAAABAAAAYDwTAAAAAAAAPBMAAAAAAAABAAAAYDsTAAAAAAAAOxMAAAAAAAABAAAAYDoTAAAAAAAAOhMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAPhMAAAAAAAA+EwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"",
					null,
					"",
					"AQAAAAAAAAABAAAAAAAAAAAAAABSGAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAALwTAAAAAAAAvBMAAAAAAAB3BQAAYGBgCgoqKtCi0LLQvtC4INC00LXQudGB0YLQstC40Y86KioKCjEuICDQl9Cw0LzQtdC90Lgg0LrQvtC0INCyIGB1dGlscy5weWAg0L3QsCDRjdGC0YMg0L3QvtCy0YPRjiDQstC10YDRgdC40Y4gKNGBINC+0YLQu9Cw0LTQvtGH0L3Ri9C8IGBwcmludGApLgoyLiAg0J/QtdGA0LXQt9Cw0L/Rg9GB0YLQuCDRgdC10YDQstC40YE6IGBzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IGZhbWlsaWFyLWJvdC5zZXJ2aWNlYC4KMy4gICoq0J/QvtC/0YDQvtCx0YPQuSDRgdC90L7QstCwKiog0LrQvtC80LDQvdC00YM6IGDQtNC+0LHQsNCy0Ywg0L/RgdC10LLQtNC+0L3QuNC8INCx0YDQsNGD0LfQtdGAINC00LvRjyBnb29nbGUtY2hyb21lYC4KNC4gINCf0L7RgdC80L7RgtGA0Lgg0LvQvtCz0Lgg0YHQtdGA0LLQuNGB0LAgKGBqb3VybmFsY3RsIC11IGZhbWlsaWFyLWJvdC5zZXJ2aWNlIC1mYCkuINCi0Ysg0LTQvtC70LbQvdCwINGD0LLQuNC00LXRgtGMINGB0YLRgNC+0LrRgyBgW1VUSUxTX0FMSUFTRVNdW0RFQlVHXSBDdXJyZW50IGFsaWFzZXNfZGljdCBiZWZvcmUgY2hlY2s6IHsuLi59YCwg0LrQvtGC0L7RgNCw0Y8g0L/QvtC60LDQttC10YIg0YLQtdC60YPRidC10LUg0YHQvtC00LXRgNC20LjQvNC+0LUg0YHQu9C+0LLQsNGA0Y8g0LDQu9C40LDRgdC+0LIuCjUuICAqKtCe0YLQutGA0L7QuSDRhNCw0LnQuyBgY29uZmlnL2FsaWFzZXMuanNvbmAqKiDQsiDRgtC10LrRgdGC0L7QstC+0Lwg0YDQtdC00LDQutGC0L7RgNC1LiDQndCw0LnQtNC4INGB0YLRgNC+0LrRgywg0LPQtNC1INC60LvRjtGHICLQsdGA0LDRg9C30LXRgCIsINC4INC/0L7RgdC80L7RgtGA0LgsINC60LDQutC+0LUg0YLQsNC8INC30L3QsNGH0LXQvdC40LUuINCh0LrQvtGA0LXQtSDQstGB0LXQs9C+LCDRgtCw0Lwg0LHRg9C00LXRgiAiZ29vZ2xlIGNocm9tZSIuICoq0JjRgdC/0YDQsNCy0Ywg0LXQs9C+INC90LAgImdvb2dsZS1jaHJvbWUiKiogKNGBINC00LXRhNC40YHQvtC8KSDQuNC70Lgg0L/RgNC+0YHRgtC+INGD0LTQsNC70Lgg0Y3RgtGDINGB0YLRgNC+0LrRgywg0LXRgdC70Lgg0LDQu9C40LDRgSAi0LHRgNCw0YPQt9C10YAiINGC0LXQsdC1INC/0L7QutCwINC90LUg0L3Rg9C20LXQvS4KNi4gINCh0L7RhdGA0LDQvdC4INC40LfQvNC10L3QtdC90LjRjyDQsiBgYWxpYXNlcy5qc29uYC4KNy4gICoq0J/QvtC/0YDQvtCx0YPQuSDQtNC+0LHQsNCy0LjRgtGMINCw0LvQuNCw0YEg0LXRidGRINGA0LDQtyoqINGH0LXRgNC10Lcg0LHQvtGC0LAuINCi0LXQv9C10YDRjCwg0L/QvtGB0LvQtSDQuNGB0L/RgNCw0LLQu9C10L3QuNGPINGE0LDQudC70LAsINC00L7Qu9C20L3QviDRgdGA0LDQsdC+0YLQsNGC0YwhCgrQlNCw0LLQsNC5INC00L7QsdGM0ZHQvCDRjdGC0Lgg0LDQu9C40LDRgdGLIQ",
					"AQAAAAAAAAABAAAAUBcAAAAAAAC8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAALsTAAAAAAAAuxMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAvBMAAAAAAAC8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAUBcAAAAAAAAAAAAAUBcAAAAAAABQFwAAAAAAAJsUAAAjIEZpbGU6IHV0aWxzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQganNvbgppbXBvcnQgb3MKaW1wb3J0IHNodXRpbCAjIFRvIGNoZWNrIGlmIGFsaWFzIG5hbWUgaXMgYSBjb21tYW5kCgojIC0tLSBDb25maWd1cmF0aW9uIC0tLQpDT05GSUdfRElSID0gb3MucGF0aC5qb2luKG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKSwgJy4uJywgJ2NvbmZpZycpCkFMSUFTRVNfRklMRSA9IG9zLnBhdGguam9pbihDT05GSUdfRElSLCAnYWxpYXNlcy5qc29uJykKCiMgLS0tIEFsaWFzIE1hbmFnZW1lbnQgLS0tCgpkZWYgbG9hZF9hbGlhc2VzKCk6CiAgICAiIiJMb2FkcyBhbGlhc2VzIGZyb20gdGhlIEpTT04gZmlsZS4iIiIKICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0lORk9dIEF0dGVtcHRpbmcgdG8gbG9hZCBhbGlhc2VzIGZyb206IHtBTElBU0VTX0ZJTEV9IikKICAgIG9zLm1ha2VkaXJzKENPTkZJR19ESVIsIGV4aXN0X29rPVRydWUpCiAgICB0cnk6CiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKEFMSUFTRVNfRklMRSk6CiAgICAgICAgICAgIHdpdGggb3BlbihBTElBU0VTX0ZJTEUsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgICAgIGpzb24uZHVtcCh7fSwgZikKICAgICAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bV0FSTl0gQWxpYXMgZmlsZSBub3QgZm91bmQuIENyZWF0ZWQgZW1wdHkgZmlsZToge0FMSUFTRVNfRklMRX0iKQogICAgICAgICAgICByZXR1cm4ge30KICAgICAgICB3aXRoIG9wZW4oQUxJQVNFU19GSUxFLCAncicsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgIGFsaWFzZXMgPSBqc29uLmxvYWQoZikKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UoYWxpYXNlcywgZGljdCk6CiAgICAgICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gQWxpYXMgZmlsZSBjb250ZW50IGlzIG5vdCBhIHZhbGlkIGRpY3Rpb25hcnkuIFJldHVybmluZyBlbXB0eS4iKQogICAgICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW1NVQ0NFU1NdIEFsaWFzZXMgbG9hZGVkICh7bGVuKGFsaWFzZXMpfSBmb3VuZCkuIikKICAgICAgICAgICAgIyBOb3JtYWxpemUga2V5cyBhbmQgdmFsdWVzIHRvIGxvd2VyY2FzZSBvbiBsb2FkIGZvciBjb25zaXN0ZW50IGNoZWNrcwogICAgICAgICAgICByZXR1cm4ge2subG93ZXIoKTogdi5sb3dlcigpIGZvciBrLCB2IGluIGFsaWFzZXMuaXRlbXMoKX0KICAgIGV4Y2VwdCBqc29uLkpTT05EZWNvZGVFcnJvcjoKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gRXJyb3IgZGVjb2RpbmcgSlNPTiBmcm9tIHtBTElBU0VTX0ZJTEV9LiBSZXR1cm5pbmcgZW1wdHkuIikKICAgICAgICByZXR1cm4ge30KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gRmFpbGVkIHRvIGxvYWQgYWxpYXNlczoge2V9IikKICAgICAgICByZXR1cm4ge30KCmRlZiBzYXZlX2FsaWFzZXMoYWxpYXNlcyk6CiAgICAiIiJTYXZlcyB0aGUgYWxpYXNlcyBkaWN0aW9uYXJ5IHRvIHRoZSBKU09OIGZpbGUuIiIiCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtJTkZPXSBBdHRlbXB0aW5nIHRvIHNhdmUgYWxpYXNlcyB0bzoge0FMSUFTRVNfRklMRX0iKQogICAgb3MubWFrZWRpcnMoQ09ORklHX0RJUiwgZXhpc3Rfb2s9VHJ1ZSkKICAgIHRyeToKICAgICAgICB3aXRoIG9wZW4oQUxJQVNFU19GSUxFLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgICMgU2F2ZSB3aXRoIGluZGVudGF0aW9uIGFuZCBlbnN1cmUgbm9uLUFTQ0lJIGNoYXJhY3RlcnMgYXJlIHNhdmVkIGNvcnJlY3RseQogICAgICAgICAgICBqc29uLmR1bXAoYWxpYXNlcywgZiwgZW5zdXJlX2FzY2lpPUZhbHNlLCBpbmRlbnQ9NCwgc29ydF9rZXlzPVRydWUpCiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bU1VDQ0VTU10gQWxpYXNlcyBzYXZlZCBzdWNjZXNzZnVsbHkuIikKICAgICAgICByZXR1cm4gVHJ1ZSwgItCQ0LvQuNCw0YHRiyDRgdC+0YXRgNCw0L3QtdC90YsuIgogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSBGYWlsZWQgdG8gc2F2ZSBhbGlhc2VzOiB7ZX0iKQogICAgICAgIHJldHVybiBGYWxzZSwgZiLQntGI0LjQsdC60LAg0L/RgNC4INGB0L7RhdGA0LDQvdC10L3QuNC4INCw0LvQuNCw0YHQvtCyOiB7ZX0iCgojIC0tLSBSRVZJU0VEIEZVTkNUSU9OIC0tLQpkZWYgYWRkX2FsaWFzKGFwcF9uYW1lX2NvbW1hbmQsIGFsaWFzX25hbWUsIGFsaWFzZXNfZGljdCk6CiAgICAiIiIKICAgIEFkZHMgYSBuZXcgYWxpYXMgdG8gdGhlIGRpY3Rpb25hcnkuCiAgICBOb3JtYWxpemVzIG5hbWVzL2FsaWFzZXMgdG8gbG93ZXJjYXNlLgogICAgQ2hlY2tzIGZvciBjb25mbGljdHM6CiAgICAtIEFsaWFzIGNhbm5vdCBiZSBhbiBleGlzdGluZyBjb21tYW5kICh1bmxlc3MgaXQncyB0aGUgdGFyZ2V0IGNvbW1hbmQgaXRzZWxmKS4KICAgIC0gQWxpYXMgY2Fubm90IGFscmVhZHkgYmUgdXNlZCBmb3IgYSAqZGlmZmVyZW50KiBjb21tYW5kLgogICAgQWxsb3dzIG11bHRpcGxlIGFsaWFzZXMgZm9yIHRoZSBzYW1lIGNvbW1hbmQuCgogICAgQXJnczoKICAgICAgICBhcHBfbmFtZV9jb21tYW5kIChzdHIpOiBUaGUgY2Fub25pY2FsIGFwcGxpY2F0aW9uIGNvbW1hbmQvZXhlY3V0YWJsZSBuYW1lICh2YWxpZGF0ZWQgYnkgaGFuZGxlcikuCiAgICAgICAgYWxpYXNfbmFtZSAoc3RyKTogVGhlIGFsaWFzIHRvIGFkZC4KICAgICAgICBhbGlhc2VzX2RpY3QgKGRpY3QpOiBUaGUgZGljdGlvbmFyeSB0byBhZGQgdGhlIGFsaWFzIHRvICh3aWxsIGJlIG1vZGlmaWVkKS4KCiAgICBSZXR1cm5zOgogICAgICAgIHR1cGxlOiAoYm9vbCwgc3RyKSBpbmRpY2F0aW5nIHN1Y2Nlc3MgYW5kIGEgbWVzc2FnZS4KICAgICIiIgogICAgIyBIYW5kbGVyIHNob3VsZCBoYXZlIGFscmVhZHkgdmFsaWRhdGVkIGFwcF9uYW1lX2NvbW1hbmQgZXhpc3RzCiAgICBhcHBfbmFtZV9sb3dlciA9IGFwcF9uYW1lX2NvbW1hbmQubG93ZXIoKQogICAgYWxpYXNfbmFtZV9sb3dlciA9IGFsaWFzX25hbWUubG93ZXIoKQogICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bSU5GT10gQXR0ZW1wdGluZyB0byBhZGQgYWxpYXMgJ3thbGlhc19uYW1lX2xvd2VyfScgZm9yIGNvbW1hbmQgJ3thcHBfbmFtZV9sb3dlcn0nLiIpCgogICAgIyAtLS0gREVCVUc6IFByaW50IHRoZSBjdXJyZW50IGFsaWFzZXMgZGljdGlvbmFyeSAtLS0KICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0RFQlVHXSBDdXJyZW50IGFsaWFzZXNfZGljdCBiZWZvcmUgY2hlY2s6IHthbGlhc2VzX2RpY3R9IikKICAgICMgLS0tIEVORCBERUJVRyAtLS0KCiAgICAjIDEuIENoZWNrIGlmIHRoZSBhbGlhcyBuYW1lIGl0c2VsZiBpcyBhbiBleGlzdGluZyBjb21tYW5kCiAgICBpc19hbGlhc19hX2NvbW1hbmQgPSBzaHV0aWwud2hpY2goYWxpYXNfbmFtZV9sb3dlcikgaXMgbm90IE5vbmUKICAgIGlmIGlzX2FsaWFzX2FfY29tbWFuZCBhbmQgYWxpYXNfbmFtZV9sb3dlciAhPSBhcHBfbmFtZV9sb3dlcjoKICAgICAgICBtc2cgPSBmItCY0LzRjyAne2FsaWFzX25hbWV9JyDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0L/RgdC10LLQtNC+0L3QuNC80L7QvCwg0YLQsNC6INC60LDQuiDRjdGC0L4g0YHRg9GJ0LXRgdGC0LLRg9GO0YnQsNGPINC60L7QvNCw0L3QtNCwINCyINGB0LjRgdGC0LXQvNC1LiIKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0ge21zZ30iKQogICAgICAgIHJldHVybiBGYWxzZSwgbXNnCgogICAgIyAyLiBDaGVjayBpZiB0aGUgYWxpYXMgaXMgYWxyZWFkeSBkZWZpbmVkIGluIHRoZSBkaWN0aW9uYXJ5CiAgICBleGlzdGluZ190YXJnZXQgPSBhbGlhc2VzX2RpY3QuZ2V0KGFsaWFzX25hbWVfbG93ZXIpCiAgICBpZiBleGlzdGluZ190YXJnZXQ6CiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bREVCVUddIEZvdW5kIGV4aXN0aW5nIGFsaWFzICd7YWxpYXNfbmFtZV9sb3dlcn0nIHBvaW50aW5nIHRvICd7ZXhpc3RpbmdfdGFyZ2V0fScuIENvbXBhcmluZyB3aXRoICd7YXBwX25hbWVfbG93ZXJ9Jy4iKSAjIE1vcmUgZGVidWcgaW5mbwogICAgICAgIGlmIGV4aXN0aW5nX3RhcmdldCA9PSBhcHBfbmFtZV9sb3dlcjoKICAgICAgICAgICAgIyBBbGlhcyBhbHJlYWR5IGV4aXN0cyBmb3IgdGhpcyBleGFjdCBjb21tYW5kLiBObyBuZWVkIHRvIGFkZCwgYnV0IG5vdCBhbiBlcnJvci4KICAgICAgICAgICAgbXNnID0gZiLQn9GB0LXQstC00L7QvdC40LwgJ3thbGlhc19uYW1lfScg0YPQttC1INGB0YPRidC10YHRgtCy0YPQtdGCINC00LvRjyDQutC+0LzQsNC90LTRiyAne2FwcF9uYW1lX2xvd2VyfScuINCd0LjRh9C10LPQviDQvdC1INC40LfQvNC10L3QtdC90L4uIgogICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtXQVJOXSB7bXNnfSIpCiAgICAgICAgICAgIHJldHVybiBUcnVlLCBtc2cKICAgICAgICBlbHNlOgogICAgICAgICAgICAjIEFsaWFzIGV4aXN0cyBidXQgcG9pbnRzIHRvIGEgRElGRkVSRU5UIGNvbW1hbmQuIFRoaXMgaXMgYSBjb25mbGljdC4KICAgICAgICAgICAgbXNnID0gZiLQn9GB0LXQstC00L7QvdC40LwgJ3thbGlhc19uYW1lfScg0YPQttC1INC40YHQv9C+0LvRjNC30YPQtdGC0YHRjyDQtNC70Y8g0LTRgNGD0LPQvtC5INC60L7QvNCw0L3QtNGLICgne2V4aXN0aW5nX3RhcmdldH0nKS4iCiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSB7bXNnfSIpCiAgICAgICAgICAgIHJldHVybiBGYWxzZSwgbXNnCgogICAgIyAzLiBJZiBubyBjb25mbGljdHMsIGFkZCB0aGUgYWxpYXMKICAgIGFsaWFzZXNfZGljdFthbGlhc19uYW1lX2xvd2VyXSA9IGFwcF9uYW1lX2xvd2VyCiAgICBtc2cgPSBmItCf0YHQtdCy0LTQvtC90LjQvCAne2FsaWFzX25hbWV9JyDRg9GB0L/QtdGI0L3QviDQtNC+0LHQsNCy0LvQtdC9INC00LvRjyDQutC+0LzQsNC90LTRiyAne2FwcF9uYW1lX2xvd2VyfScuIgogICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bU1VDQ0VTU10ge21zZ30iKQogICAgcmV0dXJuIFRydWUsIG1zZwoKIyAtLS0gT3RoZXIgdXRpbGl0eSBmdW5jdGlvbnMgKGlmIGFueSkgY2FuIGdvIGhlcmUgLS0t",
					"AQAAAAAAAAABAAAAAAAAAAAAAAC7EwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAALwTAAAAAAAAvBMAAAAAAAB3BQAAYGBgCgoqKtCi0LLQvtC4INC00LXQudGB0YLQstC40Y86KioKCjEuICDQl9Cw0LzQtdC90Lgg0LrQvtC0INCyIGB1dGlscy5weWAg0L3QsCDRjdGC0YMg0L3QvtCy0YPRjiDQstC10YDRgdC40Y4gKNGBINC+0YLQu9Cw0LTQvtGH0L3Ri9C8IGBwcmludGApLgoyLiAg0J/QtdGA0LXQt9Cw0L/Rg9GB0YLQuCDRgdC10YDQstC40YE6IGBzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IGZhbWlsaWFyLWJvdC5zZXJ2aWNlYC4KMy4gICoq0J/QvtC/0YDQvtCx0YPQuSDRgdC90L7QstCwKiog0LrQvtC80LDQvdC00YM6IGDQtNC+0LHQsNCy0Ywg0L/RgdC10LLQtNC+0L3QuNC8INCx0YDQsNGD0LfQtdGAINC00LvRjyBnb29nbGUtY2hyb21lYC4KNC4gINCf0L7RgdC80L7RgtGA0Lgg0LvQvtCz0Lgg0YHQtdGA0LLQuNGB0LAgKGBqb3VybmFsY3RsIC11IGZhbWlsaWFyLWJvdC5zZXJ2aWNlIC1mYCkuINCi0Ysg0LTQvtC70LbQvdCwINGD0LLQuNC00LXRgtGMINGB0YLRgNC+0LrRgyBgW1VUSUxTX0FMSUFTRVNdW0RFQlVHXSBDdXJyZW50IGFsaWFzZXNfZGljdCBiZWZvcmUgY2hlY2s6IHsuLi59YCwg0LrQvtGC0L7RgNCw0Y8g0L/QvtC60LDQttC10YIg0YLQtdC60YPRidC10LUg0YHQvtC00LXRgNC20LjQvNC+0LUg0YHQu9C+0LLQsNGA0Y8g0LDQu9C40LDRgdC+0LIuCjUuICAqKtCe0YLQutGA0L7QuSDRhNCw0LnQuyBgY29uZmlnL2FsaWFzZXMuanNvbmAqKiDQsiDRgtC10LrRgdGC0L7QstC+0Lwg0YDQtdC00LDQutGC0L7RgNC1LiDQndCw0LnQtNC4INGB0YLRgNC+0LrRgywg0LPQtNC1INC60LvRjtGHICLQsdGA0LDRg9C30LXRgCIsINC4INC/0L7RgdC80L7RgtGA0LgsINC60LDQutC+0LUg0YLQsNC8INC30L3QsNGH0LXQvdC40LUuINCh0LrQvtGA0LXQtSDQstGB0LXQs9C+LCDRgtCw0Lwg0LHRg9C00LXRgiAiZ29vZ2xlIGNocm9tZSIuICoq0JjRgdC/0YDQsNCy0Ywg0LXQs9C+INC90LAgImdvb2dsZS1jaHJvbWUiKiogKNGBINC00LXRhNC40YHQvtC8KSDQuNC70Lgg0L/RgNC+0YHRgtC+INGD0LTQsNC70Lgg0Y3RgtGDINGB0YLRgNC+0LrRgywg0LXRgdC70Lgg0LDQu9C40LDRgSAi0LHRgNCw0YPQt9C10YAiINGC0LXQsdC1INC/0L7QutCwINC90LUg0L3Rg9C20LXQvS4KNi4gINCh0L7RhdGA0LDQvdC4INC40LfQvNC10L3QtdC90LjRjyDQsiBgYWxpYXNlcy5qc29uYC4KNy4gICoq0J/QvtC/0YDQvtCx0YPQuSDQtNC+0LHQsNCy0LjRgtGMINCw0LvQuNCw0YEg0LXRidGRINGA0LDQtyoqINGH0LXRgNC10Lcg0LHQvtGC0LAuINCi0LXQv9C10YDRjCwg0L/QvtGB0LvQtSDQuNGB0L/RgNCw0LLQu9C10L3QuNGPINGE0LDQudC70LAsINC00L7Qu9C20L3QviDRgdGA0LDQsdC+0YLQsNGC0YwhCgrQlNCw0LLQsNC5INC00L7QsdGM0ZHQvCDRjdGC0Lgg0LDQu9C40LDRgdGLIQ",
					"AQAAAAAAAAABAAAAUBcAAAAAAAC8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAuxcAAAAAAAAAAAAAuxcAAAAAAAC7FwAAAAAAAJwUAAAjIEZpbGU6IHV0aWxzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQganNvbgppbXBvcnQgb3MKaW1wb3J0IHNodXRpbCAjIFRvIGNoZWNrIGlmIGFsaWFzIG5hbWUgaXMgYSBjb21tYW5kCgojIC0tLSBDb25maWd1cmF0aW9uIC0tLQpDT05GSUdfRElSID0gb3MucGF0aC5qb2luKG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKSwgJy4uJywgJ2NvbmZpZycpCkFMSUFTRVNfRklMRSA9IG9zLnBhdGguam9pbihDT05GSUdfRElSLCAnYWxpYXNlcy5qc29uJykKCiMgLS0tIEFsaWFzIE1hbmFnZW1lbnQgLS0tCgpkZWYgbG9hZF9hbGlhc2VzKCk6CiAgICAiIiJMb2FkcyBhbGlhc2VzIGZyb20gdGhlIEpTT04gZmlsZS4iIiIKICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0lORk9dIEF0dGVtcHRpbmcgdG8gbG9hZCBhbGlhc2VzIGZyb206IHtBTElBU0VTX0ZJTEV9IikKICAgIG9zLm1ha2VkaXJzKENPTkZJR19ESVIsIGV4aXN0X29rPVRydWUpCiAgICB0cnk6CiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKEFMSUFTRVNfRklMRSk6CiAgICAgICAgICAgIHdpdGggb3BlbihBTElBU0VTX0ZJTEUsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgICAgIGpzb24uZHVtcCh7fSwgZikKICAgICAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bV0FSTl0gQWxpYXMgZmlsZSBub3QgZm91bmQuIENyZWF0ZWQgZW1wdHkgZmlsZToge0FMSUFTRVNfRklMRX0iKQogICAgICAgICAgICByZXR1cm4ge30KICAgICAgICB3aXRoIG9wZW4oQUxJQVNFU19GSUxFLCAncicsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgIGFsaWFzZXMgPSBqc29uLmxvYWQoZikKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UoYWxpYXNlcywgZGljdCk6CiAgICAgICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gQWxpYXMgZmlsZSBjb250ZW50IGlzIG5vdCBhIHZhbGlkIGRpY3Rpb25hcnkuIFJldHVybmluZyBlbXB0eS4iKQogICAgICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW1NVQ0NFU1NdIEFsaWFzZXMgbG9hZGVkICh7bGVuKGFsaWFzZXMpfSBmb3VuZCkuIikKICAgICAgICAgICAgIyBOb3JtYWxpemUga2V5cyBhbmQgdmFsdWVzIHRvIGxvd2VyY2FzZSBvbiBsb2FkIGZvciBjb25zaXN0ZW50IGNoZWNrcwogICAgICAgICAgICByZXR1cm4ge2subG93ZXIoKTogdi5sb3dlcigpIGZvciBrLCB2IGluIGFsaWFzZXMuaXRlbXMoKX0KICAgIGV4Y2VwdCBqc29uLkpTT05EZWNvZGVFcnJvcjoKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gRXJyb3IgZGVjb2RpbmcgSlNPTiBmcm9tIHtBTElBU0VTX0ZJTEV9LiBSZXR1cm5pbmcgZW1wdHkuIikKICAgICAgICByZXR1cm4ge30KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gRmFpbGVkIHRvIGxvYWQgYWxpYXNlczoge2V9IikKICAgICAgICByZXR1cm4ge30KCmRlZiBzYXZlX2FsaWFzZXMoYWxpYXNlcyk6CiAgICAiIiJTYXZlcyB0aGUgYWxpYXNlcyBkaWN0aW9uYXJ5IHRvIHRoZSBKU09OIGZpbGUuIiIiCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtJTkZPXSBBdHRlbXB0aW5nIHRvIHNhdmUgYWxpYXNlcyB0bzoge0FMSUFTRVNfRklMRX0iKQogICAgb3MubWFrZWRpcnMoQ09ORklHX0RJUiwgZXhpc3Rfb2s9VHJ1ZSkKICAgIHRyeToKICAgICAgICB3aXRoIG9wZW4oQUxJQVNFU19GSUxFLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgICMgU2F2ZSB3aXRoIGluZGVudGF0aW9uIGFuZCBlbnN1cmUgbm9uLUFTQ0lJIGNoYXJhY3RlcnMgYXJlIHNhdmVkIGNvcnJlY3RseQogICAgICAgICAgICBqc29uLmR1bXAoYWxpYXNlcywgZiwgZW5zdXJlX2FzY2lpPUZhbHNlLCBpbmRlbnQ9NCwgc29ydF9rZXlzPVRydWUpCiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bU1VDQ0VTU10gQWxpYXNlcyBzYXZlZCBzdWNjZXNzZnVsbHkuIikKICAgICAgICByZXR1cm4gVHJ1ZSwgItCQ0LvQuNCw0YHRiyDRgdC+0YXRgNCw0L3QtdC90YsuIgogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSBGYWlsZWQgdG8gc2F2ZSBhbGlhc2VzOiB7ZX0iKQogICAgICAgIHJldHVybiBGYWxzZSwgZiLQntGI0LjQsdC60LAg0L/RgNC4INGB0L7RhdGA0LDQvdC10L3QuNC4INCw0LvQuNCw0YHQvtCyOiB7ZX0iCgojIC0tLSBSRVZJU0VEIEZVTkNUSU9OIC0tLQpkZWYgYWRkX2FsaWFzKGFwcF9uYW1lX2NvbW1hbmQsIGFsaWFzX25hbWUsIGFsaWFzZXNfZGljdCk6CiAgICAiIiIKICAgIEFkZHMgYSBuZXcgYWxpYXMgdG8gdGhlIGRpY3Rpb25hcnkuCiAgICBOb3JtYWxpemVzIG5hbWVzL2FsaWFzZXMgdG8gbG93ZXJjYXNlLgogICAgQ2hlY2tzIGZvciBjb25mbGljdHM6CiAgICAtIEFsaWFzIGNhbm5vdCBiZSBhbiBleGlzdGluZyBjb21tYW5kICh1bmxlc3MgaXQncyB0aGUgdGFyZ2V0IGNvbW1hbmQgaXRzZWxmKS4KICAgIC0gQWxpYXMgY2Fubm90IGFscmVhZHkgYmUgdXNlZCBmb3IgYSAqZGlmZmVyZW50KiBjb21tYW5kLgogICAgQWxsb3dzIG11bHRpcGxlIGFsaWFzZXMgZm9yIHRoZSBzYW1lIGNvbW1hbmQuCgogICAgQXJnczoKICAgICAgICBhcHBfbmFtZV9jb21tYW5kIChzdHIpOiBUaGUgY2Fub25pY2FsIGFwcGxpY2F0aW9uIGNvbW1hbmQvZXhlY3V0YWJsZSBuYW1lICh2YWxpZGF0ZWQgYnkgaGFuZGxlcikuCiAgICAgICAgYWxpYXNfbmFtZSAoc3RyKTogVGhlIGFsaWFzIHRvIGFkZC4KICAgICAgICBhbGlhc2VzX2RpY3QgKGRpY3QpOiBUaGUgZGljdGlvbmFyeSB0byBhZGQgdGhlIGFsaWFzIHRvICh3aWxsIGJlIG1vZGlmaWVkKS4KCiAgICBSZXR1cm5zOgogICAgICAgIHR1cGxlOiAoYm9vbCwgc3RyKSBpbmRpY2F0aW5nIHN1Y2Nlc3MgYW5kIGEgbWVzc2FnZS4KICAgICIiIgogICAgIyBIYW5kbGVyIHNob3VsZCBoYXZlIGFscmVhZHkgdmFsaWRhdGVkIGFwcF9uYW1lX2NvbW1hbmQgZXhpc3RzCiAgICBhcHBfbmFtZV9sb3dlciA9IGFwcF9uYW1lX2NvbW1hbmQubG93ZXIoKQogICAgYWxpYXNfbmFtZV9sb3dlciA9IGFsaWFzX25hbWUubG93ZXIoKQogICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bSU5GT10gQXR0ZW1wdGluZyB0byBhZGQgYWxpYXMgJ3thbGlhc19uYW1lX2xvd2VyfScgZm9yIGNvbW1hbmQgJ3thcHBfbmFtZV9sb3dlcn0nLiIpCgogICAgIyAtLS0gREVCVUc6IFByaW50IHRoZSBjdXJyZW50IGFsaWFzZXMgZGljdGlvbmFyeSAtLS0KICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0RFQlVHXSBDdXJyZW50IGFsaWFzZXNfZGljdCBiZWZvcmUgY2hlY2s6IHthbGlhc2VzX2RpY3R9IikKICAgICMgLS0tIEVORCBERUJVRyAtLS0KCiAgICAjIDEuIENoZWNrIGlmIHRoZSBhbGlhcyBuYW1lIGl0c2VsZiBpcyBhbiBleGlzdGluZyBjb21tYW5kCiAgICBpc19hbGlhc19hX2NvbW1hbmQgPSBzaHV0aWwud2hpY2goYWxpYXNfbmFtZV9sb3dlcikgaXMgbm90IE5vbmUKICAgIGlmIGlzX2FsaWFzX2FfY29tbWFuZCBhbmQgYWxpYXNfbmFtZV9sb3dlciAhPSBhcHBfbmFtZV9sb3dlcjoKICAgICAgICBtc2cgPSBmItCY0LzRjyAne2FsaWFzX25hbWV9JyDQvdC1INC80L7QttC10YIg0LHRi9GC0Ywg0L/RgdC10LLQtNC+0L3QuNC80L7QvCwg0YLQsNC6INC60LDQuiDRjdGC0L4g0YHRg9GJ0LXRgdGC0LLRg9GO0YnQsNGPINC60L7QvNCw0L3QtNCwINCyINGB0LjRgdGC0LXQvNC1LiIKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0ge21zZ30iKQogICAgICAgIHJldHVybiBGYWxzZSwgbXNnCgogICAgIyAyLiBDaGVjayBpZiB0aGUgYWxpYXMgaXMgYWxyZWFkeSBkZWZpbmVkIGluIHRoZSBkaWN0aW9uYXJ5CiAgICBleGlzdGluZ190YXJnZXQgPSBhbGlhc2VzX2RpY3QuZ2V0KGFsaWFzX25hbWVfbG93ZXIpCiAgICBpZiBleGlzdGluZ190YXJnZXQ6CiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bREVCVUddIEZvdW5kIGV4aXN0aW5nIGFsaWFzICd7YWxpYXNfbmFtZV9sb3dlcn0nIHBvaW50aW5nIHRvICd7ZXhpc3RpbmdfdGFyZ2V0fScuIENvbXBhcmluZyB3aXRoICd7YXBwX25hbWVfbG93ZXJ9Jy4iKSAjIE1vcmUgZGVidWcgaW5mbwogICAgICAgIGlmIGV4aXN0aW5nX3RhcmdldCA9PSBhcHBfbmFtZV9sb3dlcjoKICAgICAgICAgICAgIyBBbGlhcyBhbHJlYWR5IGV4aXN0cyBmb3IgdGhpcyBleGFjdCBjb21tYW5kLiBObyBuZWVkIHRvIGFkZCwgYnV0IG5vdCBhbiBlcnJvci4KICAgICAgICAgICAgbXNnID0gZiLQn9GB0LXQstC00L7QvdC40LwgJ3thbGlhc19uYW1lfScg0YPQttC1INGB0YPRidC10YHRgtCy0YPQtdGCINC00LvRjyDQutC+0LzQsNC90LTRiyAne2FwcF9uYW1lX2xvd2VyfScuINCd0LjRh9C10LPQviDQvdC1INC40LfQvNC10L3QtdC90L4uIgogICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtXQVJOXSB7bXNnfSIpCiAgICAgICAgICAgIHJldHVybiBUcnVlLCBtc2cKICAgICAgICBlbHNlOgogICAgICAgICAgICAjIEFsaWFzIGV4aXN0cyBidXQgcG9pbnRzIHRvIGEgRElGRkVSRU5UIGNvbW1hbmQuIFRoaXMgaXMgYSBjb25mbGljdC4KICAgICAgICAgICAgbXNnID0gZiLQn9GB0LXQstC00L7QvdC40LwgJ3thbGlhc19uYW1lfScg0YPQttC1INC40YHQv9C+0LvRjNC30YPQtdGC0YHRjyDQtNC70Y8g0LTRgNGD0LPQvtC5INC60L7QvNCw0L3QtNGLICgne2V4aXN0aW5nX3RhcmdldH0nKS4iCiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSB7bXNnfSIpCiAgICAgICAgICAgIHJldHVybiBGYWxzZSwgbXNnCgogICAgIyAzLiBJZiBubyBjb25mbGljdHMsIGFkZCB0aGUgYWxpYXMKICAgIGFsaWFzZXNfZGljdFthbGlhc19uYW1lX2xvd2VyXSA9IGFwcF9uYW1lX2xvd2VyCiAgICBtc2cgPSBmItCf0YHQtdCy0LTQvtC90LjQvCAne2FsaWFzX25hbWV9JyDRg9GB0L/QtdGI0L3QviDQtNC+0LHQsNCy0LvQtdC9INC00LvRjyDQutC+0LzQsNC90LTRiyAne2FwcF9uYW1lX2xvd2VyfScuIgogICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bU1VDQ0VTU10ge21zZ30iKQogICAgcmV0dXJuIFRydWUsIG1zZwoKIyAtLS0gT3RoZXIgdXRpbGl0eSBmdW5jdGlvbnMgKGlmIGFueSkgY2FuIGdvIGhlcmUgLS0tCg",
					"AQAAAAAAAAABAAAAAAAAAAAAAAC8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					6,
					"left_delete",
					null,
					"BgAAAO4UAAAAAAAA7hQAAAAAAAAsBAAACioq0KfRgtC+INC40LfQvNC10L3QuNC70L7RgdGMOioqCgoqINCSINC60L7QvdGB0YLQsNC90YLQtSBgQUxJQVNFU19GSUxFYCDRgtC10L/QtdGA0Ywg0L/RgNCw0LLQuNC70YzQvdC+0LUg0LjQvNGPINGE0LDQudC70LA6IGBhcHBfYWxpYXNlcy5qc29uYC4KKiDQpNGD0L3QutGG0LjQuCBgbG9hZF9hbGlhc2VzYCDQuCBgc2F2ZV9hbGlhc2VzYCDRgtC10L/QtdGA0Ywg0YLQvtC20LUg0YDQsNCx0L7RgtCw0Y7RgiDRgSBgYXBwX2FsaWFzZXMuanNvbmAuCgoqKtCi0LLQvtC4INC00LXQudGB0YLQstC40Y86KioKCjEuICDQl9Cw0LzQtdC90Lgg0LrQvtC0INCyIGB1dGlscy5weWAg0L3QsCDRjdGC0YMgKirRhNC40L3QsNC70YzQvdGD0Y4qKiAo0Y8g0L7Rh9C10L3RjCDQvdCw0LTQtdGO0YHRjCEpINCy0LXRgNGB0LjRji4KMi4gINCf0LXRgNC10LfQsNC/0YPRgdGC0Lgg0YHQtdGA0LLQuNGBOiBgc3VkbyBzeXN0ZW1jdGwgcmVzdGFydCBmYW1pbGlhci1ib3Quc2VydmljZWAuCjMuICAqKtCf0YDQvtGC0LXRgdGC0LjRgNGD0Lkg0YHQvdC+0LLQsCEqKgogICAgKiBg0LTQvtCx0LDQstGMINC/0YHQtdCy0LTQvtC90LjQvCDQsdGA0LDRg9C30LXRgCDQtNC70Y8gZ29vZ2xlLWNocm9tZWAKICAgICog0J/RgNC+0LLQtdGA0Ywg0YTQsNC50LsgYGNvbmZpZy9hcHBfYWxpYXNlcy5qc29uYCDigJMg0LDQu9C40LDRgSDQtNC+0LvQttC10L0g0L/QvtGP0LLQuNGC0YzRgdGPIQogICAgKiBg0L7RgtC60YDQvtC5INCx0YDQsNGD0LfQtdGAYCAo0JTQvtC70LbQtdC9INC+0YLQutGA0YvRgtGM0YHRjyBDaHJvbWUpLgogICAgKiBg0LTQvtCx0LDQstGMINC/0YHQtdCy0LTQvtC90LjQvCDRhdGA0L7QvCDQtNC70Y8gZ29vZ2xlLWNocm9tZWAgKNCU0L7Qu9C20L3QviDQtNC+0LHQsNCy0LjRgtGM0YHRjykuCiAgICAqIGDQt9Cw0LrRgNC+0Lkg0YXRgNC+0LxgICjQlNC+0LvQttC10L0g0LfQsNC60YDRi9GC0YzRgdGPIENocm9tZSkuCgrQktC+0YIg0YLQtdC/0LXRgNGMINGC0L7Rh9C90L4g0LTQvtC70LbQvdC+INCy0YHRkSDQt9Cw0YDQsNCx0L7RgtCw0YLRjCDQutCw0Log0YfQsNGB0Ysh7RQAAAAAAADtFAAAAAAAAAEAAAAK7BQAAAAAAADsFAAAAAAAAAEAAABg6xQAAAAAAADrFAAAAAAAAAEAAABg6hQAAAAAAADqFAAAAAAAAAEAAABg6RQAAAAAAADpFAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAuxcAAAAAAADuFAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAgxgAAAAAAAAAAAAAgxgAAAAAAACDGAAAAAAAAMkVAAAjIEZpbGU6IHV0aWxzLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQganNvbgppbXBvcnQgb3MKaW1wb3J0IHNodXRpbCAjIFRvIGNoZWNrIGlmIGFsaWFzIG5hbWUgaXMgYSBjb21tYW5kCgojIC0tLSBDb25maWd1cmF0aW9uIC0tLQpDT05GSUdfRElSID0gb3MucGF0aC5qb2luKG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKSwgJy4uJywgJ2NvbmZpZycpCiMgLS0tIENPUlJFQ1RFRCBGSUxFTkFNRSAtLS0KQUxJQVNFU19GSUxFID0gb3MucGF0aC5qb2luKENPTkZJR19ESVIsICdhcHBfYWxpYXNlcy5qc29uJykgIyBVc2UgdGhlIGNvcnJlY3QgZmlsZW5hbWUKIyAtLS0gRU5EIENPUlJFQ1RJT04gLS0tCgojIC0tLSBBbGlhcyBNYW5hZ2VtZW50IC0tLQoKZGVmIGxvYWRfYWxpYXNlcygpOgogICAgIiIiTG9hZHMgYWxpYXNlcyBmcm9tIHRoZSBKU09OIGZpbGUuIiIiCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtJTkZPXSBBdHRlbXB0aW5nIHRvIGxvYWQgYWxpYXNlcyBmcm9tOiB7QUxJQVNFU19GSUxFfSIpICMgTm93IHVzZXMgY29ycmVjdCBwYXRoCiAgICBvcy5tYWtlZGlycyhDT05GSUdfRElSLCBleGlzdF9vaz1UcnVlKQogICAgdHJ5OgogICAgICAgICMgVXNlIHRoZSBjb3JyZWN0IGZpbGVuYW1lIGhlcmUgdG9vCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKEFMSUFTRVNfRklMRSk6CiAgICAgICAgICAgICMgQ3JlYXRlIHRoZSBjb3JyZWN0IGZpbGUgaWYgaXQgZG9lc24ndCBleGlzdAogICAgICAgICAgICB3aXRoIG9wZW4oQUxJQVNFU19GSUxFLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgICAgICBqc29uLmR1bXAoe30sIGYpCiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW1dBUk5dIEFsaWFzIGZpbGUgbm90IGZvdW5kLiBDcmVhdGVkIGVtcHR5IGZpbGU6IHtBTElBU0VTX0ZJTEV9IikKICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgIyBMb2FkIHRoZSBjb3JyZWN0IGZpbGUKICAgICAgICB3aXRoIG9wZW4oQUxJQVNFU19GSUxFLCAncicsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAgICAgIGFsaWFzZXMgPSBqc29uLmxvYWQoZikKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UoYWxpYXNlcywgZGljdCk6CiAgICAgICAgICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gQWxpYXMgZmlsZSBjb250ZW50IGlzIG5vdCBhIHZhbGlkIGRpY3Rpb25hcnkuIFJldHVybmluZyBlbXB0eS4iKQogICAgICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW1NVQ0NFU1NdIEFsaWFzZXMgbG9hZGVkICh7bGVuKGFsaWFzZXMpfSBmb3VuZCkuIikKICAgICAgICAgICAgIyBOb3JtYWxpemUga2V5cyBhbmQgdmFsdWVzIHRvIGxvd2VyY2FzZSBvbiBsb2FkIGZvciBjb25zaXN0ZW50IGNoZWNrcwogICAgICAgICAgICByZXR1cm4ge2subG93ZXIoKTogdi5sb3dlcigpIGZvciBrLCB2IGluIGFsaWFzZXMuaXRlbXMoKX0KICAgIGV4Y2VwdCBqc29uLkpTT05EZWNvZGVFcnJvcjoKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gRXJyb3IgZGVjb2RpbmcgSlNPTiBmcm9tIHtBTElBU0VTX0ZJTEV9LiBSZXR1cm5pbmcgZW1wdHkuIikKICAgICAgICByZXR1cm4ge30KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtFUlJPUl0gRmFpbGVkIHRvIGxvYWQgYWxpYXNlczoge2V9IikKICAgICAgICByZXR1cm4ge30KCmRlZiBzYXZlX2FsaWFzZXMoYWxpYXNlcyk6CiAgICAiIiJTYXZlcyB0aGUgYWxpYXNlcyBkaWN0aW9uYXJ5IHRvIHRoZSBKU09OIGZpbGUuIiIiCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtJTkZPXSBBdHRlbXB0aW5nIHRvIHNhdmUgYWxpYXNlcyB0bzoge0FMSUFTRVNfRklMRX0iKSAjIE5vdyB1c2VzIGNvcnJlY3QgcGF0aAogICAgb3MubWFrZWRpcnMoQ09ORklHX0RJUiwgZXhpc3Rfb2s9VHJ1ZSkKICAgIHRyeToKICAgICAgICAjIFNhdmUgdG8gdGhlIGNvcnJlY3QgZmlsZQogICAgICAgIHdpdGggb3BlbihBTElBU0VTX0ZJTEUsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgIyBTYXZlIHdpdGggaW5kZW50YXRpb24gYW5kIGVuc3VyZSBub24tQVNDSUkgY2hhcmFjdGVycyBhcmUgc2F2ZWQgY29ycmVjdGx5CiAgICAgICAgICAgIGpzb24uZHVtcChhbGlhc2VzLCBmLCBlbnN1cmVfYXNjaWk9RmFsc2UsIGluZGVudD00LCBzb3J0X2tleXM9VHJ1ZSkKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtTVUNDRVNTXSBBbGlhc2VzIHNhdmVkIHN1Y2Nlc3NmdWxseS4iKQogICAgICAgIHJldHVybiBUcnVlLCAi0JDQu9C40LDRgdGLINGB0L7RhdGA0LDQvdC10L3Riy4iCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bRVJST1JdIEZhaWxlZCB0byBzYXZlIGFsaWFzZXM6IHtlfSIpCiAgICAgICAgcmV0dXJuIEZhbHNlLCBmItCe0YjQuNCx0LrQsCDQv9GA0Lgg0YHQvtGF0YDQsNC90LXQvdC40Lgg0LDQu9C40LDRgdC+0LI6IHtlfSIKCiMgLS0tIFJFVklTRUQgRlVOQ1RJT04gLS0tCmRlZiBhZGRfYWxpYXMoYXBwX25hbWVfY29tbWFuZCwgYWxpYXNfbmFtZSwgYWxpYXNlc19kaWN0KToKICAgICIiIgogICAgQWRkcyBhIG5ldyBhbGlhcyB0byB0aGUgZGljdGlvbmFyeS4KICAgIE5vcm1hbGl6ZXMgbmFtZXMvYWxpYXNlcyB0byBsb3dlcmNhc2UuCiAgICBDaGVja3MgZm9yIGNvbmZsaWN0czoKICAgIC0gQWxpYXMgY2Fubm90IGJlIGFuIGV4aXN0aW5nIGNvbW1hbmQgKHVubGVzcyBpdCdzIHRoZSB0YXJnZXQgY29tbWFuZCBpdHNlbGYpLgogICAgLSBBbGlhcyBjYW5ub3QgYWxyZWFkeSBiZSB1c2VkIGZvciBhICpkaWZmZXJlbnQqIGNvbW1hbmQuCiAgICBBbGxvd3MgbXVsdGlwbGUgYWxpYXNlcyBmb3IgdGhlIHNhbWUgY29tbWFuZC4KCiAgICBBcmdzOgogICAgICAgIGFwcF9uYW1lX2NvbW1hbmQgKHN0cik6IFRoZSBjYW5vbmljYWwgYXBwbGljYXRpb24gY29tbWFuZC9leGVjdXRhYmxlIG5hbWUgKHZhbGlkYXRlZCBieSBoYW5kbGVyKS4KICAgICAgICBhbGlhc19uYW1lIChzdHIpOiBUaGUgYWxpYXMgdG8gYWRkLgogICAgICAgIGFsaWFzZXNfZGljdCAoZGljdCk6IFRoZSBkaWN0aW9uYXJ5IHRvIGFkZCB0aGUgYWxpYXMgdG8gKHdpbGwgYmUgbW9kaWZpZWQpLgoKICAgIFJldHVybnM6CiAgICAgICAgdHVwbGU6IChib29sLCBzdHIpIGluZGljYXRpbmcgc3VjY2VzcyBhbmQgYSBtZXNzYWdlLgogICAgIiIiCiAgICAjIEhhbmRsZXIgc2hvdWxkIGhhdmUgYWxyZWFkeSB2YWxpZGF0ZWQgYXBwX25hbWVfY29tbWFuZCBleGlzdHMKICAgIGFwcF9uYW1lX2xvd2VyID0gYXBwX25hbWVfY29tbWFuZC5sb3dlcigpCiAgICBhbGlhc19uYW1lX2xvd2VyID0gYWxpYXNfbmFtZS5sb3dlcigpCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtJTkZPXSBBdHRlbXB0aW5nIHRvIGFkZCBhbGlhcyAne2FsaWFzX25hbWVfbG93ZXJ9JyBmb3IgY29tbWFuZCAne2FwcF9uYW1lX2xvd2VyfScuIikKCiAgICAjIC0tLSBERUJVRzogUHJpbnQgdGhlIGN1cnJlbnQgYWxpYXNlcyBkaWN0aW9uYXJ5IC0tLQogICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bREVCVUddIEN1cnJlbnQgYWxpYXNlc19kaWN0IGJlZm9yZSBjaGVjazoge2FsaWFzZXNfZGljdH0iKQogICAgIyAtLS0gRU5EIERFQlVHIC0tLQoKICAgICMgMS4gQ2hlY2sgaWYgdGhlIGFsaWFzIG5hbWUgaXRzZWxmIGlzIGFuIGV4aXN0aW5nIGNvbW1hbmQKICAgIGlzX2FsaWFzX2FfY29tbWFuZCA9IHNodXRpbC53aGljaChhbGlhc19uYW1lX2xvd2VyKSBpcyBub3QgTm9uZQogICAgaWYgaXNfYWxpYXNfYV9jb21tYW5kIGFuZCBhbGlhc19uYW1lX2xvd2VyICE9IGFwcF9uYW1lX2xvd2VyOgogICAgICAgIG1zZyA9IGYi0JjQvNGPICd7YWxpYXNfbmFtZX0nINC90LUg0LzQvtC20LXRgiDQsdGL0YLRjCDQv9GB0LXQstC00L7QvdC40LzQvtC8LCDRgtCw0Log0LrQsNC6INGN0YLQviDRgdGD0YnQtdGB0YLQstGD0Y7RidCw0Y8g0LrQvtC80LDQvdC00LAg0LIg0YHQuNGB0YLQtdC80LUuIgogICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW0VSUk9SXSB7bXNnfSIpCiAgICAgICAgcmV0dXJuIEZhbHNlLCBtc2cKCiAgICAjIDIuIENoZWNrIGlmIHRoZSBhbGlhcyBpcyBhbHJlYWR5IGRlZmluZWQgaW4gdGhlIGRpY3Rpb25hcnkKICAgIGV4aXN0aW5nX3RhcmdldCA9IGFsaWFzZXNfZGljdC5nZXQoYWxpYXNfbmFtZV9sb3dlcikKICAgIGlmIGV4aXN0aW5nX3RhcmdldDoKICAgICAgICBwcmludChmIltVVElMU19BTElBU0VTXVtERUJVR10gRm91bmQgZXhpc3RpbmcgYWxpYXMgJ3thbGlhc19uYW1lX2xvd2VyfScgcG9pbnRpbmcgdG8gJ3tleGlzdGluZ190YXJnZXR9Jy4gQ29tcGFyaW5nIHdpdGggJ3thcHBfbmFtZV9sb3dlcn0nLiIpICMgTW9yZSBkZWJ1ZyBpbmZvCiAgICAgICAgaWYgZXhpc3RpbmdfdGFyZ2V0ID09IGFwcF9uYW1lX2xvd2VyOgogICAgICAgICAgICAjIEFsaWFzIGFscmVhZHkgZXhpc3RzIGZvciB0aGlzIGV4YWN0IGNvbW1hbmQuIE5vIG5lZWQgdG8gYWRkLCBidXQgbm90IGFuIGVycm9yLgogICAgICAgICAgICBtc2cgPSBmItCf0YHQtdCy0LTQvtC90LjQvCAne2FsaWFzX25hbWV9JyDRg9C20LUg0YHRg9GJ0LXRgdGC0LLRg9C10YIg0LTQu9GPINC60L7QvNCw0L3QtNGLICd7YXBwX25hbWVfbG93ZXJ9Jy4g0J3QuNGH0LXQs9C+INC90LUg0LjQt9C80LXQvdC10L3Qvi4iCiAgICAgICAgICAgIHByaW50KGYiW1VUSUxTX0FMSUFTRVNdW1dBUk5dIHttc2d9IikKICAgICAgICAgICAgcmV0dXJuIFRydWUsIG1zZwogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMgQWxpYXMgZXhpc3RzIGJ1dCBwb2ludHMgdG8gYSBESUZGRVJFTlQgY29tbWFuZC4gVGhpcyBpcyBhIGNvbmZsaWN0LgogICAgICAgICAgICBtc2cgPSBmItCf0YHQtdCy0LTQvtC90LjQvCAne2FsaWFzX25hbWV9JyDRg9C20LUg0LjRgdC/0L7Qu9GM0LfRg9C10YLRgdGPINC00LvRjyDQtNGA0YPQs9C+0Lkg0LrQvtC80LDQvdC00YsgKCd7ZXhpc3RpbmdfdGFyZ2V0fScpLiIKICAgICAgICAgICAgcHJpbnQoZiJbVVRJTFNfQUxJQVNFU11bRVJST1JdIHttc2d9IikKICAgICAgICAgICAgcmV0dXJuIEZhbHNlLCBtc2cKCiAgICAjIDMuIElmIG5vIGNvbmZsaWN0cywgYWRkIHRoZSBhbGlhcwogICAgYWxpYXNlc19kaWN0W2FsaWFzX25hbWVfbG93ZXJdID0gYXBwX25hbWVfbG93ZXIKICAgIG1zZyA9IGYi0J/RgdC10LLQtNC+0L3QuNC8ICd7YWxpYXNfbmFtZX0nINGD0YHQv9C10YjQvdC+INC00L7QsdCw0LLQu9C10L0g0LTQu9GPINC60L7QvNCw0L3QtNGLICd7YXBwX25hbWVfbG93ZXJ9Jy4iCiAgICBwcmludChmIltVVElMU19BTElBU0VTXVtTVUNDRVNTXSB7bXNnfSIpCiAgICByZXR1cm4gVHJ1ZSwgbXNnCgojIC0tLSBPdGhlciB1dGlsaXR5IGZ1bmN0aW9ucyAoaWYgYW55KSBjYW4gZ28gaGVyZSAtLS0",
					"AQAAAAAAAAABAAAAAAAAAAAAAADpFAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAM8UAAAAAAAAzxQAAAAAAADNBQAAYGBgCgoqKtCn0YLQviDQuNC30LzQtdC90LjQu9C+0YHRjCDQsiBgdXRpbHMucHlgOioqCgoqINCU0L7QsdCw0LLQu9C10L3QviDQvNC90L7Qs9C+IGBwcmludGAg0YEg0L/RgNC10YTQuNC60YHQvtC8IGBbVVRJTFNfU0FWRV1bREVCVUddYCDQstC90YPRgtGA0Lgg0YTRg9C90LrRhtC40LggYHNhdmVfYWxpYXNlc2AsINGH0YLQvtCx0Ysg0LLQuNC00LXRgtGMLCDRh9GC0L4g0L7QvdCwINC/0L7Qu9GD0YfQsNC10YIg0L3QsCDQstGF0L7QtCwg0L/Ri9GC0LDQtdGC0YHRjyDQu9C4INC+0YLQutGA0YvRgtGMINGE0LDQudC7LCDQuCDRh9GC0L4g0L/RgNC+0LjRgdGF0L7QtNC40YIg0L/QvtGB0LvQtSDQt9Cw0L/QuNGB0LggKNCy0LrQu9GO0YfQsNGPINC/0L7Qv9GL0YLQutGDINC/0YDQvtGH0LjRgtCw0YLRjCDRhNCw0LnQuyDQvtCx0YDQsNGC0L3QviDQtNC70Y8g0LLQtdGA0LjRhNC40LrQsNGG0LjQuCkuCiog0JTQvtCx0LDQstC70LXQvSDRj9Cy0L3Ri9C5IGBleGNlcHQgUGVybWlzc2lvbkVycm9yYCDQtNC70Y8g0L7RgtC70L7QstCwINC+0YjQuNCx0LrQuCDQv9GA0LDQsiDQtNC+0YHRgtGD0L/QsC4KKiDQlNC+0LHQsNCy0LvQtdC9INCy0YvQstC+0LQg0L/QvtC70L3QvtCz0L4gdHJhY2ViYWNrINC/0YDQuCDQtNGA0YPQs9C40YUg0L3QtdC+0LbQuNC00LDQvdC90YvRhSDQvtGI0LjQsdC60LDRhSDQsiBgc2F2ZV9hbGlhc2VzYC4KCioq0KLQstC+0Lgg0LTQtdC50YHRgtCy0LjRjzoqKgoKMS4gINCf0L7QutCw0LbQuCDQvNC90LUg0LLRi9Cy0L7QtCDQutC+0LzQsNC90LQgYGxzIC1sZCAuLi5gINC4IGBscyAtbCAuLi5gINC00LvRjyDQv9GA0L7QstC10YDQutC4INC/0YDQsNCyLgoyLiAg0JfQsNC80LXQvdC4INC60L7QtCDQsiBgdXRpbHMucHlgINC90LAg0Y3RgtGDINC90L7QstGD0Y4g0L7RgtC70LDQtNC+0YfQvdGD0Y4g0LLQtdGA0YHQuNGOLgozLiAg0J/QtdGA0LXQt9Cw0L/Rg9GB0YLQuCDRgdC10YDQstC40YE6IGBzdWRvIHN5c3RlbWN0bCByZXN0YXJ0IGZhbWlsaWFyLWJvdC5zZXJ2aWNlYC4KNC4gICoq0J/QvtC/0YDQvtCx0YPQuSDQtNC+0LHQsNCy0LjRgtGMINCw0LvQuNCw0YEgItCx0YDQsNGD0LfQtdGAIiDRgdC90L7QstCwKiouCjUuICDQktC90LjQvNCw0YLQtdC70YzQvdC+INC/0L7RgdC80L7RgtGA0Lgg0LvQvtCz0LggKGBqb3VybmFsY3RsIC11IGZhbWlsaWFyLWJvdC5zZXJ2aWNlIC1mYCkuINCi0LXQv9C10YDRjCDRgtCw0Lwg0LTQvtC70LbQvdC+INCx0YvRgtGMINCz0L7RgNCw0LfQtNC+INCx0L7Qu9GM0YjQtSDQuNC90YTQvtGA0LzQsNGG0LjQuCDQvtGCIGBbVVRJTFNfU0FWRV1gLCDQutC+0YLQvtGA0LDRjyDQv9C+0LrQsNC20LXRgiwg0YfRgtC+INC40LzQtdC90L3QviDQuNC00ZHRgiDQvdC1INGC0LDQuiDQv9GA0Lgg0L/QvtC/0YvRgtC60LUg0YHQvtGF0YDQsNC90LXQvdC40Y8uCgrQlNCw0LLQsNC5INC/0L7QudC80LDQtdC8INGN0YLRgyDQvtGI0LjQsdC60YMh",
					"AQAAAAAAAAABAAAAgxgAAAAAAADPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAM4UAAAAAAAAzhQAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAzxQAAAAAAADPFAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/update_familiar_env.sh",
			"settings":
			{
				"buffer_size": 1146,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAegQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/telegram_bot.py",
			"settings":
			{
				"buffer_size": 4493,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "# -*- coding: utf-8 -*-"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAjREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/command_dispatcher.py",
			"settings":
			{
				"buffer_size": 4538,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAApBEAAAAAAAAAAAAApBEAAAAAAACkEQAAAAAAALMHAAAjIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQoKIyDQmNC80L/QvtGA0YLQuNGA0YPQtdC8INGC0L7Qu9GM0LrQviDRgtC+LCDRh9GC0L4g0L3Rg9C20L3QviDQtNC70Y8g0LfQsNCz0YDRg9C30LrQuCDQsNC70LjQsNGB0L7QsiAo0L3QsCDQstGB0Y/QutC40Lkg0YHQu9GD0YfQsNC5KQppbXBvcnQgdXRpbHMKCiMg0JPQu9C+0LHQsNC70YzQvdCw0Y8g0L/QtdGA0LXQvNC10L3QvdCw0Y8g0LTQu9GPINGF0YDQsNC90LXQvdC40Y8g0LDQu9C40LDRgdC+0LIgKNC80L7QttC90L4g0L7RgdGC0LDQstC40YLRjCwg0L3QtSDQvNC10YjQsNC10YIpCkFQUF9BTElBU0VTID0ge30KCmRlZiBpbml0aWFsaXplX2Rpc3BhdGNoZXIoKToKICAgICIiItCX0LDQs9GA0YPQttCw0LXRgiDQsNC70LjQsNGB0Ysg0L/RgNC4INGB0YLQsNGA0YLQtS4iIiIKICAgIGdsb2JhbCBBUFBfQUxJQVNFUwogICAgQVBQX0FMSUFTRVMgPSB1dGlscy5sb2FkX2FsaWFzZXMoKQogICAgaWYgQVBQX0FMSUFTRVM6CiAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl1bSU5GT10g0JDQu9C40LDRgdGLINGD0YHQv9C10YjQvdC+INC30LDQs9GA0YPQttC10L3RiyAoe2xlbihBUFBfQUxJQVNFUyl9INGI0YIpLiIpCiAgICBlbHNlOgogICAgICAgIHByaW50KCJbRElTUEFUQ0hFUl1bV0FSTl0g0JDQu9C40LDRgdGLINC90LUg0LfQsNCz0YDRg9C20LXQvdGLLiIpCgpkZWYgZGlzcGF0Y2hfY29tbWFuZChwYXJzZWRfbmx1KToKICAgICIiIgogICAgKNCU0JXQkdCQ0JMt0JLQldCg0KHQmNCvKSDQn9GA0L7RgdGC0L4g0LLRi9Cy0L7QtNC40YIg0YDQsNGB0L/QvtC30L3QsNC90L3Ri9C1IE5MVSDQtNCw0L3QvdGL0LUg0LIg0LrQvtC90YHQvtC70YwuCiAgICBwYXJzZWRfbmx1OiDRgdC70L7QstCw0YDRjCwg0L/QvtC70YPRh9C10L3QvdGL0Lkg0LjQtyBubHVfcHJvY2Vzc29yLmV4dHJhY3RfanNvbl9mcm9tX3Jlc3BvbnNlCiAgICDQktC+0LfQstGA0LDRidCw0LXRgiDRgdGC0YDQvtC60YMg0YEg0L/QvtC00YLQstC10YDQttC00LXQvdC40LXQvCDQtNC70Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPLgogICAgIiIiCiAgICBpZiBub3QgcGFyc2VkX25sdSBvciAiaW50ZW50IiBub3QgaW4gcGFyc2VkX25sdToKICAgICAgICBwcmludCgiW0RJU1BBVENIRVJfREVCVUddW0VSUk9SXSDQn9C+0LvRg9GH0LXQvdGLINC90LXQstCw0LvQuNC00L3Ri9C1IE5MVSDQtNCw0L3QvdGL0LUg0LjQu9C4INC+0YLRgdGD0YLRgdGC0LLRg9C10YIgJ2ludGVudCcuIikKICAgICAgICByZXR1cm4gItCd0LUg0YPQtNCw0LvQvtGB0Ywg0YDQsNGB0L/QvtC30L3QsNGC0Ywg0LrQvtC80LDQvdC00YMgKNC+0YjQuNCx0LrQsCDQv9Cw0YDRgdC40L3Qs9CwIE5MVSkuIgoKICAgIGludGVudCA9IHBhcnNlZF9ubHUuZ2V0KCJpbnRlbnQiKQogICAgcGFyYW1ldGVycyA9IHBhcnNlZF9ubHUuZ2V0KCJwYXJhbWV0ZXJzIiwge30pCgogICAgIyAtLS0g0J/RgNC+0YHRgtC+INCy0YvQstC+0LTQuNC8INGA0LXQt9GD0LvRjNGC0LDRgiAtLS0KICAgIHByaW50KCI9IioyMCkKICAgIHByaW50KGYiW0RJU1BBVENIRVJfREVCVUddINCg0LDRgdC/0L7Qt9C90LDQvdC90YvQuSDQuNC90YLQtdC90YI6IHtpbnRlbnR9IikKICAgIHByaW50KGYiW0RJU1BBVENIRVJfREVCVUddINCg0LDRgdC/0L7Qt9C90LDQvdC90YvQtSDQv9Cw0YDQsNC80LXRgtGA0Ys6IHtwYXJhbWV0ZXJzfSIpCiAgICBwcmludCgiPSIqMjApCgogICAgIyDQktC+0LfQstGA0LDRidCw0LXQvCDQv9GA0L7RgdGC0L7QtSDQv9C+0LTRgtCy0LXRgNC20LTQtdC90LjQtQogICAgcmV0dXJuIGYi0KDQsNGB0L/QvtC30L3QsNC90L46INC40L3RgtC10L3Rgj0ne2ludGVudH0nLCDQv9Cw0YDQsNC80LXRgtGA0Ys9e3BhcmFtZXRlcnN9IgoKCiMgLS0tINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINC/0YDQuCDQuNC80L/QvtGA0YLQtSAtLS0KaW5pdGlhbGl6ZV9kaXNwYXRjaGVyKCk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAALAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAA/A0AAAAAAAAAAAAA/A0AAAAAAAD8DQAAAAAAAOcWAAAjINCe0LHQvdC+0LLQu9C10L3QvdGL0Lkg0YTQsNC50Ls6IGNvbW1hbmRfZGlzcGF0Y2hlci5weQojIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQoKIyDQmNC80L/QvtGA0YLQuNGA0YPQtdC8INGD0YLQuNC70LjRgtGLINC4INC+0LHRgNCw0LHQvtGC0YfQuNC60Lgg0LjQvdGC0LXQvdGC0L7QsgppbXBvcnQgdXRpbHMKZnJvbSBpbnRlbnRfaGFuZGxlcnMgaW1wb3J0IGhhbmRsZV9tYW5hZ2VfYXBwICMg0JjQvNC/0L7RgNGC0LjRgNGD0LXQvCDQutC+0L3QutGA0LXRgtC90YvQuSDQvtCx0YDQsNCx0L7RgtGH0LjQugojIFRPRE86INCU0L7QsdCw0LLQuNGC0Ywg0LjQvNC/0L7RgNGC0Ysg0LTQu9GPINC00YDRg9Cz0LjRhSDQvtCx0YDQsNCx0L7RgtGH0LjQutC+0LIg0L/QviDQvNC10YDQtSDQuNGFINGB0L7Qt9C00LDQvdC40Y8KIyBmcm9tIGludGVudF9oYW5kbGVycyBpbXBvcnQgaGFuZGxlX2Nsb3NlX2FwcCwgaGFuZGxlX2FkZF9hbGlhcywgLi4uCgojINCT0LvQvtCx0LDQu9GM0L3QsNGPINC/0LXRgNC10LzQtdC90L3QsNGPINC00LvRjyDRhdGA0LDQvdC10L3QuNGPINCw0LvQuNCw0YHQvtCyCkFQUF9BTElBU0VTID0ge30KCiMg0KHQu9C+0LLQsNGA0Ywg0LTQu9GPINC80LDRgNGI0YDRg9GC0LjQt9Cw0YbQuNC4INC40L3RgtC10L3RgtC+0LIg0Log0LjRhSDQvtCx0YDQsNCx0L7RgtGH0LjQutCw0LwKSU5URU5UX0hBTkRMRVJTID0gewogICAgIm1hbmFnZV9hcHAiOiBoYW5kbGVfbWFuYWdlX2FwcC5oYW5kbGUsCiAgICAjIC0tLSDQl9Cw0LPQu9GD0YjQutC4INC00LvRjyDQtNGA0YPQs9C40YUg0LjQvdGC0LXQvdGC0L7QsiAtLS0KICAgICMgImNsb3NlX2FwcCI6IGhhbmRsZV9jbG9zZV9hcHAuaGFuZGxlLCAjINCg0LDRgdC60L7QvNC80LXQvdGC0LjRgNC+0LLQsNGC0YwsINC60L7Qs9C00LAg0YHQvtC30LTQsNC00LjQvAogICAgIyAiYWRkX2FsaWFzIjogaGFuZGxlX2FkZF9hbGlhcy5oYW5kbGUsICMg0KDQsNGB0LrQvtC80LzQtdC90YLQuNGA0L7QstCw0YLRjCwg0LrQvtCz0LTQsCDRgdC+0LfQtNCw0LTQuNC8CiAgICAjICJjb250cm9sX3ZvbHVtZSI6IGhhbmRsZV9jb250cm9sX3ZvbHVtZS5oYW5kbGUsCiAgICAjICJhc2tfdGltZSI6IGhhbmRsZV9hc2tfdGltZS5oYW5kbGUsCiAgICAjICJyZWJvb3Rfc3lzdGVtIjogaGFuZGxlX3JlYm9vdF9zeXN0ZW0uaGFuZGxlLAogICAgIyAidXBkYXRlX3N5c3RlbSI6IGhhbmRsZV91cGRhdGVfc3lzdGVtLmhhbmRsZSwKICAgICMgIndlYl9zZWFyY2giOiBoYW5kbGVfd2ViX3NlYXJjaC5oYW5kbGUsCiAgICAjICJzZXRfcmVtaW5kZXIiOiBoYW5kbGVfc2V0X3JlbWluZGVyLmhhbmRsZSwKICAgICMgInNldF9hbGFybSI6IGhhbmRsZV9zZXRfYWxhcm0uaGFuZGxlLAogICAgIyAidW5rbm93biI6IGhhbmRsZV91bmtub3duLmhhbmRsZSwgIyDQntCx0YDQsNCx0L7RgtGH0LjQuiDQtNC70Y8g0L3QtdC40LfQstC10YHRgtC90YvRhSDQutC+0LzQsNC90LQKfQoKZGVmIGluaXRpYWxpemVfZGlzcGF0Y2hlcigpOgogICAgIiIi0JfQsNCz0YDRg9C20LDQtdGCINCw0LvQuNCw0YHRiyDQv9GA0Lgg0YHRgtCw0YDRgtC1LiIiIgogICAgZ2xvYmFsIEFQUF9BTElBU0VTCiAgICBBUFBfQUxJQVNFUyA9IHV0aWxzLmxvYWRfYWxpYXNlcygpCiAgICBpZiBBUFBfQUxJQVNFUzoKICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQkNC70LjQsNGB0Ysg0YPRgdC/0LXRiNC90L4g0LfQsNCz0YDRg9C20LXQvdGLICh7bGVuKEFQUF9BTElBU0VTKX0g0YjRgikuIikKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoIltESVNQQVRDSEVSXVtXQVJOXSDQkNC70LjQsNGB0Ysg0L3QtSDQt9Cw0LPRgNGD0LbQtdC90Ysg0LjQu9C4INGE0LDQudC7INC/0YPRgdGCLiIpCgpkZWYgZGlzcGF0Y2hfY29tbWFuZChwYXJzZWRfbmx1KToKICAgICIiIgogICAg0JzQsNGA0YjRgNGD0YLQuNC30LjRgNGD0LXRgiDQutC+0LzQsNC90LTRgyDQuiDRgdC+0L7RgtCy0LXRgtGB0YLQstGD0Y7RidC10LzRgyDQvtCx0YDQsNCx0L7RgtGH0LjQutGDINC40L3RgtC10L3RgtCwLgogICAgIiIiCiAgICBpZiBub3QgcGFyc2VkX25sdSBvciAiaW50ZW50IiBub3QgaW4gcGFyc2VkX25sdToKICAgICAgICBwcmludCgiW0RJU1BBVENIRVJdW0VSUk9SXSDQn9C+0LvRg9GH0LXQvdGLINC90LXQstCw0LvQuNC00L3Ri9C1IE5MVSDQtNCw0L3QvdGL0LUuIikKICAgICAgICByZXR1cm4gItCd0LUg0YPQtNCw0LvQvtGB0Ywg0YDQsNGB0L/QvtC30L3QsNGC0Ywg0LrQvtC80LDQvdC00YMuIgoKICAgIGludGVudCA9IHBhcnNlZF9ubHUuZ2V0KCJpbnRlbnQiKQogICAgcGFyYW1ldGVycyA9IHBhcnNlZF9ubHUuZ2V0KCJwYXJhbWV0ZXJzIiwge30pCiAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQnNCw0YDRiNGA0YPRgtC40LfQsNGG0LjRjyDQuNC90YLQtdC90YLQsDogJ3tpbnRlbnR9Jywg0L/QsNGA0LDQvNC10YLRgNGLOiB7cGFyYW1ldGVyc30iKQoKICAgICMg0J3QsNGF0L7QtNC40Lwg0L3Rg9C20L3Ri9C5INC+0LHRgNCw0LHQvtGC0YfQuNC6INCyINGB0LvQvtCy0LDRgNC1CiAgICBoYW5kbGVyX2Z1bmN0aW9uID0gSU5URU5UX0hBTkRMRVJTLmdldChpbnRlbnQpCgogICAgaWYgaGFuZGxlcl9mdW5jdGlvbjoKICAgICAgICB0cnk6CiAgICAgICAgICAgICMgLS0tINCh0L/QtdGG0LjQsNC70YzQvdCw0Y8g0L7QsdGA0LDQsdC+0YLQutCwINC00LvRjyBtYW5hZ2VfYXBwINC4IGNsb3NlX2FwcCAtLS0KICAgICAgICAgICAgIyDQndC+0YDQvNCw0LvQuNC30YPQtdC8IGFwcF9uYW1lINC/0LXRgNC10LQg0L/QtdGA0LXQtNCw0YfQtdC5INCyINC+0LHRgNCw0LHQvtGC0YfQuNC6CiAgICAgICAgICAgIGlmIGludGVudCBpbiBbIm1hbmFnZV9hcHAiLCAiY2xvc2VfYXBwIl06CiAgICAgICAgICAgICAgICAgYXBwX25hbWVfcmF3ID0gcGFyYW1ldGVycy5nZXQoImFwcF9uYW1lIikKICAgICAgICAgICAgICAgICBpZiBub3QgYXBwX25hbWVfcmF3OgogICAgICAgICAgICAgICAgICAgICByZXR1cm4gZiLQndC1INC/0L7QvdGP0LvQsCwg0LrQsNC60L7QtSDQv9GA0LjQu9C+0LbQtdC90LjQtSB7KCfQvtGC0LrRgNGL0YLRjCcgaWYgaW50ZW50ID09ICdtYW5hZ2VfYXBwJyBlbHNlICfQt9Cw0LrRgNGL0YLRjCcpfS4iCiAgICAgICAgICAgICAgICAgY2Fub25pY2FsX25hbWUgPSBBUFBfQUxJQVNFUy5nZXQoYXBwX25hbWVfcmF3Lmxvd2VyKCksIGFwcF9uYW1lX3Jhdy5sb3dlcigpKQogICAgICAgICAgICAgICAgICMg0JLRi9C30YvQstCw0LXQvCDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgSDQvdC+0YDQvNCw0LvQuNC30L7QstCw0L3QvdGL0Lwg0LjQvNC10L3QtdC8CiAgICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZXJfZnVuY3Rpb24oY2Fub25pY2FsX25hbWUpCiAgICAgICAgICAgICMgLS0tINCe0LHRgNCw0LHQvtGC0LrQsCDQtNC70Y8gYWRkX2FsaWFzIC0tLQogICAgICAgICAgICBlbGlmIGludGVudCA9PSAiYWRkX2FsaWFzIjoKICAgICAgICAgICAgICAgICAjINCf0LXRgNC10LTQsNC10Lwg0L7QsdCwINC/0LDRgNCw0LzQtdGC0YDQsAogICAgICAgICAgICAgICAgIGFsaWFzX25hbWUgPSBwYXJhbWV0ZXJzLmdldCgiYWxpYXNfbmFtZSIpCiAgICAgICAgICAgICAgICAgY2Fub25pY2FsX25hbWVfcGFyYW0gPSBwYXJhbWV0ZXJzLmdldCgiY2Fub25pY2FsX25hbWUiKQogICAgICAgICAgICAgICAgIGlmIG5vdCBhbGlhc19uYW1lIG9yIG5vdCBjYW5vbmljYWxfbmFtZV9wYXJhbToKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAi0J3QtSDQv9C+0L3Rj9C70LAsINC60LDQutC+0Lkg0LDQu9C40LDRgSDQuCDQtNC70Y8g0LrQsNC60L7Qs9C+INC/0YDQuNC70L7QttC10L3QuNGPINC00L7QsdCw0LLQuNGC0YwuIgogICAgICAgICAgICAgICAgICMg0JLRi9C30YvQstCw0LXQvCDQvtCx0YDQsNCx0L7RgtGH0LjQuiwg0L/QtdGA0LXQtNCw0LLQsNGPINCy0YHQtSDQv9Cw0YDQsNC80LXRgtGA0YsKICAgICAgICAgICAgICAgICAjINCe0LHRgNCw0LHQvtGC0YfQuNC6INGB0LDQvCDQtNC+0LvQttC10L0g0LHRg9C00LXRgiDQvtCx0L3QvtCy0LjRgtGMINCz0LvQvtCx0LDQu9GM0L3Ri9C5IEFQUF9BTElBU0VTINC/0YDQuCDRg9GB0L/QtdGF0LUKICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlcl9mdW5jdGlvbihhbGlhc19uYW1lLCBjYW5vbmljYWxfbmFtZV9wYXJhbSkgIyDQn9GA0LjQvNC10YAsINGB0LjQs9C90LDRgtGD0YDQsCDQvNC+0LbQtdGCINCx0YvRgtGMINC00YDRg9Cz0L7QuQogICAgICAgICAgICAjIC0tLSDQntCx0YDQsNCx0L7RgtC60LAg0LTQu9GPINC00YDRg9Cz0LjRhSDQuNC90YLQtdC90YLQvtCyIC0tLQogICAgICAgICAgICAjINCU0LvRjyDQtNGA0YPQs9C40YUg0LjQvdGC0LXQvdGC0L7QsiDQv9GA0L7RgdGC0L4g0L/QtdGA0LXQtNCw0LXQvCDQstC10YHRjCDRgdC70L7QstCw0YDRjCDQv9Cw0YDQsNC80LXRgtGA0L7QsgogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVyX2Z1bmN0aW9uKHBhcmFtZXRlcnMpCgogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgIyDQm9C+0LLQuNC8INC+0YjQuNCx0LrQuCDQstGL0L/QvtC70L3QtdC90LjRjyDRgdCw0LzQvtCz0L4g0L7QsdGA0LDQsdC+0YLRh9C40LrQsAogICAgICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtFUlJPUl0g0J7RiNC40LHQutCwINC/0YDQuCDQstGL0L/QvtC70L3QtdC90LjQuCDQvtCx0YDQsNCx0L7RgtGH0LjQutCwINC00LvRjyDQuNC90YLQtdC90YLQsCAne2ludGVudH0nOiB7ZX0iKQogICAgICAgICAgICAjINCSINC40LTQtdCw0LvQtSDQt9C00LXRgdGMINC90YPQttC90L4g0LHQvtC70LXQtSDQv9C+0LTRgNC+0LHQvdC+0LUg0LvQvtCz0LjRgNC+0LLQsNC90LjQtSDRgdGC0LXQutCwINC+0YjQuNCx0LrQuAogICAgICAgICAgICBpbXBvcnQgdHJhY2ViYWNrCiAgICAgICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKSAjINCf0LXRh9Cw0YLQsNC10LwgdHJhY2ViYWNrINC00LvRjyDQvtGC0LvQsNC00LrQuAogICAgICAgICAgICByZXR1cm4gZiLQn9GA0L7QuNC30L7RiNC70LAg0L7RiNC40LHQutCwINC/0YDQuCDQstGL0L/QvtC70L3QtdC90LjQuCDQutC+0LzQsNC90LTRiyAne2ludGVudH0nLiIKICAgIGVsc2U6CiAgICAgICAgIyDQldGB0LvQuCDQvtCx0YDQsNCx0L7RgtGH0LjQuiDQtNC70Y8g0LjQvdGC0LXQvdGC0LAg0L3QtSDQvdCw0LnQtNC10L0gKNC90LDQv9GA0LjQvNC10YAsICd1bmtub3duJyDQuNC70Lgg0L7RiNC40LHQutCwIE5MVSkKICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtXQVJOXSDQntCx0YDQsNCx0L7RgtGH0LjQuiDQtNC70Y8g0LjQvdGC0LXQvdGC0LAgJ3tpbnRlbnR9JyDQvdC1INC90LDQudC00LXQvS4iKQogICAgICAgICMg0JzQvtC20L3QviDQstGL0LfQstCw0YLRjCDQvtCx0YDQsNCx0L7RgtGH0LjQuiDQtNC70Y8gdW5rbm93biwg0LXRgdC70Lgg0L7QvSDQtdGB0YLRjAogICAgICAgIHVua25vd25faGFuZGxlciA9IElOVEVOVF9IQU5ETEVSUy5nZXQoInVua25vd24iKQogICAgICAgIGlmIHVua25vd25faGFuZGxlcjoKICAgICAgICAgICAgcmV0dXJuIHVua25vd25faGFuZGxlcihwYXJhbWV0ZXJzKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiAi0JjQt9Cy0LjQvdC40YLQtSwg0Y8g0L3QtSDQt9C90LDRjiwg0LrQsNC6INC+0LHRgNCw0LHQvtGC0LDRgtGMINGN0YLRgyDQutC+0LzQsNC90LTRgy4iCgojIC0tLSDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDQv9GA0Lgg0LjQvNC/0L7RgNGC0LUgLS0tCmluaXRpYWxpemVfZGlzcGF0Y2hlcigp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAKQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAYBQAAAAAAAAAAAAAYBQAAAAAAABgFAAAAAAAALARAAAjINCe0LHQvdC+0LLQu9C10L3QvdGL0Lkg0YTQsNC50Ls6IGNvbW1hbmRfZGlzcGF0Y2hlci5weSAo0YEg0L/QvtC00LTQtdGA0LbQutC+0LkgZGVidWdfbW9kZSkKIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KCmltcG9ydCBzaHV0aWwKaW1wb3J0IHRpbWUKCiMg0JjQvNC/0L7RgNGC0LjRgNGD0LXQvCDRg9GC0LjQu9C40YLRiyDQuCDQvtCx0YDQsNCx0L7RgtGH0LjQutC4INC40L3RgtC10L3RgtC+0LIKaW1wb3J0IHV0aWxzCmZyb20gaW50ZW50X2hhbmRsZXJzIGltcG9ydCBoYW5kbGVfbWFuYWdlX2FwcCAjINCY0LzQv9C+0YDRgtC40YDRg9C10Lwg0L/QvtC60LAg0YLQvtC70YzQutC+INGN0YLQvtGCCiMgVE9ETzog0JjQvNC/0L7RgNGC0Ysg0LTQu9GPINC00YDRg9Cz0LjRhSDQvtCx0YDQsNCx0L7RgtGH0LjQutC+0LIuLi4KCiMg0JPQu9C+0LHQsNC70YzQvdCw0Y8g0L/QtdGA0LXQvNC10L3QvdCw0Y8g0LTQu9GPINCw0LvQuNCw0YHQvtCyCkFQUF9BTElBU0VTID0ge30KCiMg0KHQu9C+0LLQsNGA0Ywg0LzQsNGA0YjRgNGD0YLQuNC30LDRhtC40Lgg0LjQvdGC0LXQvdGC0L7QsgpJTlRFTlRfSEFORExFUlMgPSB7CiAgICAjINCY0YHQv9C+0LvRjNC30YPQtdC8ICdydW5fYXBwJyDQutCw0Log0LrQu9GO0YcsINC60LDQuiDQtNC+0LPQvtCy0L7RgNC40LvQuNGB0Ywg0LIg0L/RgNC+0YjQu9GL0Lkg0YDQsNC3CiAgICAicnVuX2FwcCI6IGhhbmRsZV9tYW5hZ2VfYXBwLmhhbmRsZSwKICAgICMgVE9ETzog0JTQvtCx0LDQstC40YLRjCDQtNGA0YPQs9C40LUg0L7QsdGA0LDQsdC+0YLRh9C40LrQuC4uLgogICAgIyAiY2xvc2VfYXBwIjogaGFuZGxlX2Nsb3NlX2FwcC5oYW5kbGUsCiAgICAjICJhZGRfYWxpYXMiOiBoYW5kbGVfYWRkX2FsaWFzLmhhbmRsZSwKfQoKZGVmIGluaXRpYWxpemVfZGlzcGF0Y2hlcigpOgogICAgIiIi0JfQsNCz0YDRg9C20LDQtdGCINCw0LvQuNCw0YHRiyDQv9GA0Lgg0YHRgtCw0YDRgtC1LiIiIgogICAgZ2xvYmFsIEFQUF9BTElBU0VTCiAgICBBUFBfQUxJQVNFUyA9IHV0aWxzLmxvYWRfYWxpYXNlcygpCiAgICBpZiBBUFBfQUxJQVNFUzoKICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQkNC70LjQsNGB0Ysg0YPRgdC/0LXRiNC90L4g0LfQsNCz0YDRg9C20LXQvdGLICh7bGVuKEFQUF9BTElBU0VTKX0g0YjRgikuIikKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoIltESVNQQVRDSEVSXVtXQVJOXSDQkNC70LjQsNGB0Ysg0L3QtSDQt9Cw0LPRgNGD0LbQtdC90Ysg0LjQu9C4INGE0LDQudC7INC/0YPRgdGCLiIpCgojIC0tLSDQmNCX0JzQldCd0JXQndCY0JU6INCU0L7QsdCw0LLQu9GP0LXQvCDQsNGA0LPRg9C80LXQvdGCIGRlYnVnX21vZGUgLS0tCmRlZiBkaXNwYXRjaF9jb21tYW5kKHBhcnNlZF9ubHUsIGRlYnVnX21vZGU9RmFsc2UpOgogICAgIiIiCiAgICDQnNCw0YDRiNGA0YPRgtC40LfQuNGA0YPQtdGCINC60L7QvNCw0L3QtNGDINC40LvQuCDQstGL0LLQvtC00LjRgiBOTFUg0YDQtdC30YPQu9GM0YLQsNGCINCyINC30LDQstC40YHQuNC80L7RgdGC0Lgg0L7RgiBkZWJ1Z19tb2RlLgogICAgIiIiCiAgICBnbG9iYWwgQVBQX0FMSUFTRVMKCiAgICBpZiBub3QgcGFyc2VkX25sdSBvciAiaW50ZW50IiBub3QgaW4gcGFyc2VkX25sdToKICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVt7J0RFQlVHJyBpZiBkZWJ1Z19tb2RlIGVsc2UgJ0VSUk9SJ31dINCf0L7Qu9GD0YfQtdC90Ysg0L3QtdCy0LDQu9C40LTQvdGL0LUgTkxVINC00LDQvdC90YvQtS4iKQogICAgICAgIHJldHVybiAi0J3QtSDRg9C00LDQu9C+0YHRjCDRgNCw0YHQv9C+0LfQvdCw0YLRjCDQutC+0LzQsNC90LTRgy4iCgogICAgaW50ZW50ID0gcGFyc2VkX25sdS5nZXQoImludGVudCIpCiAgICBwYXJhbWV0ZXJzID0gcGFyc2VkX25sdS5nZXQoInBhcmFtZXRlcnMiLCB7fSkKICAgIHByaW50KGYiW0RJU1BBVENIRVJdW0lORk9dINCf0L7Qu9GD0YfQtdC9INC40L3RgtC10L3RgjogJ3tpbnRlbnR9Jywg0L/QsNGA0LDQvNC10YLRgNGLOiB7cGFyYW1ldGVyc30iKQoKICAgICMgLS0tINCg0JXQltCY0Jwg0JTQldCR0JDQk9CQIC0tLQogICAgaWYgZGVidWdfbW9kZToKICAgICAgICBwcmludCgiPSIqMjAgKyAiIERFQlVHIE1PREUgIiArICI9IioyMCkKICAgICAgICBwcmludChmIltESVNQQVRDSEVSX0RFQlVHXSDQoNCw0YHQv9C+0LfQvdCw0L3QvdGL0Lkg0LjQvdGC0LXQvdGCOiB7aW50ZW50fSIpCiAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl9ERUJVR10g0KDQsNGB0L/QvtC30L3QsNC90L3Ri9C1INC/0LDRgNCw0LzQtdGC0YDRizoge3BhcmFtZXRlcnN9IikKICAgICAgICBwcmludCgiPSIqNTIpCiAgICAgICAgcmV0dXJuIGYi0JTQldCR0JDQkzog0KDQsNGB0L/QvtC30L3QsNC90L46INC40L3RgtC10L3Rgj0ne2ludGVudH0nLCDQv9Cw0YDQsNC80LXRgtGA0Ys9e3BhcmFtZXRlcnN9IgogICAgIyAtLS0g0JrQntCd0JXQpiDQoNCV0JbQmNCc0JAg0JTQldCR0JDQk9CQIC0tLQoKICAgICMgLS0tINCg0JDQkdCe0KfQmNCZINCg0JXQltCY0JwgLS0tCiAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQnNCw0YDRiNGA0YPRgtC40LfQsNGG0LjRjyDQuNC90YLQtdC90YLQsDogJ3tpbnRlbnR9JyIpCiAgICBoYW5kbGVyX2Z1bmN0aW9uID0gSU5URU5UX0hBTkRMRVJTLmdldChpbnRlbnQpCgogICAgaWYgaGFuZGxlcl9mdW5jdGlvbjoKICAgICAgICB0cnk6CiAgICAgICAgICAgICMgLS0tINCb0L7Qs9C40LrQsCDQstGL0LfQvtCy0LAg0L7QsdGA0LDQsdC+0YLRh9C40LrQvtCyICjQvdGD0LbQvdC+INCx0YPQtNC10YIg0LTQvtC/0LjRgdCw0YLRjCDQtNC70Y8g0LLRgdC10YUpIC0tLQogICAgICAgICAgICBpZiBpbnRlbnQgPT0gInJ1bl9hcHAiOiAjINCY0YHQv9C+0LvRjNC30YPQtdC8IHJ1bl9hcHAg0LrQsNC6INC60LvRjtGHCiAgICAgICAgICAgICAgICAgYXBwX25hbWVfcmF3ID0gcGFyYW1ldGVycy5nZXQoImFwcF9uYW1lIikKICAgICAgICAgICAgICAgICBpZiBub3QgYXBwX25hbWVfcmF3OiByZXR1cm4gItCd0LUg0L/QvtC90Y/Qu9CwLCDQutCw0LrQvtC1INC/0YDQuNC70L7QttC10L3QuNC1INC90YPQttC90L4uIgogICAgICAgICAgICAgICAgIGNhbm9uaWNhbF9uYW1lID0gQVBQX0FMSUFTRVMuZ2V0KGFwcF9uYW1lX3Jhdy5sb3dlcigpLCBhcHBfbmFtZV9yYXcubG93ZXIoKSkKICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlcl9mdW5jdGlvbihjYW5vbmljYWxfbmFtZSkgIyDQktGL0LfRi9Cy0LDQtdC8IGhhbmRsZV9tYW5hZ2VfYXBwLmhhbmRsZQogICAgICAgICAgICAjIFRPRE86INCU0L7QsdCw0LLQuNGC0YwgZWxpZiDQtNC70Y8gY2xvc2VfYXBwLCBhZGRfYWxpYXMg0Lgg0YIu0LQuCiAgICAgICAgICAgICMgZWxpZiBpbnRlbnQgPT0gImNsb3NlX2FwcCI6IC4uLgogICAgICAgICAgICAjIGVsaWYgaW50ZW50ID09ICJhZGRfYWxpYXMiOiAuLi4KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAjINCU0LvRjyDQuNC90YLQtdC90YLQvtCyINCx0LXQtyDRgdC/0LXRhtC40YTQuNGH0LXRgdC60L7QuSDQvtCx0YDQsNCx0L7RgtC60Lgg0L/QsNGA0LDQvNC10YLRgNC+0LIgKNC/0L7QutCwKQogICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVyX2Z1bmN0aW9uKHBhcmFtZXRlcnMpCgogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl1bRVJST1JdINCe0YjQuNCx0LrQsCDQv9GA0Lgg0LLRi9C/0L7Qu9C90LXQvdC40Lgg0L7QsdGA0LDQsdC+0YLRh9C40LrQsCDQtNC70Y8g0LjQvdGC0LXQvdGC0LAgJ3tpbnRlbnR9Jzoge2V9IikKICAgICAgICAgICAgaW1wb3J0IHRyYWNlYmFjawogICAgICAgICAgICB0cmFjZWJhY2sucHJpbnRfZXhjKCkKICAgICAgICAgICAgcmV0dXJuIGYi0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsCDQv9GA0Lgg0LLRi9C/0L7Qu9C90LXQvdC40Lgg0LrQvtC80LDQvdC00YsgJ3tpbnRlbnR9Jy4iCiAgICBlbHNlOgogICAgICAgICMg0J7QsdGA0LDQsdC+0YLRh9C40Log0L3QtSDQvdCw0LnQtNC10L0KICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtXQVJOXSDQntCx0YDQsNCx0L7RgtGH0LjQuiDQtNC70Y8g0LjQvdGC0LXQvdGC0LAgJ3tpbnRlbnR9JyDQvdC1INC90LDQudC00LXQvS4iKQogICAgICAgIHVua25vd25faGFuZGxlciA9IElOVEVOVF9IQU5ETEVSUy5nZXQoInVua25vd24iKQogICAgICAgIGlmIHVua25vd25faGFuZGxlcjoKICAgICAgICAgICAgcmV0dXJuIHVua25vd25faGFuZGxlcihwYXJhbWV0ZXJzKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiAi0JjQt9Cy0LjQvdC40YLQtSwg0Y8g0L3QtSDQt9C90LDRjiwg0LrQsNC6INC+0LHRgNCw0LHQvtGC0LDRgtGMINGN0YLRgyDQutC+0LzQsNC90LTRgy4iCgojIC0tLSDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDQv9GA0Lgg0LjQvNC/0L7RgNGC0LUgLS0tCmluaXRpYWxpemVfZGlzcGF0Y2hlcigp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPwNAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAeA8AAAAAAAAAAAAAeA8AAAAAAAB4DwAAAAAAAH0ZAAAjINCY0YHQv9GA0LDQstC70LXQvdC90LDRjyDQstC10YDRgdC40Y8g0YTQsNC50LvQsDogY29tbWFuZF9kaXNwYXRjaGVyLnB5CiMgLSotIGNvZGluZzogdXRmLTggLSotCgppbXBvcnQgc2h1dGlsCmltcG9ydCB0aW1lCgojINCY0LzQv9C+0YDRgtC40YDRg9C10Lwg0YPRgtC40LvQuNGC0Ysg0Lgg0L7QsdGA0LDQsdC+0YLRh9C40LrQuCDQuNC90YLQtdC90YLQvtCyCmltcG9ydCB1dGlscwpmcm9tIGludGVudF9oYW5kbGVycyBpbXBvcnQgaGFuZGxlX21hbmFnZV9hcHAgIyDQmNC80L/QvtGA0YLQuNGA0YPQtdC8INC/0LXRgNCy0YvQuSDQvtCx0YDQsNCx0L7RgtGH0LjQugojIFRPRE86INCU0L7QsdCw0LLQuNGC0Ywg0LjQvNC/0L7RgNGC0Ysg0LTQu9GPIGhhbmRsZV9jbG9zZV9hcHAsIGhhbmRsZV9hZGRfYWxpYXMg0Lgg0YIu0LQuCgojINCT0LvQvtCx0LDQu9GM0L3QsNGPINC/0LXRgNC10LzQtdC90L3QsNGPINC00LvRjyDQsNC70LjQsNGB0L7QsgpBUFBfQUxJQVNFUyA9IHt9CgojINCh0LvQvtCy0LDRgNGMINC80LDRgNGI0YDRg9GC0LjQt9Cw0YbQuNC4INC40L3RgtC10L3RgtC+0LIg0Log0YTRg9C90LrRhtC40Y/QvC3QvtCx0YDQsNCx0L7RgtGH0LjQutCw0LwKSU5URU5UX0hBTkRMRVJTID0gewogICAgIyDQmNGB0L/QvtC70YzQt9GD0LXQvCAncnVuX2FwcCcg0LrQsNC6INC60LvRjtGHLCDQutCw0Log0LTQvtCz0L7QstC+0YDQuNC70LjRgdGMCiAgICAicnVuX2FwcCI6IGhhbmRsZV9tYW5hZ2VfYXBwLmhhbmRsZSwKICAgICMgLS0tINCX0LDQs9C70YPRiNC60Lgg0LTQu9GPINC00YDRg9Cz0LjRhSDQuNC90YLQtdC90YLQvtCyIC0tLQogICAgIyAiY2xvc2VfYXBwIjogaGFuZGxlX2Nsb3NlX2FwcC5oYW5kbGUsCiAgICAjICJhZGRfYWxpYXMiOiBoYW5kbGVfYWRkX2FsaWFzLmhhbmRsZSwKICAgICMgLi4uINC4INGCLtC0LiAuLi4KfQoKZGVmIGluaXRpYWxpemVfZGlzcGF0Y2hlcigpOgogICAgIiIi0JfQsNCz0YDRg9C20LDQtdGCINCw0LvQuNCw0YHRiyDQv9GA0Lgg0YHRgtCw0YDRgtC1LiIiIgogICAgZ2xvYmFsIEFQUF9BTElBU0VTCiAgICBBUFBfQUxJQVNFUyA9IHV0aWxzLmxvYWRfYWxpYXNlcygpCiAgICBpZiBBUFBfQUxJQVNFUzoKICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQkNC70LjQsNGB0Ysg0YPRgdC/0LXRiNC90L4g0LfQsNCz0YDRg9C20LXQvdGLICh7bGVuKEFQUF9BTElBU0VTKX0g0YjRgikuIikKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoIltESVNQQVRDSEVSXVtXQVJOXSDQkNC70LjQsNGB0Ysg0L3QtSDQt9Cw0LPRgNGD0LbQtdC90Ysg0LjQu9C4INGE0LDQudC7INC/0YPRgdGCLiIpCgojIC0tLSDQpNGD0L3QutGG0LjRjyDRgtC10L/QtdGA0Ywg0YHQvdC+0LLQsCDQv9GA0LjQvdC40LzQsNC10YIgZGVidWdfbW9kZSAtLS0KZGVmIGRpc3BhdGNoX2NvbW1hbmQocGFyc2VkX25sdSwgZGVidWdfbW9kZT1GYWxzZSk6CiAgICAiIiIKICAgINCc0LDRgNGI0YDRg9GC0LjQt9C40YDRg9C10YIg0LrQvtC80LDQvdC00YMg0Log0L7QsdGA0LDQsdC+0YLRh9C40LrRgyDQmNCb0Jgg0LLRi9Cy0L7QtNC40YIgTkxVINGA0LXQt9GD0LvRjNGC0LDRgiDQsiDQtNC10LHQsNCzLdGA0LXQttC40LzQtS4KICAgICIiIgogICAgZ2xvYmFsIEFQUF9BTElBU0VTCgogICAgaWYgbm90IHBhcnNlZF9ubHUgb3IgImludGVudCIgbm90IGluIHBhcnNlZF9ubHU6CiAgICAgICAgIyDQlNC+0LHQsNCy0LjQvCDQv9GA0LXRhNC40LrRgSBERUJVRy9FUlJPUiDQsiDQt9Cw0LLQuNGB0LjQvNC+0YHRgtC4INC+0YIg0YDQtdC20LjQvNCwCiAgICAgICAgbG9nX3ByZWZpeCA9ICJbRElTUEFUQ0hFUl9ERUJVR10iIGlmIGRlYnVnX21vZGUgZWxzZSAiW0RJU1BBVENIRVJdW0VSUk9SXSIKICAgICAgICBwcmludChmIntsb2dfcHJlZml4fSDQn9C+0LvRg9GH0LXQvdGLINC90LXQstCw0LvQuNC00L3Ri9C1IE5MVSDQtNCw0L3QvdGL0LUuIikKICAgICAgICByZXR1cm4gItCd0LUg0YPQtNCw0LvQvtGB0Ywg0YDQsNGB0L/QvtC30L3QsNGC0Ywg0LrQvtC80LDQvdC00YMuIgoKICAgIGludGVudCA9IHBhcnNlZF9ubHUuZ2V0KCJpbnRlbnQiKQogICAgcGFyYW1ldGVycyA9IHBhcnNlZF9ubHUuZ2V0KCJwYXJhbWV0ZXJzIiwge30pCiAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQn9C+0LvRg9GH0LXQvSDQuNC90YLQtdC90YI6ICd7aW50ZW50fScsINC/0LDRgNCw0LzQtdGC0YDRizoge3BhcmFtZXRlcnN9IikKCiAgICAjIC0tLSDQoNCV0JbQmNCcINCU0JXQkdCQ0JPQkCAtLS0KICAgIGlmIGRlYnVnX21vZGU6CiAgICAgICAgcHJpbnQoIj0iKjIwICsgIiBERUJVRyBNT0RFICIgKyAiPSIqMjApCiAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl9ERUJVR10g0KDQsNGB0L/QvtC30L3QsNC90L3Ri9C5INC40L3RgtC10L3Rgjoge2ludGVudH0iKQogICAgICAgIHByaW50KGYiW0RJU1BBVENIRVJfREVCVUddINCg0LDRgdC/0L7Qt9C90LDQvdC90YvQtSDQv9Cw0YDQsNC80LXRgtGA0Ys6IHtwYXJhbWV0ZXJzfSIpCiAgICAgICAgIyDQndC+0YDQvNCw0LvQuNC30YPQtdC8INC40LzRjyDQtNCw0LbQtSDQsiDQtNC10LHQsNCz0LUsINGH0YLQvtCx0Ysg0LLQuNC00LXRgtGMLCDQutCw0Log0L7QvdC+INCx0YPQtNC10YIg0L/QtdGA0LXQtNCw0L3QvgogICAgICAgIGlmIGludGVudCBpbiBbInJ1bl9hcHAiLCAiY2xvc2VfYXBwIiwgImFkZF9hbGlhcyJdIGFuZCAiYXBwX25hbWUiIGluIHBhcmFtZXRlcnM6CiAgICAgICAgICAgICBhcHBfbmFtZV9yYXcgPSBwYXJhbWV0ZXJzLmdldCgiYXBwX25hbWUiKQogICAgICAgICAgICAgY2Fub25pY2FsX25hbWUgPSBBUFBfQUxJQVNFUy5nZXQoYXBwX25hbWVfcmF3Lmxvd2VyKCksIGFwcF9uYW1lX3Jhdy5sb3dlcigpKQogICAgICAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl9ERUJVR10g0J3QvtGA0LzQsNC70LjQt9C+0LLQsNC90L3QvtC1INC40LzRjyAo0LTQu9GPINGB0L/RgNCw0LLQutC4KTogJ3tjYW5vbmljYWxfbmFtZX0nIikKICAgICAgICBwcmludCgiPSIqNTIpCiAgICAgICAgcmV0dXJuIGYi0JTQldCR0JDQkzog0KDQsNGB0L/QvtC30L3QsNC90L46INC40L3RgtC10L3Rgj0ne2ludGVudH0nLCDQv9Cw0YDQsNC80LXRgtGA0Ys9e3BhcmFtZXRlcnN9IgogICAgIyAtLS0g0JrQntCd0JXQpiDQoNCV0JbQmNCc0JAg0JTQldCR0JDQk9CQIC0tLQoKICAgICMgLS0tINCg0JDQkdCe0KfQmNCZINCg0JXQltCY0JwgKNCx0LvQvtC6IGVsc2UpIC0tLQogICAgZWxzZToKICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQnNCw0YDRiNGA0YPRgtC40LfQsNGG0LjRjyDQuNC90YLQtdC90YLQsDogJ3tpbnRlbnR9JyIpCiAgICAgICAgaGFuZGxlcl9mdW5jdGlvbiA9IElOVEVOVF9IQU5ETEVSUy5nZXQoaW50ZW50KQoKICAgICAgICBpZiBoYW5kbGVyX2Z1bmN0aW9uOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAjIC0tLSDQm9C+0LPQuNC60LAg0LLRi9C30L7QstCwINC+0LHRgNCw0LHQvtGC0YfQuNC60L7QsiAtLS0KICAgICAgICAgICAgICAgIGlmIGludGVudCA9PSAicnVuX2FwcCI6ICMg0JrQu9GO0YcgJ3J1bl9hcHAnCiAgICAgICAgICAgICAgICAgICAgIGFwcF9uYW1lX3JhdyA9IHBhcmFtZXRlcnMuZ2V0KCJhcHBfbmFtZSIpCiAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCBhcHBfbmFtZV9yYXc6IHJldHVybiAi0J3QtSDQv9C+0L3Rj9C70LAsINC60LDQutC+0LUg0L/RgNC40LvQvtC20LXQvdC40LUg0L3Rg9C20L3Qvi4iCiAgICAgICAgICAgICAgICAgICAgICMg0J3QvtGA0LzQsNC70LjQt9Cw0YbQuNGPINC40LzQtdC90Lgg0J/QldCg0JXQlCDQstGL0LfQvtCy0L7QvCDQvtCx0YDQsNCx0L7RgtGH0LjQutCwCiAgICAgICAgICAgICAgICAgICAgIGNhbm9uaWNhbF9uYW1lID0gQVBQX0FMSUFTRVMuZ2V0KGFwcF9uYW1lX3Jhdy5sb3dlcigpLCBhcHBfbmFtZV9yYXcubG93ZXIoKSkKICAgICAgICAgICAgICAgICAgICAgIyDQktGL0LfRi9Cy0LDQtdC8INC+0LHRgNCw0LHQvtGC0YfQuNC6INGBINC90L7RgNC80LDQu9C40LfQvtCy0LDQvdC90YvQvCDQuNC80LXQvdC10LwKICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZXJfZnVuY3Rpb24oY2Fub25pY2FsX25hbWUpICMgaGFuZGxlX21hbmFnZV9hcHAg0L7QttC40LTQsNC10YIgY2Fub25pY2FsX25hbWUKCiAgICAgICAgICAgICAgICAjIFRPRE86INCU0L7QsdCw0LLQuNGC0YwgZWxpZiDQtNC70Y8gY2xvc2VfYXBwLCBhZGRfYWxpYXMg0Lgg0YIu0LQuLCDQv9C10YDQtdC00LDQstCw0Y8g0L3Rg9C20L3Ri9C1INC/0LDRgNCw0LzQtdGC0YDRiwogICAgICAgICAgICAgICAgIyBlbGlmIGludGVudCA9PSAiY2xvc2VfYXBwIjoKICAgICAgICAgICAgICAgICMgICAgYXBwX25hbWVfcmF3ID0gcGFyYW1ldGVycy5nZXQoImFwcF9uYW1lIikKICAgICAgICAgICAgICAgICMgICAgaWYgbm90IGFwcF9uYW1lX3JhdzogcmV0dXJuICLQndC1INC/0L7QvdGP0LvQsCwg0LrQsNC60L7QtSDQv9GA0LjQu9C+0LbQtdC90LjQtSDQt9Cw0LrRgNGL0YLRjC4iCiAgICAgICAgICAgICAgICAjICAgIGNhbm9uaWNhbF9uYW1lID0gQVBQX0FMSUFTRVMuZ2V0KGFwcF9uYW1lX3Jhdy5sb3dlcigpLCBhcHBfbmFtZV9yYXcubG93ZXIoKSkKICAgICAgICAgICAgICAgICMgICAgcmV0dXJuIGhhbmRsZXJfZnVuY3Rpb24oY2Fub25pY2FsX25hbWUpICMgaGFuZGxlX2Nsb3NlX2FwcCDQvtC20LjQtNCw0LXRgiBjYW5vbmljYWxfbmFtZQogICAgICAgICAgICAgICAgIyBlbGlmIGludGVudCA9PSAiYWRkX2FsaWFzIjoKICAgICAgICAgICAgICAgICMgICAgYWxpYXNfbmFtZSA9IHBhcmFtZXRlcnMuZ2V0KCJhbGlhc19uYW1lIikKICAgICAgICAgICAgICAgICMgICAgY2Fub25pY2FsX25hbWVfcGFyYW0gPSBwYXJhbWV0ZXJzLmdldCgiY2Fub25pY2FsX25hbWUiKQogICAgICAgICAgICAgICAgIyAgICBpZiBub3QgYWxpYXNfbmFtZSBvciBub3QgY2Fub25pY2FsX25hbWVfcGFyYW06IHJldHVybiAi0J3QtSDQv9C+0L3Rj9C70LAsINC60LDQutC+0Lkg0LDQu9C40LDRgSDQuCDQtNC70Y8g0LrQsNC60L7Qs9C+INC/0YDQuNC70L7QttC10L3QuNGPINC00L7QsdCw0LLQuNGC0YwuIgogICAgICAgICAgICAgICAgIyAgICAjINCf0LXRgNC10LTQsNC10Lwg0L7QsdCwINC/0LDRgNCw0LzQtdGC0YDQsCwg0L7QsdGA0LDQsdC+0YLRh9C40Log0YHQsNC8INC+0LHQvdC+0LLQuNGCINCz0LvQvtCx0LDQu9GM0L3Ri9C1INCw0LvQuNCw0YHRiwogICAgICAgICAgICAgICAgIyAgICByZXR1cm4gaGFuZGxlcl9mdW5jdGlvbihhbGlhc19uYW1lLCBjYW5vbmljYWxfbmFtZV9wYXJhbSkKCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAjINCU0LvRjyDQtNGA0YPQs9C40YUg0LjQvdGC0LXQvdGC0L7QsiAo0LrQvtCz0LTQsCDQvtC90Lgg0LHRg9C00YPRgikg0L/QtdGA0LXQtNCw0LXQvCDQstC10YHRjCDRgdC70L7QstCw0YDRjCDQv9Cw0YDQsNC80LXRgtGA0L7QsgogICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlcl9mdW5jdGlvbihwYXJhbWV0ZXJzKSAjINCf0YDQuNC80LXRgAoKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl1bRVJST1JdINCe0YjQuNCx0LrQsCDQv9GA0Lgg0LLRi9C/0L7Qu9C90LXQvdC40Lgg0L7QsdGA0LDQsdC+0YLRh9C40LrQsCDQtNC70Y8g0LjQvdGC0LXQvdGC0LAgJ3tpbnRlbnR9Jzoge2V9IikKICAgICAgICAgICAgICAgIGltcG9ydCB0cmFjZWJhY2sKICAgICAgICAgICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgICAgICAgICAgcmV0dXJuIGYi0J/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsCDQv9GA0Lgg0LLRi9C/0L7Qu9C90LXQvdC40Lgg0LrQvtC80LDQvdC00YsgJ3tpbnRlbnR9Jy4iCiAgICAgICAgZWxzZToKICAgICAgICAgICAgIyDQntCx0YDQsNCx0L7RgtGH0LjQuiDQvdC1INC90LDQudC00LXQvQogICAgICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtXQVJOXSDQntCx0YDQsNCx0L7RgtGH0LjQuiDQtNC70Y8g0LjQvdGC0LXQvdGC0LAgJ3tpbnRlbnR9JyDQvdC1INC90LDQudC00LXQvS4iKQogICAgICAgICAgICB1bmtub3duX2hhbmRsZXIgPSBJTlRFTlRfSEFORExFUlMuZ2V0KCJ1bmtub3duIikKICAgICAgICAgICAgaWYgdW5rbm93bl9oYW5kbGVyOgogICAgICAgICAgICAgICAgcmV0dXJuIHVua25vd25faGFuZGxlcihwYXJhbWV0ZXJzKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuICLQmNC30LLQuNC90LjRgtC1LCDRjyDQv9C+0LrQsCDQvdC1INGD0LzQtdGOINC+0LHRgNCw0LHQsNGC0YvQstCw0YLRjCDRgtCw0LrRg9GOINC60L7QvNCw0L3QtNGDLiIKCiMgLS0tINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINC/0YDQuCDQuNC80L/QvtGA0YLQtSAtLS0KaW5pdGlhbGl6ZV9kaXNwYXRjaGVyKCk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAGAUAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAuhEAAAAAAAAAAAAAuhEAAAAAAAC6EQAAAAAAAOoTAAAjINCk0LjQvdCw0LvRjNC90LDRjyDQstC10YDRgdC40Y86IGNvbW1hbmRfZGlzcGF0Y2hlci5weSAo0KDQsNCx0L7Rh9Cw0Y8gKyBEZWJ1ZykKIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KCmltcG9ydCB1dGlscwojINCY0LzQv9C+0YDRgtC40YDRg9C10Lwg0L7QsdGA0LDQsdC+0YLRh9C40LrQuCDQuNC3INC/0LDQv9C60LggaW50ZW50X2hhbmRsZXJzCmZyb20gaW50ZW50X2hhbmRsZXJzIGltcG9ydCBoYW5kbGVfbWFuYWdlX2FwcAojIFRPRE86INCY0LzQv9C+0YDRgtC40YDQvtCy0LDRgtGMINC+0LHRgNCw0LHQvtGC0YfQuNC60Lgg0LTQu9GPIGNsb3NlX2FwcCwgYWRkX2FsaWFzINC4INGCLtC0Liwg0LrQvtCz0LTQsCDQvtC90Lgg0LHRg9C00YPRgiDQs9C+0YLQvtCy0YsKIyBmcm9tIGludGVudF9oYW5kbGVycyBpbXBvcnQgaGFuZGxlX2Nsb3NlX2FwcCAjINCf0YDQuNC80LXRgCAtINC/0L7QutCwINC90LXRgiDRjdGC0L7Qs9C+INGE0LDQudC70LAKIyBmcm9tIGludGVudF9oYW5kbGVycyBpbXBvcnQgaGFuZGxlX2FkZF9hbGlhcyAjINCf0YDQuNC80LXRgCAtINC/0L7QutCwINC90LXRgiDRjdGC0L7Qs9C+INGE0LDQudC70LAKCiMg0JPQu9C+0LHQsNC70YzQvdCw0Y8g0L/QtdGA0LXQvNC10L3QvdCw0Y8g0LTQu9GPINCw0LvQuNCw0YHQvtCyCkFQUF9BTElBU0VTID0ge30KCiMg0KHQu9C+0LLQsNGA0Ywg0LzQsNGA0YjRgNGD0YLQuNC30LDRhtC40Lgg0LjQvdGC0LXQvdGC0L7QsiDQuiDRhNGD0L3QutGG0LjRj9C8LdC+0LHRgNCw0LHQvtGC0YfQuNC60LDQvApJTlRFTlRfSEFORExFUlMgPSB7CiAgICAibWFuYWdlX2FwcCI6IGhhbmRsZV9tYW5hZ2VfYXBwLmhhbmRsZSwgIyDQodCy0Y/Qt9GL0LLQsNC10Lwg0LjQvdGC0LXQvdGCINGBINGE0YPQvdC60YbQuNC10LkgaGFuZGxlINC40Lcg0L3Rg9C20L3QvtCz0L4g0LzQvtC00YPQu9GPCiAgICAjIFRPRE86INCU0L7QsdCw0LLQuNGC0Ywg0LTRgNGD0LPQuNC1INC40L3RgtC10L3RgtGLINC4INC40YUg0L7QsdGA0LDQsdC+0YLRh9C40LrQuAogICAgIyAiY2xvc2VfYXBwIjogaGFuZGxlX2Nsb3NlX2FwcC5oYW5kbGUsICMg0J7QqNCY0JHQmtCQOiDQndC1INC90YPQttC90L4sINGC0LDQuiDQutCw0LogY2xvc2UgLSDRjdGC0L4gYWN0aW9uINCy0L3Rg9GC0YDQuCBtYW5hZ2VfYXBwCiAgICAjICJhZGRfYWxpYXMiOiBoYW5kbGVfYWRkX2FsaWFzLmhhbmRsZSwKICAgICMgIm1hbmFnZV9zeXN0ZW0iOiBoYW5kbGVfbWFuYWdlX3N5c3RlbS5oYW5kbGUsCiAgICAjIC4uLiDQuCDRgi7QtC4KfQoKZGVmIGluaXRpYWxpemVfZGlzcGF0Y2hlcigpOgogICAgIiIi0JfQsNCz0YDRg9C20LDQtdGCINCw0LvQuNCw0YHRiyDQv9GA0Lgg0YHRgtCw0YDRgtC1LiIiIgogICAgZ2xvYmFsIEFQUF9BTElBU0VTCiAgICBBUFBfQUxJQVNFUyA9IHV0aWxzLmxvYWRfYWxpYXNlcygpCiAgICBpZiBBUFBfQUxJQVNFUzoKICAgICAgICBwcmludChmIltESVNQQVRDSEVSXVtJTkZPXSDQkNC70LjQsNGB0Ysg0YPRgdC/0LXRiNC90L4g0LfQsNCz0YDRg9C20LXQvdGLICh7bGVuKEFQUF9BTElBU0VTKX0g0YjRgikuIikKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoIltESVNQQVRDSEVSXVtXQVJOXSDQkNC70LjQsNGB0Ysg0L3QtSDQt9Cw0LPRgNGD0LbQtdC90Ysg0LjQu9C4INGE0LDQudC7INC/0YPRgdGCLiIpCgojIC0tLSDQpNGD0L3QutGG0LjRjyDQodCd0J7QktCQINC/0YDQuNC90LjQvNCw0LXRgiBkZWJ1Z19tb2RlIC0tLQpkZWYgZGlzcGF0Y2hfY29tbWFuZChwYXJzZWRfbmx1LCBkZWJ1Z19tb2RlPUZhbHNlKToKICAgICIiIgogICAg0JzQsNGA0YjRgNGD0YLQuNC30LjRgNGD0LXRgiDQutC+0LzQsNC90LTRgyDQuiDQvtCx0YDQsNCx0L7RgtGH0LjQutGDINCY0JvQmCDQstGL0LLQvtC00LjRgiBOTFUg0YDQtdC30YPQu9GM0YLQsNGCINCyINC00LXQsdCw0LMt0YDQtdC20LjQvNC1LgogICAgIiIiCiAgICBpZiBub3QgcGFyc2VkX25sdSBvciAiaW50ZW50IiBub3QgaW4gcGFyc2VkX25sdToKICAgICAgICBsb2dfcHJlZml4ID0gIltESVNQQVRDSEVSX0RFQlVHXSIgaWYgZGVidWdfbW9kZSBlbHNlICJbRElTUEFUQ0hFUl1bRVJST1JdIgogICAgICAgIHByaW50KGYie2xvZ19wcmVmaXh9INCf0L7Qu9GD0YfQtdC90Ysg0L3QtdCy0LDQu9C40LTQvdGL0LUgTkxVINC00LDQvdC90YvQtS4iKQogICAgICAgIHJldHVybiAi0J3QtSDRg9C00LDQu9C+0YHRjCDRgNCw0YHQv9C+0LfQvdCw0YLRjCDQutC+0LzQsNC90LTRgy4iCgogICAgaW50ZW50ID0gcGFyc2VkX25sdS5nZXQoImludGVudCIpCiAgICBwYXJhbWV0ZXJzID0gcGFyc2VkX25sdS5nZXQoInBhcmFtZXRlcnMiLCB7fSkKICAgIHByaW50KGYiW0RJU1BBVENIRVJdW0lORk9dINCf0L7Qu9GD0YfQtdC9INC40L3RgtC10L3RgjogJ3tpbnRlbnR9Jywg0L/QsNGA0LDQvNC10YLRgNGLOiB7cGFyYW1ldGVyc30iKQoKICAgICMgLS0tINCg0JXQltCY0Jwg0JTQldCR0JDQk9CQIC0tLQogICAgaWYgZGVidWdfbW9kZToKICAgICAgICBwcmludCgiPSIqMjAgKyAiIERFQlVHIE1PREUgIiArICI9IioyMCkKICAgICAgICBwcmludChmIltESVNQQVRDSEVSX0RFQlVHXSDQoNCw0YHQv9C+0LfQvdCw0L3QvdGL0Lkg0LjQvdGC0LXQvdGCOiB7aW50ZW50fSIpCiAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl9ERUJVR10g0KDQsNGB0L/QvtC30L3QsNC90L3Ri9C1INC/0LDRgNCw0LzQtdGC0YDRizoge3BhcmFtZXRlcnN9IikKICAgICAgICAjINCf0L7QutCw0LfRi9Cy0LDQtdC8INC90L7RgNC80LDQu9C40LfQsNGG0LjRjiDQtNC70Y8g0YDQtdC70LXQstCw0L3RgtC90YvRhSDQuNC90YLQtdC90YLQvtCyCiAgICAgICAgaWYgaW50ZW50ID09ICJtYW5hZ2VfYXBwIiBhbmQgImFwcF9uYW1lIiBpbiBwYXJhbWV0ZXJzOgogICAgICAgICAgICAgYXBwX25hbWVfcmF3ID0gcGFyYW1ldGVycy5nZXQoImFwcF9uYW1lIikKICAgICAgICAgICAgIGNhbm9uaWNhbF9uYW1lID0gQVBQX0FMSUFTRVMuZ2V0KGFwcF9uYW1lX3Jhdy5sb3dlcigpLCBhcHBfbmFtZV9yYXcubG93ZXIoKSkKICAgICAgICAgICAgIHByaW50KGYiW0RJU1BBVENIRVJfREVCVUddINCd0L7RgNC80LDQu9C40LfQvtCy0LDQvdC90L7QtSDQuNC80Y8gYXBwX25hbWUgKNC00LvRjyDRgdC/0YDQsNCy0LrQuCk6ICd7Y2Fub25pY2FsX25hbWV9JyIpCiAgICAgICAgZWxpZiBpbnRlbnQgPT0gImFkZF9hbGlhcyIgYW5kICJhbGlhc19uYW1lIiBpbiBwYXJhbWV0ZXJzOgogICAgICAgICAgICAgYWxpYXNfbmFtZSA9IHBhcmFtZXRlcnMuZ2V0KCJhbGlhc19uYW1lIikKICAgICAgICAgICAgIHByaW50KGYiW0RJU1BBVENIRVJfREVCVUddINCY0LzRjyDQsNC70LjQsNGB0LAgKNC00LvRjyDRgdC/0YDQsNCy0LrQuCk6ICd7YWxpYXNfbmFtZS5sb3dlcigpfSciKQogICAgICAgIHByaW50KCI9Iio1MikKICAgICAgICByZXR1cm4gZiLQlNCV0JHQkNCTOiDQoNCw0YHQv9C+0LfQvdCw0L3Qvjog0LjQvdGC0LXQvdGCPSd7aW50ZW50fScsINC/0LDRgNCw0LzQtdGC0YDRiz17cGFyYW1ldGVyc30iCiAgICAjIC0tLSDQmtCe0J3QldCmINCg0JXQltCY0JzQkCDQlNCV0JHQkNCT0JAgLS0tCgogICAgIyAtLS0g0KDQkNCR0J7Qp9CY0Jkg0KDQldCW0JjQnCAo0LHQu9C+0LogZWxzZSkgLS0tCiAgICBlbHNlOgogICAgICAgIHByaW50KGYiW0RJU1BBVENIRVJdW0lORk9dINCc0LDRgNGI0YDRg9GC0LjQt9Cw0YbQuNGPINC40L3RgtC10L3RgtCwOiAne2ludGVudH0nIikKICAgICAgICBoYW5kbGVyX2Z1bmN0aW9uID0gSU5URU5UX0hBTkRMRVJTLmdldChpbnRlbnQpCgogICAgICAgIGlmIGhhbmRsZXJfZnVuY3Rpb246CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICMg0JLRi9C30YvQstCw0LXQvCDQvdCw0LnQtNC10L3QvdGL0Lkg0L7QsdGA0LDQsdC+0YLRh9C40LosINC/0LXRgNC10LTQsNCy0LDRjyDQtdC80YMg0L/QsNGA0LDQvNC10YLRgNGLINC4INCw0LvQuNCw0YHRiwogICAgICAgICAgICAgICAgIyDQntCx0YDQsNCx0L7RgtGH0LjQuiDRgdCw0Lwg0YDQsNC30LHQtdGA0LXRgtGB0Y8g0YEg0L/QsNGA0LDQvNC10YLRgNCw0LzQuCAo0LLQutC70Y7Rh9Cw0Y8gJ2FjdGlvbicpCiAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlcl9mdW5jdGlvbihwYXJhbWV0ZXJzLCBBUFBfQUxJQVNFUykgIyDQn9C10YDQtdC00LDQtdC8INC/0LDRgNCw0LzQtdGC0YDRiyDQuCDQsNC70LjQsNGB0YsKCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHByaW50KGYiW0RJU1BBVENIRVJdW0VSUk9SXSDQntGI0LjQsdC60LAg0L/RgNC4INCy0YvQv9C+0LvQvdC10L3QuNC4INC+0LHRgNCw0LHQvtGC0YfQuNC60LAg0LTQu9GPINC40L3RgtC10L3RgtCwICd7aW50ZW50fSc6IHtlfSIpCiAgICAgICAgICAgICAgICBpbXBvcnQgdHJhY2ViYWNrCiAgICAgICAgICAgICAgICB0cmFjZWJhY2sucHJpbnRfZXhjKCkKICAgICAgICAgICAgICAgIHJldHVybiBmItCf0YDQvtC40LfQvtGI0LvQsCDQvtGI0LjQsdC60LAg0L/RgNC4INCy0YvQv9C+0LvQvdC10L3QuNC4INC60L7QvNCw0L3QtNGLICd7aW50ZW50fScuIgogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMg0J7QsdGA0LDQsdC+0YLRh9C40Log0L3QtSDQvdCw0LnQtNC10L0KICAgICAgICAgICAgcHJpbnQoZiJbRElTUEFUQ0hFUl1bV0FSTl0g0J7QsdGA0LDQsdC+0YLRh9C40Log0LTQu9GPINC40L3RgtC10L3RgtCwICd7aW50ZW50fScg0L3QtSDQvdCw0LnQtNC10L0uIikKICAgICAgICAgICAgIyDQnNC+0LbQvdC+INC00L7QsdCw0LLQuNGC0Ywg0L7QsdGA0LDQsdC+0YLQutGDICd1bmtub3duJyDQuNC90YLQtdC90YLQsCDQt9C00LXRgdGMLCDQtdGB0LvQuCDQvdGD0LbQvdC+CiAgICAgICAgICAgIHJldHVybiAi0JjQt9Cy0LjQvdC40YLQtSwg0Y8g0L/QvtC60LAg0L3QtSDRg9C80LXRjiDQvtCx0YDQsNCx0LDRgtGL0LLQsNGC0Ywg0YLQsNC60YPRjiDQutC+0LzQsNC90LTRgy4iCgojIC0tLSDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDQv9GA0Lgg0LjQvNC/0L7RgNGC0LUgLS0tCmluaXRpYWxpemVfZGlzcGF0Y2hlcigp",
					"AQAAAAAAAAABAAAAAAAAAAAAAAB4DwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/home/qwerty/familiar/README.md",
			"settings":
			{
				"buffer_size": 4114,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAEhAAAAAAAAAAAAAAEhAAAAAAAAASEAAAAAAAAAoAAAAjIGZhbWlsaWFy",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAoAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "manage_app_action.py",
			"settings":
			{
				"buffer_size": 4108,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAANoUAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "close_app_action.py",
			"settings":
			{
				"buffer_size": 2694,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "# Файл: actions/close_app_action.py"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAhgoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/qwerty/familiar",
		"/home/qwerty/familiar/actions",
		"/home/qwerty/familiar/config",
		"/home/qwerty/familiar/intent_handlers"
	],
	"file_history":
	[
		"/home/qwerty/familiar/config/app_aliases.json",
		"/home/qwerty/familiar/actions/run_app_action.py",
		"/home/qwerty/familiar/nlu_processor.py",
		"/home/qwerty/familiar/utils.py",
		"/home/qwerty/familiar/command_dispatcher.py",
		"/home/qwerty/familiar/familiar.py",
		"/home/qwerty/familiar/dispatcher.py",
		"/home/qwerty/familiar/main.py",
		"/home/qwerty/familiar/app_aliases.json",
		"/home/qwerty/Desktop/dispatcher.txt",
		"/home/qwerty/Desktop/app_aliases.txt",
		"/home/qwerty/dispapp/dispatcher.py",
		"/home/qwerty/Desktop/txt/old1",
		"/home/qwerty/Desktop/jsonl/convert.py",
		"/home/qwerty/Desktop/jsonl/1206.jsonl",
		"/home/qwerty/Desktop/jsonl/gemini_8.jsonl",
		"/home/qwerty/Desktop/jsonl/gemini_1.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_4.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_20.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_5.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_17.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_3.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_8.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_2_jsonl.txt",
		"/home/qwerty/tiger_finetune/jsonl/gemini_11.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_10.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_13.jsonl",
		"/home/qwerty/Desktop/jsonl/gemini_10.jsonl",
		"/home/qwerty/tiger_finetune/jsonl/gemini_30.jsonl",
		"/home/qwerty/Desktop/txt/gemini_10.txt",
		"/home/qwerty/Downloads/Telegram Desktop/gemini_0 (3).txt",
		"/home/qwerty/tiger_finetune/jsonl/gemini_23.jsonl",
		"/home/qwerty/Desktop/snake_final_fixed_v2.html",
		"/home/qwerty/Desktop/snake_final_corrected.html",
		"/home/qwerty/Desktop/snake_final_fixed.html",
		"/home/qwerty/Desktop/arkanoid.html",
		"/home/qwerty/Desktop/borders.html",
		"/home/qwerty/Desktop/snake.html"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"run_app"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"manage_app"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/qwerty/familiar/intent_handlers/handle_manage_app.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3357,
						"regions":
						{
						},
						"selection":
						[
							[
								3357,
								3357
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/qwerty/familiar/nlu_processor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8015,
						"regions":
						{
						},
						"selection":
						[
							[
								8015,
								8015
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 557.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/qwerty/familiar/familiar.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2303,
						"regions":
						{
						},
						"selection":
						[
							[
								2303,
								2303
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/qwerty/familiar/install.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4419,
						"regions":
						{
						},
						"selection":
						[
							[
								4419,
								4419
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/qwerty/familiar/intent_handlers/handle_add_alias.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3974,
						"regions":
						{
						},
						"selection":
						[
							[
								3974,
								3974
							]
						],
						"settings":
						{
							"auto_name": "# File: intent_handlers/handle_add_alias.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 477.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/qwerty/familiar/utils.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5326,
						"regions":
						{
						},
						"selection":
						[
							[
								5326,
								5326
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 867.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/qwerty/familiar/update_familiar_env.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1146,
						"regions":
						{
						},
						"selection":
						[
							[
								1146,
								1146
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/qwerty/familiar/telegram_bot.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4493,
						"regions":
						{
						},
						"selection":
						[
							[
								4493,
								4493
							]
						],
						"settings":
						{
							"auto_name": "# -*- coding: utf-8 -*-",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 559.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/qwerty/familiar/command_dispatcher.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4538,
						"regions":
						{
						},
						"selection":
						[
							[
								4538,
								4538
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 491.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/qwerty/familiar/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4114,
						"regions":
						{
						},
						"selection":
						[
							[
								4114,
								4114
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "manage_app_action.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4108,
						"regions":
						{
						},
						"selection":
						[
							[
								4108,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "close_app_action.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2694,
						"regions":
						{
						},
						"selection":
						[
							[
								35,
								35
							]
						],
						"settings":
						{
							"auto_name": "# Файл: actions/close_app_action.py",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "familiar.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 337.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
